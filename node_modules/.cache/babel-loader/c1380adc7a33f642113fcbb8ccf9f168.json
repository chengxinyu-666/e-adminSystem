{"remainingRequest":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\babel-loader\\lib\\index.js!D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workCode\\xiaoE\\大圣系统源码\\admin\\src\\views\\channel\\channelstatistics.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\src\\views\\channel\\channelstatistics.vue","mtime":1678090956000},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\babel.config.js","mtime":1666766764000},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678778409044},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1678778390429},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678778409044},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1678778410194}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.number.parse-float\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _defineProperty from \"D:/workCode/xiaoE/\\u5927\\u5723\\u7CFB\\u7EDF\\u6E90\\u7801/admin/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { getList, getDetail, add, update, remove } from \"@/api/channel/channel\";\nimport { mapGetters } from \"vuex\";\nimport Clipboard from 'clipboard';\nimport moment from \"moment\";\nimport { toFixed } from \"../../constant/goods/constant\";\nimport { dictionary } from \"../../api/system/dict\";\nexport default {\n  data: function data() {\n    return {\n      form: {},\n      query: {},\n      loading: true,\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      selectionList: [],\n      data: []\n    };\n  },\n  created: function created() {\n    console.log(this.userInfo);\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"userInfo\", \"permission\"])), {}, {\n    permissionList: function permissionList() {\n      return {\n        addBtn: this.vaildData(this.permission.channelstatistics_add, false),\n        viewBtn: this.vaildData(this.permission.channelstatistics_view, false),\n        delBtn: this.vaildData(this.permission.channelstatistics_delete, false),\n        editBtn: this.vaildData(this.permission.channelstatistics_edit, false)\n      };\n    },\n    options: function options() {\n      var options = {\n        height: 'auto',\n        calcHeight: 210,\n        searchShow: true,\n        searchMenuSpan: 6,\n        menuWidth: 180,\n        dialogWidth: 40,\n        tip: false,\n        border: true,\n        index: true,\n        viewBtn: false,\n        editBtn: false,\n        delBtn: false,\n        addBtn: this.userInfo.authority.includes('channel'),\n        selection: true,\n        column: [{\n          label: \"渠道商\",\n          prop: \"realName\",\n          addDisplay: false,\n          editDisplay: false,\n          search: true,\n          rules: [{\n            required: true,\n            message: \"请输入渠道创建者\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: '时间',\n          prop: 'createTime',\n          type: 'daterange',\n          searchSpan: 8,\n          searchRange: true,\n          format: 'yyyy-MM-dd',\n          valueFormat: 'yyyy-MM-dd',\n          addDisplay: false,\n          editDisplay: false,\n          hide: true,\n          search: true\n        }, {\n          label: \"链接名称\",\n          prop: \"name\",\n          addDisplay: true,\n          editDisplay: true,\n          rules: [{\n            required: true,\n            message: \"请输入渠道code\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"渠道链接\",\n          prop: \"url\",\n          width: 200,\n          addDisplay: false,\n          editDisplay: false,\n          rules: [{\n            required: true,\n            message: \"请输入链接名称\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"渠道状态\",\n          prop: \"status\",\n          type: \"select\",\n          addDisplay: false,\n          editDisplay: false,\n          dicUrl: \"/api/blade-system/dict/dictionary?code=channel_status\",\n          props: {\n            label: \"dictValue\",\n            value: \"dictKey\"\n          }\n        }, {\n          label: \"点击数量\",\n          addDisplay: false,\n          editDisplay: false,\n          prop: \"clickNum\"\n        }, {\n          label: \"注册数量\",\n          addDisplay: false,\n          editDisplay: false,\n          prop: \"clientNum\"\n        }, {\n          label: \"初始化订单\",\n          addDisplay: false,\n          editDisplay: false,\n          width: 90,\n          prop: \"orderInitNum\"\n        }, {\n          label: \"总订单\",\n          addDisplay: false,\n          editDisplay: false,\n          prop: \"orderFreezeNum\"\n        }, {\n          label: \"总签合同\",\n          width: 90,\n          addDisplay: false,\n          editDisplay: false,\n          prop: \"orderSignNum\"\n        }, {\n          label: \"总发货数\",\n          addDisplay: false,\n          editDisplay: false,\n          prop: \"orderSendNum\"\n        }, {\n          label: \"逾期数量\",\n          addDisplay: false,\n          editDisplay: false,\n          prop: \"orderOverdueNum\"\n        }, {\n          label: \"申请数\",\n          addDisplay: false,\n          editDisplay: false,\n          prop: \"orderExamineNum\"\n        }, {\n          label: \"通过率\",\n          addDisplay: false,\n          editDisplay: false,\n          prop: \"orderExamineOkNum\"\n        }, {\n          label: \"进件率\",\n          addDisplay: false,\n          editDisplay: false,\n          prop: \"inComeRate\",\n          slot: true\n        }]\n      };\n      if (!this.userInfo.tenantId.includes('000000')) {\n        options.column = options.column.filter(function (item) {\n          if (item.prop == 'realName') {\n            return false;\n          }\n          return true;\n        });\n      }\n      return options;\n    },\n    ids: function ids() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  }),\n  methods: {\n    orderExamineNum: function orderExamineNum(row) {\n      var clickNum = row.clickNum == \"\" ? 0 : row.clickNum;\n      return toFixed(Number.parseFloat(clickNum) <= 0 ? 0 : Number.parseFloat(row.orderExamineNum) / Number.parseFloat(clickNum), 2) + \"%\";\n    },\n    copy: function copy(bt) {\n      var _this = this;\n      var clipboard = new Clipboard(\".\" + bt);\n      clipboard.on('success', function (e) {\n        _this.$message({\n          type: \"success\",\n          message: \"复制成功!\"\n        });\n        clipboard.destroy();\n      });\n      clipboard.on('error', function (e) {\n        // 不支持复制\n        _this.$message({\n          type: \"success\",\n          message: \"该浏览器不支持自动复制!\"\n        });\n        clipboard.destroy();\n      });\n    },\n    rowSave: function rowSave(row, done, loading) {\n      var _this2 = this;\n      delete row.createTime;\n      add(row).then(function () {\n        done();\n        _this2.onLoad(_this2.page);\n        _this2.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowUpdate: function rowUpdate(row, index, done, loading) {\n      var _this3 = this;\n      delete row.createTime;\n      update(row).then(function () {\n        done();\n        _this3.onLoad(_this3.page);\n        _this3.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowDel: function rowDel(row) {\n      var _this4 = this;\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(row.id);\n      }).then(function () {\n        _this4.onLoad(_this4.page);\n        _this4.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      });\n    },\n    handleDelete: function handleDelete() {\n      var _this5 = this;\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(_this5.ids);\n      }).then(function () {\n        _this5.onLoad(_this5.page);\n        _this5.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n        _this5.$refs.crud.toggleSelection();\n      });\n    },\n    beforeOpen: function beforeOpen(done, type) {\n      var _this6 = this;\n      if ([\"edit\", \"view\"].includes(type)) {\n        getDetail(this.form.id).then(function (res) {\n          _this6.form = res.data.data;\n        });\n      }\n      done();\n    },\n    searchReset: function searchReset() {\n      this.query = {};\n      this.onLoad(this.page);\n    },\n    searchChange: function searchChange(params, done) {\n      this.query = params;\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange: function selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear: function selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    currentChange: function currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange: function sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    onLoad: function onLoad(page) {\n      var _this7 = this;\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.loading = true;\n      if (this.query.createTime && this.query.createTime.length == 2) {\n        this.query.beginCreateTime = moment(this.query.createTime[0] + \" 00:00:00\").format('YYYY-MM-DD HH:mm:ss');\n        this.query.endCreateTime = moment(this.query.createTime[1] + \" 23:59:59\").format('YYYY-MM-DD HH:mm:ss');\n        delete this.query.createTime;\n      }\n      getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(function (res) {\n        var data = res.data.data;\n        _this7.page.total = data.total;\n        _this7.data = data.records;\n        var _iterator = _createForOfIteratorHelper(_this7.data),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var item = _step.value;\n            item.clickNum = item.clickNum == \"\" ? 0 : item.clickNum;\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        _this7.loading = false;\n        _this7.selectionClear();\n      });\n    }\n  }\n};",{"version":3,"names":["getList","getDetail","add","update","remove","mapGetters","Clipboard","moment","toFixed","dictionary","data","form","query","loading","page","pageSize","currentPage","total","selectionList","created","console","log","userInfo","computed","_objectSpread","permissionList","addBtn","vaildData","permission","channelstatistics_add","viewBtn","channelstatistics_view","delBtn","channelstatistics_delete","editBtn","channelstatistics_edit","options","height","calcHeight","searchShow","searchMenuSpan","menuWidth","dialogWidth","tip","border","index","authority","includes","selection","column","label","prop","addDisplay","editDisplay","search","rules","required","message","trigger","type","searchSpan","searchRange","format","valueFormat","hide","width","dicUrl","props","value","slot","tenantId","filter","item","ids","forEach","ele","push","id","join","methods","orderExamineNum","row","clickNum","Number","parseFloat","copy","bt","_this","clipboard","on","e","$message","destroy","rowSave","done","_this2","createTime","then","onLoad","error","window","rowUpdate","_this3","rowDel","_this4","$confirm","confirmButtonText","cancelButtonText","handleDelete","_this5","length","warning","$refs","crud","toggleSelection","beforeOpen","_this6","res","searchReset","searchChange","params","selectionChange","list","selectionClear","currentChange","sizeChange","_this7","arguments","undefined","beginCreateTime","endCreateTime","Object","assign","records","_iterator","_createForOfIteratorHelper","_step","s","n","err","f"],"sources":["src/views/channel/channelstatistics.vue"],"sourcesContent":["<template>\n  <basic-container>\n    <avue-crud :option=\"options\"\n               :table-loading=\"loading\"\n               :data=\"data\"\n               :page=\"page\"\n               :permission=\"permissionList\"\n               :before-open=\"beforeOpen\"\n               v-model=\"form\"\n               ref=\"crud\"\n               @row-update=\"rowUpdate\"\n               @row-save=\"rowSave\"\n               @row-del=\"rowDel\"\n               @search-change=\"searchChange\"\n               @search-reset=\"searchReset\"\n               @selection-change=\"selectionChange\"\n               @current-change=\"currentChange\"\n               @size-change=\"sizeChange\"\n               @on-load=\"onLoad\">\n      <template slot=\"menuLeft\">\n        <el-button type=\"danger\"\n                   size=\"small\"\n                   icon=\"el-icon-delete\"\n                   plain\n                   v-if=\"false\"\n                   @click=\"handleDelete\">删 除\n        </el-button>\n      </template>\n      <template #menu=\"{row,index,size}\">\n        <div style=\"width: 100%;display: flex;flex-wrap: wrap;align-items: center;flex-direction: row;justify-content: center;\">\n<!--          <el-button type=\"text\" icon=\"el-icon-view\" size=\"mini\" @click=\"$refs.crud.rowView(row,index)\">查看</el-button>-->\n          <el-popover\n            placement=\"top-start\"\n            title=\"渠道二维码\"\n            width=\"200\"\n            trigger=\"click\">\n            <div  style=\"width: 180px\">\n             <img style=\"width: 180px\" :src=\"row.qrCodeUrl\"/>\n            </div>\n            <el-button slot=\"reference\" type=\"text\" icon=\"el-icon-picture-outline\" size=\"mini\" >查看二维码</el-button>\n          </el-popover>\n\n          <el-button type=\"text\" icon=\"el-icon-delete\" size=\"mini\" @click=\"$refs.crud.rowDel(row,index)\">删除</el-button>\n        </div>\n      </template>\n      <template slot=\"url\" slot-scope=\"scope\">\n          <span data-clipboard-action=\"copy\"\n                :data-clipboard-text=\"scope.label\" class=\"hand name-color one_line\" :class=\"'cl'+scope.row.id\"\n                @click=\"copy('cl'+scope.row.id)\">点击复制 {{ scope.label}}</span>\n      </template>\n      <template slot=\"inComeRate\" slot-scope=\"scope\">\n        <div >\n          {{orderExamineNum(scope.row)}}\n        </div>\n      </template>\n    </avue-crud>\n  </basic-container>\n</template>\n\n<script>\n  import {getList, getDetail, add, update, remove} from \"@/api/channel/channel\";\n  import {mapGetters} from \"vuex\";\n  import Clipboard from 'clipboard';\n  import moment from \"moment\";\n  import {toFixed} from \"../../constant/goods/constant\";\n  import {dictionary} from \"../../api/system/dict\";\n  export default {\n    data() {\n      return {\n        form: {},\n        query: {},\n        loading: true,\n        page: {\n          pageSize: 10,\n          currentPage: 1,\n          total: 0\n        },\n        selectionList: [],\n        data: []\n      };\n    },\n    created() {\n     console.log(this.userInfo)\n    },\n    computed: {\n      ...mapGetters([\"userInfo\",\"permission\"]),\n      permissionList() {\n        return {\n          addBtn: this.vaildData(this.permission.channelstatistics_add, false),\n          viewBtn: this.vaildData(this.permission.channelstatistics_view, false),\n          delBtn: this.vaildData(this.permission.channelstatistics_delete, false),\n          editBtn: this.vaildData(this.permission.channelstatistics_edit, false)\n        };\n      },\n      options() {\n        var options = {\n          height: 'auto',\n          calcHeight: 210,\n          searchShow: true,\n          searchMenuSpan: 6,\n          menuWidth:180,\n          dialogWidth:40,\n          tip: false,\n          border: true,\n          index: true,\n          viewBtn: false,\n          editBtn:false,\n          delBtn:false,\n          addBtn:this.userInfo.authority.includes('channel'),\n          selection: true,\n          column: [\n            {\n              label: \"渠道商\",\n              prop: \"realName\",\n              addDisplay:false,\n              editDisplay: false,\n              search: true,\n              rules: [{\n                required: true,\n                message: \"请输入渠道创建者\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: '时间',\n              prop: 'createTime',\n              type: 'daterange',\n              searchSpan:8,\n              searchRange:true,\n              format:'yyyy-MM-dd',\n              valueFormat:'yyyy-MM-dd',\n              addDisplay:false,\n              editDisplay: false,\n              hide:true,\n              search:true,\n            },\n            {\n              label: \"链接名称\",\n              prop: \"name\",\n              addDisplay:true,\n              editDisplay: true,\n              rules: [{\n                required: true,\n                message: \"请输入渠道code\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"渠道链接\",\n              prop: \"url\",\n              width:200,\n              addDisplay:false,\n              editDisplay: false,\n\n              rules: [{\n                required: true,\n                message: \"请输入链接名称\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"渠道状态\",\n              prop: \"status\",\n              type: \"select\",\n              addDisplay:false,\n              editDisplay: false,\n              dicUrl: \"/api/blade-system/dict/dictionary?code=channel_status\",\n              props: {\n                label: \"dictValue\",\n                value: \"dictKey\"\n              },\n            },\n            {\n              label: \"点击数量\",\n              addDisplay:false,\n              editDisplay: false,\n              prop: \"clickNum\",\n            },\n            {\n              label: \"注册数量\",\n              addDisplay:false,\n              editDisplay: false,\n              prop: \"clientNum\",\n            },\n            {\n              label: \"初始化订单\",\n              addDisplay:false,\n              editDisplay: false,\n              width:90,\n              prop: \"orderInitNum\",\n            },\n            {\n              label: \"总订单\",\n              addDisplay:false,\n              editDisplay: false,\n              prop: \"orderFreezeNum\",\n            },\n            {\n              label: \"总签合同\",\n              width:90,\n              addDisplay:false,\n              editDisplay: false,\n              prop: \"orderSignNum\",\n            },\n            {\n              label: \"总发货数\",\n              addDisplay:false,\n              editDisplay: false,\n              prop: \"orderSendNum\",\n            },\n            {\n              label: \"逾期数量\",\n              addDisplay:false,\n              editDisplay: false,\n              prop: \"orderOverdueNum\",\n            },\n            {\n              label: \"申请数\",\n              addDisplay:false,\n              editDisplay: false,\n              prop: \"orderExamineNum\",\n            },\n            {\n              label: \"通过率\",\n              addDisplay:false,\n              editDisplay: false,\n              prop: \"orderExamineOkNum\",\n            },\n            {\n              label: \"进件率\",\n              addDisplay:false,\n              editDisplay: false,\n              prop: \"inComeRate\",\n              slot: true,\n            }\n          ]\n        };\n        if(!this.userInfo.tenantId.includes('000000')){\n          options.column = options.column.filter(item => {\n            if(item.prop == 'realName'){\n              return false;\n            }\n            return true;\n          });\n        }\n        return options;\n      },\n      ids() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids.join(\",\");\n      }\n    },\n    methods: {\n      orderExamineNum(row){\n        var clickNum = row.clickNum==\"\"?0:row.clickNum;\n        return toFixed(Number.parseFloat(clickNum)<=0?0:(Number.parseFloat(row.orderExamineNum)/Number.parseFloat(clickNum)),2)+\"%\";\n      },\n      copy(bt){\n        let clipboard = new Clipboard(\".\"+bt);\n        clipboard.on('success', e => {\n          this.$message({\n            type: \"success\",\n            message: \"复制成功!\"\n          });\n          clipboard.destroy()\n        })\n        clipboard.on('error', e => {\n          // 不支持复制\n          this.$message({\n            type: \"success\",\n            message: \"该浏览器不支持自动复制!\"\n          });\n          clipboard.destroy()\n        })\n      },\n      rowSave(row, done, loading) {\n        delete row.createTime;\n        add(row).then(() => {\n          done();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowUpdate(row, index, done, loading) {\n        delete row.createTime;\n        update(row).then(() => {\n          done();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowDel(row) {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(row.id);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n      handleDelete() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(this.ids);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      beforeOpen(done, type) {\n        if ([\"edit\", \"view\"].includes(type)) {\n          getDetail(this.form.id).then(res => {\n            this.form = res.data.data;\n          });\n        }\n        done();\n      },\n      searchReset() {\n        this.query = {};\n        this.onLoad(this.page);\n      },\n      searchChange(params, done) {\n        this.query = params;\n        this.page.currentPage = 1;\n        this.onLoad(this.page, params);\n        done();\n      },\n      selectionChange(list) {\n        this.selectionList = list;\n      },\n      selectionClear() {\n        this.selectionList = [];\n        this.$refs.crud.toggleSelection();\n      },\n      currentChange(currentPage){\n        this.page.currentPage = currentPage;\n      },\n      sizeChange(pageSize){\n        this.page.pageSize = pageSize;\n      },\n      onLoad(page, params = {}) {\n        this.loading = true;\n        if (this.query.createTime&&this.query.createTime.length == 2){\n          this.query.beginCreateTime = moment(this.query.createTime[0]+\" 00:00:00\").format('YYYY-MM-DD HH:mm:ss');\n          this.query.endCreateTime = moment(this.query.createTime[1]+\" 23:59:59\").format('YYYY-MM-DD HH:mm:ss');\n          delete this.query.createTime;\n        }\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n          const data = res.data.data;\n          this.page.total = data.total;\n          this.data = data.records;\n          for(var item of this.data){\n            item.clickNum = item.clickNum == \"\"?0:item.clickNum\n          }\n          this.loading = false;\n          this.selectionClear();\n        });\n      }\n    }\n  };\n</script>\n\n<style scoped>\n  .one_line {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n</style>\n"],"mappings":"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"}]}