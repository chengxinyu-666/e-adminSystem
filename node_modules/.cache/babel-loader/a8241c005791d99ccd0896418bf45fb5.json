{"remainingRequest":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\babel-loader\\lib\\index.js!D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workCode\\xiaoE\\大圣系统源码\\admin\\src\\page\\index\\top\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\src\\page\\index\\top\\index.vue","mtime":1675515520000},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\babel.config.js","mtime":1666766764000},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678778409044},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1678778390429},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678778409044},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1678778410194}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"D:/workCode/xiaoE/\\u5927\\u5723\\u7CFB\\u7EDF\\u6E90\\u7801/admin/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { mapGetters, mapState } from \"vuex\";\nimport { fullscreenToggel, listenfullscreen } from \"@/util/util\";\nimport topLock from \"./top-lock\";\nimport topMenu from \"./top-menu\";\nimport topSearch from \"./top-search\";\nimport topTheme from \"./top-theme\";\nimport topLogs from \"./top-logs\";\nimport topColor from \"./top-color\";\nimport topLang from \"./top-lang\";\nexport default {\n  components: {\n    topLock: topLock,\n    topMenu: topMenu,\n    topSearch: topSearch,\n    topTheme: topTheme,\n    topLogs: topLogs,\n    topColor: topColor,\n    topLang: topLang\n  },\n  name: \"top\",\n  data: function data() {\n    return {};\n  },\n  filters: {},\n  created: function created() {},\n  mounted: function mounted() {\n    listenfullscreen(this.setScreen);\n  },\n  computed: _objectSpread(_objectSpread({}, mapState({\n    showDebug: function showDebug(state) {\n      return state.common.showDebug;\n    },\n    showTheme: function showTheme(state) {\n      return state.common.showTheme;\n    },\n    showLock: function showLock(state) {\n      return state.common.showLock;\n    },\n    showFullScren: function showFullScren(state) {\n      return state.common.showFullScren;\n    },\n    showCollapse: function showCollapse(state) {\n      return state.common.showCollapse;\n    },\n    showSearch: function showSearch(state) {\n      return state.common.showSearch;\n    },\n    showMenu: function showMenu(state) {\n      return state.common.showMenu;\n    },\n    showColor: function showColor(state) {\n      return state.common.showColor;\n    }\n  })), mapGetters([\"userInfo\", \"isFullScren\", \"tagWel\", \"tagList\", \"isCollapse\", \"tag\", \"logsLen\", \"logsFlag\"])),\n  methods: {\n    handleScreen: function handleScreen() {\n      fullscreenToggel();\n    },\n    setCollapse: function setCollapse() {\n      this.$store.commit(\"SET_COLLAPSE\");\n    },\n    setScreen: function setScreen() {\n      this.$store.commit(\"SET_FULLSCREN\");\n    },\n    logout: function logout() {\n      var _this = this;\n      this.$confirm(this.$t(\"logoutTip\"), this.$t(\"tip\"), {\n        confirmButtonText: this.$t(\"submitText\"),\n        cancelButtonText: this.$t(\"cancelText\"),\n        type: \"warning\"\n      }).then(function () {\n        _this.$store.dispatch(\"LogOut\").then(function () {\n          _this.$router.push({\n            path: \"/login\"\n          });\n        });\n      });\n    }\n  }\n};",{"version":3,"names":["mapGetters","mapState","fullscreenToggel","listenfullscreen","topLock","topMenu","topSearch","topTheme","topLogs","topColor","topLang","components","name","data","filters","created","mounted","setScreen","computed","_objectSpread","showDebug","state","common","showTheme","showLock","showFullScren","showCollapse","showSearch","showMenu","showColor","methods","handleScreen","setCollapse","$store","commit","logout","_this","$confirm","$t","confirmButtonText","cancelButtonText","type","then","dispatch","$router","push","path"],"sources":["src/page/index/top/index.vue"],"sourcesContent":["<template>\n  <div class=\"avue-top\">\n    <div class=\"top-bar__left\">\n      <div class=\"avue-breadcrumb\"\n           :class=\"[{ 'avue-breadcrumb--active': isCollapse }]\"\n           v-if=\"showCollapse\">\n        <i class=\"icon-navicon\"\n           @click=\"setCollapse\"></i>\n      </div>\n    </div>\n    <div class=\"top-bar__title\">\n      <div class=\"top-bar__item top-bar__item--show\"\n           v-if=\"showMenu\">\n        <top-menu></top-menu>\n      </div>\n      <span class=\"top-bar__item\"\n            v-if=\"showSearch\">\n        <top-search></top-search>\n      </span>\n    </div>\n    <div class=\"top-bar__right\">\n      <el-tooltip v-if=\"showColor\"\n                  effect=\"dark\"\n                  :content=\"$t('navbar.color')\"\n                  placement=\"bottom\">\n        <div class=\"top-bar__item\">\n          <top-color></top-color>\n        </div>\n      </el-tooltip>\n      <el-tooltip v-if=\"showDebug\"\n                  effect=\"dark\"\n                  :content=\"logsFlag?$t('navbar.bug'):logsLen+$t('navbar.bugs')\"\n                  placement=\"bottom\">\n        <div class=\"top-bar__item\">\n          <top-logs></top-logs>\n        </div>\n      </el-tooltip>\n      <el-tooltip v-if=\"showLock\"\n                  effect=\"dark\"\n                  :content=\"$t('navbar.lock')\"\n                  placement=\"bottom\">\n        <div class=\"top-bar__item\">\n          <top-lock></top-lock>\n        </div>\n      </el-tooltip>\n      <el-tooltip v-if=\"showTheme\"\n                  effect=\"dark\"\n                  :content=\"$t('navbar.theme')\"\n                  placement=\"bottom\">\n        <div class=\"top-bar__item top-bar__item--show\">\n          <top-theme></top-theme>\n        </div>\n      </el-tooltip>\n<!--      <el-tooltip effect=\"dark\"-->\n<!--                  :content=\"$t('navbar.language')\"-->\n<!--                  placement=\"bottom\">-->\n<!--        <div class=\"top-bar__item top-bar__item&#45;&#45;show\">-->\n<!--          <top-lang></top-lang>-->\n<!--        </div>-->\n<!--      </el-tooltip>-->\n      <el-tooltip v-if=\"showFullScren\"\n                  effect=\"dark\"\n                  :content=\"isFullScren?$t('navbar.screenfullF'):$t('navbar.screenfull')\"\n                  placement=\"bottom\">\n        <div class=\"top-bar__item\">\n          <i :class=\"isFullScren?'icon-tuichuquanping':'icon-quanping'\"\n             @click=\"handleScreen\"></i>\n        </div>\n      </el-tooltip>\n      <img class=\"top-bar__img\"\n           :src=\"userInfo.avatar\">\n      <el-dropdown>\n        <span class=\"el-dropdown-link\">\n          {{userInfo.userName}}\n          <i class=\"el-icon-arrow-down el-icon--right\"></i>\n        </span>\n        <el-dropdown-menu slot=\"dropdown\">\n          <el-dropdown-item>\n            <router-link to=\"/\">{{$t('navbar.dashboard')}}</router-link>\n          </el-dropdown-item>\n          <el-dropdown-item>\n            <router-link to=\"/info/index\">{{$t('navbar.userinfo')}}</router-link>\n          </el-dropdown-item>\n          <el-dropdown-item @click.native=\"logout\"\n                            divided>{{$t('navbar.logOut')}}</el-dropdown-item>\n        </el-dropdown-menu>\n      </el-dropdown>\n    </div>\n  </div>\n</template>\n<script>\nimport { mapGetters, mapState } from \"vuex\";\nimport { fullscreenToggel, listenfullscreen } from \"@/util/util\";\nimport topLock from \"./top-lock\";\nimport topMenu from \"./top-menu\";\nimport topSearch from \"./top-search\";\nimport topTheme from \"./top-theme\";\nimport topLogs from \"./top-logs\";\nimport topColor from \"./top-color\";\nimport topLang from \"./top-lang\";\nexport default {\n  components: {\n    topLock,\n    topMenu,\n    topSearch,\n    topTheme,\n    topLogs,\n    topColor,\n    topLang\n  },\n  name: \"top\",\n  data() {\n    return {};\n  },\n  filters: {},\n  created() {},\n  mounted() {\n    listenfullscreen(this.setScreen);\n  },\n  computed: {\n    ...mapState({\n      showDebug: state => state.common.showDebug,\n      showTheme: state => state.common.showTheme,\n      showLock: state => state.common.showLock,\n      showFullScren: state => state.common.showFullScren,\n      showCollapse: state => state.common.showCollapse,\n      showSearch: state => state.common.showSearch,\n      showMenu: state => state.common.showMenu,\n      showColor: state => state.common.showColor\n    }),\n    ...mapGetters([\n      \"userInfo\",\n      \"isFullScren\",\n      \"tagWel\",\n      \"tagList\",\n      \"isCollapse\",\n      \"tag\",\n      \"logsLen\",\n      \"logsFlag\"\n    ])\n  },\n  methods: {\n    handleScreen() {\n      fullscreenToggel();\n    },\n    setCollapse() {\n      this.$store.commit(\"SET_COLLAPSE\");\n    },\n    setScreen() {\n      this.$store.commit(\"SET_FULLSCREN\");\n    },\n    logout() {\n      this.$confirm(this.$t(\"logoutTip\"), this.$t(\"tip\"), {\n        confirmButtonText: this.$t(\"submitText\"),\n        cancelButtonText: this.$t(\"cancelText\"),\n        type: \"warning\"\n      }).then(() => {\n        this.$store.dispatch(\"LogOut\").then(() => {\n          this.$router.push({ path: \"/login\" });\n        });\n      });\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n</style>\n"],"mappings":";;;;;;AA2FA,SAAAA,UAAA,EAAAC,QAAA;AACA,SAAAC,gBAAA,EAAAC,gBAAA;AACA,OAAAC,OAAA;AACA,OAAAC,OAAA;AACA,OAAAC,SAAA;AACA,OAAAC,QAAA;AACA,OAAAC,OAAA;AACA,OAAAC,QAAA;AACA,OAAAC,OAAA;AACA;EACAC,UAAA;IACAP,OAAA,EAAAA,OAAA;IACAC,OAAA,EAAAA,OAAA;IACAC,SAAA,EAAAA,SAAA;IACAC,QAAA,EAAAA,QAAA;IACAC,OAAA,EAAAA,OAAA;IACAC,QAAA,EAAAA,QAAA;IACAC,OAAA,EAAAA;EACA;EACAE,IAAA;EACAC,IAAA,WAAAA,KAAA;IACA;EACA;EACAC,OAAA;EACAC,OAAA,WAAAA,QAAA;EACAC,OAAA,WAAAA,QAAA;IACAb,gBAAA,MAAAc,SAAA;EACA;EACAC,QAAA,EAAAC,aAAA,CAAAA,aAAA,KACAlB,QAAA;IACAmB,SAAA,WAAAA,UAAAC,KAAA;MAAA,OAAAA,KAAA,CAAAC,MAAA,CAAAF,SAAA;IAAA;IACAG,SAAA,WAAAA,UAAAF,KAAA;MAAA,OAAAA,KAAA,CAAAC,MAAA,CAAAC,SAAA;IAAA;IACAC,QAAA,WAAAA,SAAAH,KAAA;MAAA,OAAAA,KAAA,CAAAC,MAAA,CAAAE,QAAA;IAAA;IACAC,aAAA,WAAAA,cAAAJ,KAAA;MAAA,OAAAA,KAAA,CAAAC,MAAA,CAAAG,aAAA;IAAA;IACAC,YAAA,WAAAA,aAAAL,KAAA;MAAA,OAAAA,KAAA,CAAAC,MAAA,CAAAI,YAAA;IAAA;IACAC,UAAA,WAAAA,WAAAN,KAAA;MAAA,OAAAA,KAAA,CAAAC,MAAA,CAAAK,UAAA;IAAA;IACAC,QAAA,WAAAA,SAAAP,KAAA;MAAA,OAAAA,KAAA,CAAAC,MAAA,CAAAM,QAAA;IAAA;IACAC,SAAA,WAAAA,UAAAR,KAAA;MAAA,OAAAA,KAAA,CAAAC,MAAA,CAAAO,SAAA;IAAA;EACA,KACA7B,UAAA,EACA,YACA,eACA,UACA,WACA,cACA,OACA,WACA,WACA,EACA;EACA8B,OAAA;IACAC,YAAA,WAAAA,aAAA;MACA7B,gBAAA;IACA;IACA8B,WAAA,WAAAA,YAAA;MACA,KAAAC,MAAA,CAAAC,MAAA;IACA;IACAjB,SAAA,WAAAA,UAAA;MACA,KAAAgB,MAAA,CAAAC,MAAA;IACA;IACAC,MAAA,WAAAA,OAAA;MAAA,IAAAC,KAAA;MACA,KAAAC,QAAA,MAAAC,EAAA,oBAAAA,EAAA;QACAC,iBAAA,OAAAD,EAAA;QACAE,gBAAA,OAAAF,EAAA;QACAG,IAAA;MACA,GAAAC,IAAA;QACAN,KAAA,CAAAH,MAAA,CAAAU,QAAA,WAAAD,IAAA;UACAN,KAAA,CAAAQ,OAAA,CAAAC,IAAA;YAAAC,IAAA;UAAA;QACA;MACA;IACA;EACA;AACA"}]}