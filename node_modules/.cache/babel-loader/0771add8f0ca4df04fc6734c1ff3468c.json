{"remainingRequest":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\babel-loader\\lib\\index.js!D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\workCode\\xiaoE\\大圣系统源码\\admin\\src\\util\\validate.js","dependencies":[{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\src\\util\\validate.js","mtime":1666766764000},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\babel.config.js","mtime":1666766764000},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678778409044},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1678778390429},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\eslint-loader\\index.js","mtime":1678778406019}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\n/**\r\n * Created by jiachenpan on 16/11/18.\r\n */\n\nexport function isvalidUsername(str) {\n  var valid_map = ['admin', 'editor'];\n  return valid_map.indexOf(str.trim()) >= 0;\n}\n\n/* 合法uri*/\nexport function validateURL(textval) {\n  var urlregex = /^(https?|ftp):\\/\\/([a-zA-Z0-9.-]+(:[a-zA-Z0-9.&%$-]+)*@)*((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]?)(\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])){3}|([a-zA-Z0-9-]+\\.)*[a-zA-Z0-9-]+\\.(com|edu|gov|int|mil|net|org|biz|arpa|info|name|pro|aero|coop|museum|[a-zA-Z]{2}))(:[0-9]+)*(\\/($|[a-zA-Z0-9.,?'\\\\+&%$#=~_-]+))*$/;\n  return urlregex.test(textval);\n}\n/**\r\n * 邮箱\r\n * @param {*} s\r\n */\nexport function isEmail(s) {\n  return /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((.[a-zA-Z0-9_-]{2,3}){1,2})$/.test(s);\n}\n\n/**\r\n * 手机号码\r\n * @param {*} s\r\n */\nexport function isMobile(s) {\n  return /^1[0-9]{10}$/.test(s);\n}\n\n/**\r\n * 电话号码\r\n * @param {*} s\r\n */\nexport function isPhone(s) {\n  return /^([0-9]{3,4}-)?[0-9]{7,8}$/.test(s);\n}\n\n/**\r\n * URL地址\r\n * @param {*} s\r\n */\nexport function isURL(s) {\n  return /^http[s]?:\\/\\/.*/.test(s);\n}\n\n/* 小写字母*/\nexport function validateLowerCase(str) {\n  var reg = /^[a-z]+$/;\n  return reg.test(str);\n}\n\n/* 大写字母*/\nexport function validateUpperCase(str) {\n  var reg = /^[A-Z]+$/;\n  return reg.test(str);\n}\n\n/* 大小写字母*/\nexport function validatAlphabets(str) {\n  var reg = /^[A-Za-z]+$/;\n  return reg.test(str);\n}\n/*验证pad还是pc*/\nexport var vaildatePc = function vaildatePc() {\n  var userAgentInfo = navigator.userAgent;\n  var Agents = [\"Android\", \"iPhone\", \"SymbianOS\", \"Windows Phone\", \"iPad\", \"iPod\"];\n  var flag = true;\n  for (var v = 0; v < Agents.length; v++) {\n    if (userAgentInfo.indexOf(Agents[v]) > 0) {\n      flag = false;\n      break;\n    }\n  }\n  return flag;\n};\n/**\r\n * validate email\r\n * @param email\r\n * @returns {boolean}\r\n */\nexport function validateEmail(email) {\n  var re = /^(([^<>()\\\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(email);\n}\n\n/**\r\n * 判断身份证号码\r\n */\nexport function cardid(code) {\n  var list = [];\n  var result = true;\n  var msg = '';\n  var city = {\n    11: \"北京\",\n    12: \"天津\",\n    13: \"河北\",\n    14: \"山西\",\n    15: \"内蒙古\",\n    21: \"辽宁\",\n    22: \"吉林\",\n    23: \"黑龙江 \",\n    31: \"上海\",\n    32: \"江苏\",\n    33: \"浙江\",\n    34: \"安徽\",\n    35: \"福建\",\n    36: \"江西\",\n    37: \"山东\",\n    41: \"河南\",\n    42: \"湖北 \",\n    43: \"湖南\",\n    44: \"广东\",\n    45: \"广西\",\n    46: \"海南\",\n    50: \"重庆\",\n    51: \"四川\",\n    52: \"贵州\",\n    53: \"云南\",\n    54: \"西藏 \",\n    61: \"陕西\",\n    62: \"甘肃\",\n    63: \"青海\",\n    64: \"宁夏\",\n    65: \"新疆\",\n    71: \"台湾\",\n    81: \"香港\",\n    82: \"澳门\",\n    91: \"国外 \"\n  };\n  if (!validatenull(code)) {\n    if (code.length == 18) {\n      if (!code || !/(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/.test(code)) {\n        msg = \"证件号码格式错误\";\n      } else if (!city[code.substr(0, 2)]) {\n        msg = \"地址编码错误\";\n      } else {\n        //18位身份证需要验证最后一位校验位\n        code = code.split('');\n        //∑(ai×Wi)(mod 11)\n        //加权因子\n        var factor = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2];\n        //校验位\n        var parity = [1, 0, 'X', 9, 8, 7, 6, 5, 4, 3, 2, 'x'];\n        var sum = 0;\n        var ai = 0;\n        var wi = 0;\n        for (var i = 0; i < 17; i++) {\n          ai = code[i];\n          wi = factor[i];\n          sum += ai * wi;\n        }\n        if (parity[sum % 11] != code[17]) {\n          msg = \"证件号码校验位错误\";\n        } else {\n          result = false;\n        }\n      }\n    } else {\n      msg = \"证件号码长度不为18位\";\n    }\n  } else {\n    msg = \"证件号码不能为空\";\n  }\n  list.push(result);\n  list.push(msg);\n  return list;\n}\n/**\r\n * 判断手机号码是否正确\r\n */\nexport function isvalidatemobile(phone) {\n  var list = [];\n  var result = true;\n  var msg = '';\n  var isPhone = /^0\\d{2,3}-?\\d{7,8}$/;\n  //增加134 减少|1349[0-9]{7}，增加181,增加145，增加17[678]  \n  if (!validatenull(phone)) {\n    if (phone.length == 11) {\n      if (isPhone.test(phone)) {\n        msg = '手机号码格式不正确';\n      } else {\n        result = false;\n      }\n    } else {\n      msg = '手机号码长度不为11位';\n    }\n  } else {\n    msg = '手机号码不能为空';\n  }\n  list.push(result);\n  list.push(msg);\n  return list;\n}\n/**\r\n * 判断姓名是否正确\r\n */\nexport function validatename(name) {\n  var regName = /^[\\u4e00-\\u9fa5]{2,4}$/;\n  if (!regName.test(name)) return false;\n  return true;\n}\n/**\r\n * 判断是否为整数\r\n */\nexport function validatenum(num, type) {\n  var regName = /[^\\d.]/g;\n  if (type == 1) {\n    if (!regName.test(num)) return false;\n  } else if (type == 2) {\n    regName = /[^\\d]/g;\n    if (!regName.test(num)) return false;\n  }\n  return true;\n}\n/**\r\n * 判断是否为小数\r\n */\nexport function validatenumord(num, type) {\n  var regName = /[^\\d.]/g;\n  if (type == 1) {\n    if (!regName.test(num)) return false;\n  } else if (type == 2) {\n    regName = /[^\\d.]/g;\n    if (!regName.test(num)) return false;\n  }\n  return true;\n}\n/**\r\n * 判断是否为空\r\n */\nexport function validatenull(val) {\n  if (typeof val == 'boolean') {\n    return false;\n  }\n  if (typeof val == 'number') {\n    return false;\n  }\n  if (val instanceof Array) {\n    if (val.length == 0) return true;\n  } else if (val instanceof Object) {\n    if (JSON.stringify(val) === '{}') return true;\n  } else {\n    if (val == 'null' || val == null || val == 'undefined' || val == undefined || val == '') return true;\n    return false;\n  }\n  return false;\n}",{"version":3,"names":["isvalidUsername","str","valid_map","indexOf","trim","validateURL","textval","urlregex","test","isEmail","s","isMobile","isPhone","isURL","validateLowerCase","reg","validateUpperCase","validatAlphabets","vaildatePc","userAgentInfo","navigator","userAgent","Agents","flag","v","length","validateEmail","email","re","cardid","code","list","result","msg","city","validatenull","substr","split","factor","parity","sum","ai","wi","i","push","isvalidatemobile","phone","validatename","name","regName","validatenum","num","type","validatenumord","val","Array","Object","JSON","stringify","undefined"],"sources":["D:/workCode/xiaoE/大圣系统源码/admin/src/util/validate.js"],"sourcesContent":["/**\r\n * Created by jiachenpan on 16/11/18.\r\n */\r\n\r\nexport function isvalidUsername(str) {\r\n    const valid_map = ['admin', 'editor']\r\n    return valid_map.indexOf(str.trim()) >= 0\r\n}\r\n\r\n/* 合法uri*/\r\nexport function validateURL(textval) {\r\n    const urlregex = /^(https?|ftp):\\/\\/([a-zA-Z0-9.-]+(:[a-zA-Z0-9.&%$-]+)*@)*((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]?)(\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])){3}|([a-zA-Z0-9-]+\\.)*[a-zA-Z0-9-]+\\.(com|edu|gov|int|mil|net|org|biz|arpa|info|name|pro|aero|coop|museum|[a-zA-Z]{2}))(:[0-9]+)*(\\/($|[a-zA-Z0-9.,?'\\\\+&%$#=~_-]+))*$/\r\n    return urlregex.test(textval)\r\n}\r\n/**\r\n * 邮箱\r\n * @param {*} s\r\n */\r\nexport function isEmail(s) {\r\n    return /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((.[a-zA-Z0-9_-]{2,3}){1,2})$/.test(s)\r\n}\r\n\r\n/**\r\n * 手机号码\r\n * @param {*} s\r\n */\r\nexport function isMobile(s) {\r\n    return /^1[0-9]{10}$/.test(s)\r\n}\r\n\r\n/**\r\n * 电话号码\r\n * @param {*} s\r\n */\r\nexport function isPhone(s) {\r\n    return /^([0-9]{3,4}-)?[0-9]{7,8}$/.test(s)\r\n}\r\n\r\n/**\r\n * URL地址\r\n * @param {*} s\r\n */\r\nexport function isURL(s) {\r\n    return /^http[s]?:\\/\\/.*/.test(s)\r\n}\r\n\r\n/* 小写字母*/\r\nexport function validateLowerCase(str) {\r\n    const reg = /^[a-z]+$/\r\n    return reg.test(str)\r\n}\r\n\r\n/* 大写字母*/\r\nexport function validateUpperCase(str) {\r\n    const reg = /^[A-Z]+$/\r\n    return reg.test(str)\r\n}\r\n\r\n/* 大小写字母*/\r\nexport function validatAlphabets(str) {\r\n    const reg = /^[A-Za-z]+$/\r\n    return reg.test(str)\r\n}\r\n/*验证pad还是pc*/\r\nexport const vaildatePc = function() {\r\n        const userAgentInfo = navigator.userAgent;\r\n        const Agents = [\"Android\", \"iPhone\",\r\n            \"SymbianOS\", \"Windows Phone\",\r\n            \"iPad\", \"iPod\"\r\n        ];\r\n        let flag = true;\r\n        for (var v = 0; v < Agents.length; v++) {\r\n            if (userAgentInfo.indexOf(Agents[v]) > 0) {\r\n                flag = false;\r\n                break;\r\n            }\r\n        }\r\n        return flag;\r\n    }\r\n    /**\r\n     * validate email\r\n     * @param email\r\n     * @returns {boolean}\r\n     */\r\nexport function validateEmail(email) {\r\n    const re = /^(([^<>()\\\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n    return re.test(email)\r\n}\r\n\r\n/**\r\n * 判断身份证号码\r\n */\r\nexport function cardid(code) {\r\n    let list = [];\r\n    let result = true;\r\n    let msg = '';\r\n    var city = {\r\n        11: \"北京\",\r\n        12: \"天津\",\r\n        13: \"河北\",\r\n        14: \"山西\",\r\n        15: \"内蒙古\",\r\n        21: \"辽宁\",\r\n        22: \"吉林\",\r\n        23: \"黑龙江 \",\r\n        31: \"上海\",\r\n        32: \"江苏\",\r\n        33: \"浙江\",\r\n        34: \"安徽\",\r\n        35: \"福建\",\r\n        36: \"江西\",\r\n        37: \"山东\",\r\n        41: \"河南\",\r\n        42: \"湖北 \",\r\n        43: \"湖南\",\r\n        44: \"广东\",\r\n        45: \"广西\",\r\n        46: \"海南\",\r\n        50: \"重庆\",\r\n        51: \"四川\",\r\n        52: \"贵州\",\r\n        53: \"云南\",\r\n        54: \"西藏 \",\r\n        61: \"陕西\",\r\n        62: \"甘肃\",\r\n        63: \"青海\",\r\n        64: \"宁夏\",\r\n        65: \"新疆\",\r\n        71: \"台湾\",\r\n        81: \"香港\",\r\n        82: \"澳门\",\r\n        91: \"国外 \"\r\n    };\r\n    if (!validatenull(code)) {\r\n        if (code.length == 18) {\r\n            if (!code || !/(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/.test(code)) {\r\n                msg = \"证件号码格式错误\";\r\n            } else if (!city[code.substr(0, 2)]) {\r\n                msg = \"地址编码错误\";\r\n            } else {\r\n                //18位身份证需要验证最后一位校验位\r\n                code = code.split('');\r\n                //∑(ai×Wi)(mod 11)\r\n                //加权因子\r\n                var factor = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2];\r\n                //校验位\r\n                var parity = [1, 0, 'X', 9, 8, 7, 6, 5, 4, 3, 2, 'x'];\r\n                var sum = 0;\r\n                var ai = 0;\r\n                var wi = 0;\r\n                for (var i = 0; i < 17; i++) {\r\n                    ai = code[i];\r\n                    wi = factor[i];\r\n                    sum += ai * wi;\r\n                }\r\n                if (parity[sum % 11] != code[17]) {\r\n                    msg = \"证件号码校验位错误\";\r\n                } else {\r\n                    result = false;\r\n                }\r\n\r\n            }\r\n        } else {\r\n            msg = \"证件号码长度不为18位\";\r\n        }\r\n\r\n    } else {\r\n        msg = \"证件号码不能为空\";\r\n    }\r\n    list.push(result);\r\n    list.push(msg);\r\n    return list;\r\n}\r\n/**\r\n * 判断手机号码是否正确\r\n */\r\nexport function isvalidatemobile(phone) {\r\n    let list = [];\r\n    let result = true;\r\n    let msg = '';\r\n    var isPhone = /^0\\d{2,3}-?\\d{7,8}$/;\r\n    //增加134 减少|1349[0-9]{7}，增加181,增加145，增加17[678]  \r\n    if (!validatenull(phone)) {\r\n        if (phone.length == 11) {\r\n            if (isPhone.test(phone)) {\r\n                msg = '手机号码格式不正确';\r\n            } else {\r\n                result = false;\r\n            }\r\n        } else {\r\n            msg = '手机号码长度不为11位';\r\n        }\r\n    } else {\r\n        msg = '手机号码不能为空';\r\n    }\r\n    list.push(result);\r\n    list.push(msg);\r\n    return list;\r\n}\r\n/**\r\n * 判断姓名是否正确\r\n */\r\nexport function validatename(name) {\r\n    var regName = /^[\\u4e00-\\u9fa5]{2,4}$/;\r\n    if (!regName.test(name)) return false;\r\n    return true;\r\n}\r\n/**\r\n * 判断是否为整数\r\n */\r\nexport function validatenum(num, type) {\r\n    let regName = /[^\\d.]/g;\r\n    if (type == 1) {\r\n        if (!regName.test(num)) return false;\r\n    } else if (type == 2) {\r\n        regName = /[^\\d]/g;\r\n        if (!regName.test(num)) return false;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * 判断是否为小数\r\n */\r\nexport function validatenumord(num, type) {\r\n    let regName = /[^\\d.]/g;\r\n    if (type == 1) {\r\n        if (!regName.test(num)) return false;\r\n    } else if (type == 2) {\r\n        regName = /[^\\d.]/g;\r\n        if (!regName.test(num)) return false;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * 判断是否为空\r\n */\r\nexport function validatenull(val) {\r\n    if (typeof val == 'boolean') {\r\n        return false;\r\n    }\r\n    if (typeof val == 'number') {\r\n        return false;\r\n    }\r\n    if (val instanceof Array) {\r\n        if (val.length == 0) return true;\r\n    } else if (val instanceof Object) {\r\n        if (JSON.stringify(val) === '{}') return true;\r\n    } else {\r\n        if (val == 'null' || val == null || val == 'undefined' || val == undefined || val == '') return true;\r\n        return false;\r\n    }\r\n    return false;\r\n}"],"mappings":"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"}]}