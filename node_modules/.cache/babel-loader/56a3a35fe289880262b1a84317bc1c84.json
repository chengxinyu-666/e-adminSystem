{"remainingRequest":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\babel-loader\\lib\\index.js!D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workCode\\xiaoE\\大圣系统源码\\admin\\src\\views\\channel\\channel.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\src\\views\\channel\\channel.vue","mtime":1678090924000},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\babel.config.js","mtime":1666766764000},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678778409044},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1678778390429},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678778409044},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1678778410194}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.number.parse-float\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"D:/workCode/xiaoE/\\u5927\\u5723\\u7CFB\\u7EDF\\u6E90\\u7801/admin/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { getChannelList, getUser, remove, update, addChannel, resetPassword } from \"@/api/system/user\";\nimport { mapGetters } from \"vuex\";\nimport website from '@/config/website';\nimport { getToken } from '@/util/auth';\nimport moment from \"moment\";\nimport { toFixed } from \"../../constant/goods/constant\";\nexport default {\n  data: function data() {\n    return {\n      form: {},\n      search: {},\n      roleBox: false,\n      excelBox: false,\n      loading: true,\n      selectionList: [],\n      query: {},\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      init: {\n        roleTree: [],\n        deptTree: []\n      },\n      props: {\n        label: \"title\",\n        value: \"key\"\n      },\n      roleGrantList: [],\n      roleTreeObj: [],\n      option: {\n        height: 'auto',\n        calcHeight: 210,\n        searchShow: true,\n        searchMenuSpan: 6,\n        tip: false,\n        border: true,\n        index: true,\n        selection: true,\n        viewBtn: true,\n        column: [{\n          label: \"渠道名称\",\n          prop: \"realName\",\n          search: true,\n          searchSpan: 4,\n          span: 12,\n          rules: [{\n            required: true,\n            message: \"请输入渠道名称\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"登录账号\",\n          prop: \"account\",\n          width: 100,\n          rules: [{\n            required: true,\n            message: \"请输入登录账号\",\n            trigger: \"blur\"\n          }],\n          span: 12\n        }, {\n          label: \"手机号码\",\n          width: 120,\n          prop: \"phone\",\n          span: 12,\n          rules: [{\n            required: true,\n            message: \"请输入手机号\",\n            trigger: \"blur\"\n          }],\n          overHidden: true\n        }, {\n          label: \"所属资方\",\n          prop: \"tenantId\",\n          type: \"tree\",\n          dicUrl: \"/api/blade-system/tenant/select\",\n          props: {\n            label: \"tenantName\",\n            value: \"tenantId\"\n          },\n          hide: !website.tenantMode,\n          addDisplay: website.tenantMode,\n          editDisplay: website.tenantMode,\n          viewDisplay: website.tenantMode,\n          searchSpan: 6,\n          search: true,\n          rules: [{\n            required: true,\n            message: \"请输入所属资方\",\n            trigger: \"click\"\n          }]\n        }, {\n          label: '时间',\n          prop: 'createTime',\n          type: 'daterange',\n          searchSpan: 8,\n          addDisplay: false,\n          editDisplay: false,\n          searchRange: true,\n          format: 'yyyy-MM-dd',\n          valueFormat: 'yyyy-MM-dd',\n          hide: true,\n          search: true\n        }, {\n          label: \"渠道状态\",\n          prop: \"status\",\n          type: \"select\",\n          addDisplay: false,\n          editDisplay: false,\n          dicUrl: \"/api/blade-system/dict/dictionary?code=channel_status\",\n          props: {\n            label: \"dictValue\",\n            value: \"dictKey\"\n          }\n        }, {\n          label: \"点击数量\",\n          addDisplay: false,\n          editDisplay: false,\n          prop: \"clickNum\"\n        }, {\n          label: \"注册数量\",\n          addDisplay: false,\n          editDisplay: false,\n          prop: \"clientNum\"\n        }, {\n          label: \"初始化订单\",\n          addDisplay: false,\n          editDisplay: false,\n          width: 90,\n          prop: \"orderInitNum\"\n        }, {\n          label: \"总订单\",\n          addDisplay: false,\n          editDisplay: false,\n          prop: \"orderFreezeNum\"\n        }, {\n          label: \"总签合同\",\n          width: 90,\n          addDisplay: false,\n          editDisplay: false,\n          prop: \"orderSignNum\"\n        }, {\n          label: \"总发货数\",\n          addDisplay: false,\n          editDisplay: false,\n          prop: \"orderSendNum\"\n        }, {\n          label: \"逾期数量\",\n          addDisplay: false,\n          editDisplay: false,\n          prop: \"orderOverdueNum\"\n        }, {\n          label: \"申请数\",\n          addDisplay: false,\n          editDisplay: false,\n          prop: \"orderExamineNum\"\n        }, {\n          label: \"通过率\",\n          addDisplay: false,\n          editDisplay: false,\n          prop: \"orderExamineOkNum\"\n        }, {\n          label: \"进件率\",\n          addDisplay: false,\n          editDisplay: false,\n          prop: \"inComeRate\",\n          slot: true\n        }]\n      },\n      data: []\n    };\n  },\n  watch: {},\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"userInfo\", \"permission\"])), {}, {\n    permissionList: function permissionList() {\n      return {\n        addBtn: this.vaildData(this.permission.user_add, false),\n        viewBtn: this.vaildData(this.permission.user_view, false),\n        delBtn: this.vaildData(this.permission.user_delete, false),\n        editBtn: this.vaildData(this.permission.user_edit, false)\n      };\n    },\n    ids: function ids() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  }),\n  methods: {\n    orderExamineNum: function orderExamineNum(row) {\n      var clickNum = row.clickNum == \"\" ? 0 : row.clickNum;\n      return toFixed(Number.parseFloat(clickNum) <= 0 ? 0 : Number.parseFloat(row.orderExamineNum) / Number.parseFloat(clickNum), 2) + \"%\";\n    },\n    rowSave: function rowSave(row, done, loading) {\n      var _this = this;\n      delete row.createTime;\n      addChannel(row).then(function () {\n        done();\n        _this.onLoad(_this.page);\n        _this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowUpdate: function rowUpdate(row, index, done, loading) {\n      var _this2 = this;\n      delete row.createTime;\n      update(row).then(function () {\n        done();\n        _this2.onLoad(_this2.page);\n        _this2.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowDel: function rowDel(row) {\n      var _this3 = this;\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(row.id);\n      }).then(function () {\n        _this3.onLoad(_this3.page);\n        _this3.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      });\n    },\n    searchReset: function searchReset() {\n      this.query = {};\n      this.onLoad(this.page);\n    },\n    searchChange: function searchChange(params, done) {\n      this.query = params;\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange: function selectionChange(list) {\n      this.selectionList = list;\n    },\n    handleDelete: function handleDelete() {\n      var _this4 = this;\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(_this4.ids);\n      }).then(function () {\n        _this4.onLoad(_this4.page);\n        _this4.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n        _this4.$refs.crud.toggleSelection();\n      });\n    },\n    handleReset: function handleReset() {\n      var _this5 = this;\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n      this.$confirm(\"确定将选择账号密码重置为123456?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return resetPassword(_this5.ids);\n      }).then(function () {\n        _this5.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n        _this5.$refs.crud.toggleSelection();\n      });\n    },\n    beforeOpen: function beforeOpen(done, type) {\n      var _this6 = this;\n      if ([\"edit\", \"view\"].includes(type)) {\n        getUser(this.form.id).then(function (res) {\n          _this6.form = res.data.data;\n        });\n      }\n      done();\n    },\n    currentChange: function currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange: function sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    refreshChange: function refreshChange() {\n      this.onLoad(this.page, this.query);\n    },\n    onLoad: function onLoad(page) {\n      var _this7 = this;\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.loading = true;\n      if (this.query.createTime && this.query.createTime.length == 2) {\n        this.query.beginCreateTime = moment(this.query.createTime[0] + \" 00:00:00\").format('YYYY-MM-DD HH:mm:ss');\n        this.query.endCreateTime = moment(this.query.createTime[1] + \" 23:59:59\").format('YYYY-MM-DD HH:mm:ss');\n        delete this.query.createTime;\n      }\n      getChannelList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(function (res) {\n        var data = res.data.data;\n        _this7.page.total = data.total;\n        _this7.data = data.records;\n        var _iterator = _createForOfIteratorHelper(_this7.data),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var item = _step.value;\n            item.clickNum = item.clickNum == \"\" ? 0 : item.clickNum;\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        _this7.loading = false;\n      });\n    }\n  }\n};",{"version":3,"names":["getChannelList","getUser","remove","update","addChannel","resetPassword","mapGetters","website","getToken","moment","toFixed","data","form","search","roleBox","excelBox","loading","selectionList","query","page","pageSize","currentPage","total","init","roleTree","deptTree","props","label","value","roleGrantList","roleTreeObj","option","height","calcHeight","searchShow","searchMenuSpan","tip","border","index","selection","viewBtn","column","prop","searchSpan","span","rules","required","message","trigger","width","overHidden","type","dicUrl","hide","tenantMode","addDisplay","editDisplay","viewDisplay","searchRange","format","valueFormat","slot","watch","computed","_objectSpread","permissionList","addBtn","vaildData","permission","user_add","user_view","delBtn","user_delete","editBtn","user_edit","ids","forEach","ele","push","id","join","methods","orderExamineNum","row","clickNum","Number","parseFloat","rowSave","done","_this","createTime","then","onLoad","$message","error","window","console","log","rowUpdate","_this2","rowDel","_this3","$confirm","confirmButtonText","cancelButtonText","searchReset","searchChange","params","selectionChange","list","handleDelete","_this4","length","warning","$refs","crud","toggleSelection","handleReset","_this5","beforeOpen","_this6","includes","res","currentChange","sizeChange","refreshChange","_this7","arguments","undefined","beginCreateTime","endCreateTime","Object","assign","records","_iterator","_createForOfIteratorHelper","_step","s","n","item","err","e","f"],"sources":["src/views/channel/channel.vue"],"sourcesContent":["<template>\n  <basic-container>\n    <avue-crud :option=\"option\"\n               :table-loading=\"loading\"\n               :data=\"data\"\n               ref=\"crud\"\n               v-model=\"form\"\n               :permission=\"permissionList\"\n               :search.sync=\"search\"\n               @row-del=\"rowDel\"\n               @row-update=\"rowUpdate\"\n               @row-save=\"rowSave\"\n               :before-open=\"beforeOpen\"\n               :page=\"page\"\n               @search-change=\"searchChange\"\n               @search-reset=\"searchReset\"\n               @selection-change=\"selectionChange\"\n               @current-change=\"currentChange\"\n               @size-change=\"sizeChange\"\n               @refresh-change=\"refreshChange\"\n               @on-load=\"onLoad\">\n      <template slot=\"menuLeft\">\n        <el-button type=\"danger\"\n                   size=\"small\"\n                   icon=\"el-icon-delete\"\n                   plain\n                   @click=\"handleDelete\">删 除\n        </el-button>\n        <el-button type=\"primary\"\n                   size=\"small\"\n                   plain\n                   icon=\"el-icon-refresh\"\n                   @click=\"handleReset\">密码重置\n        </el-button>\n      </template>\n      <template slot=\"inComeRate\" slot-scope=\"scope\">\n        <div >\n          {{orderExamineNum(scope.row)}}\n        </div>\n      </template>\n    </avue-crud>\n  </basic-container>\n</template>\n\n<script>\n  import {\n    getChannelList,\n    getUser,\n    remove,\n    update,\n    addChannel,\n    resetPassword\n  } from \"@/api/system/user\";\n  import {mapGetters} from \"vuex\";\n  import website from '@/config/website';\n  import {getToken} from '@/util/auth';\n  import moment from \"moment\";\n  import {toFixed} from \"../../constant/goods/constant\";\n\n  export default {\n    data() {\n      return {\n        form: {},\n        search:{},\n        roleBox: false,\n        excelBox: false,\n        loading: true,\n        selectionList: [],\n        query: {},\n        page: {\n          pageSize: 10,\n          currentPage: 1,\n          total: 0\n        },\n        init: {\n          roleTree: [],\n          deptTree: [],\n        },\n        props: {\n          label: \"title\",\n          value: \"key\"\n        },\n        roleGrantList: [],\n        roleTreeObj: [],\n        option: {\n          height: 'auto',\n          calcHeight: 210,\n          searchShow: true,\n          searchMenuSpan: 6,\n          tip: false,\n          border: true,\n          index: true,\n          selection: true,\n          viewBtn: true,\n          column: [\n            {\n              label: \"渠道名称\",\n              prop: \"realName\",\n              search: true,\n              searchSpan:4,\n              span: 12,\n              rules: [{\n                required: true,\n                message: \"请输入渠道名称\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"登录账号\",\n              prop: \"account\",\n              width:100,\n              rules: [{\n                required: true,\n                message: \"请输入登录账号\",\n                trigger: \"blur\"\n              }],\n              span: 12,\n            },\n            {\n              label: \"手机号码\",\n              width:120,\n              prop: \"phone\",\n              span: 12,\n              rules: [{\n                required: true,\n                message: \"请输入手机号\",\n                trigger: \"blur\"\n              }],\n              overHidden: true\n            },\n            {\n              label: \"所属资方\",\n              prop: \"tenantId\",\n              type: \"tree\",\n              dicUrl: \"/api/blade-system/tenant/select\",\n              props: {\n                label: \"tenantName\",\n                value: \"tenantId\"\n              },\n              hide: !website.tenantMode,\n              addDisplay: website.tenantMode,\n              editDisplay: website.tenantMode,\n              viewDisplay: website.tenantMode,\n              searchSpan:6,\n              search: true,\n              rules: [{\n                required: true,\n                message: \"请输入所属资方\",\n                trigger: \"click\"\n              }]\n            },\n            {\n              label: '时间',\n              prop: 'createTime',\n              type: 'daterange',\n              searchSpan:8,\n              addDisplay:false,\n              editDisplay: false,\n              searchRange:true,\n              format:'yyyy-MM-dd',\n              valueFormat:'yyyy-MM-dd',\n              hide:true,\n              search:true,\n            },\n            {\n              label: \"渠道状态\",\n              prop: \"status\",\n              type: \"select\",\n              addDisplay:false,\n              editDisplay: false,\n              dicUrl: \"/api/blade-system/dict/dictionary?code=channel_status\",\n              props: {\n                label: \"dictValue\",\n                value: \"dictKey\"\n              },\n            },\n            {\n              label: \"点击数量\",\n              addDisplay:false,\n              editDisplay: false,\n              prop: \"clickNum\",\n            },\n            {\n              label: \"注册数量\",\n              addDisplay:false,\n              editDisplay: false,\n              prop: \"clientNum\",\n            },\n            {\n              label: \"初始化订单\",\n              addDisplay:false,\n              editDisplay: false,\n              width:90,\n              prop: \"orderInitNum\",\n            },\n            {\n              label: \"总订单\",\n              addDisplay:false,\n              editDisplay: false,\n              prop: \"orderFreezeNum\",\n            },\n            {\n              label: \"总签合同\",\n              width:90,\n              addDisplay:false,\n              editDisplay: false,\n              prop: \"orderSignNum\",\n            },\n            {\n              label: \"总发货数\",\n              addDisplay:false,\n              editDisplay: false,\n              prop: \"orderSendNum\",\n            },\n            {\n              label: \"逾期数量\",\n              addDisplay:false,\n              editDisplay: false,\n              prop: \"orderOverdueNum\",\n            },\n            {\n              label: \"申请数\",\n              addDisplay:false,\n              editDisplay: false,\n              prop: \"orderExamineNum\",\n            },\n            {\n              label: \"通过率\",\n              addDisplay:false,\n              editDisplay: false,\n              prop: \"orderExamineOkNum\",\n            },\n            {\n              label: \"进件率\",\n              addDisplay:false,\n              editDisplay: false,\n              prop: \"inComeRate\",\n              slot: true,\n            }\n          ]\n        },\n        data: [],\n      };\n    },\n    watch: {\n\n    },\n    computed: {\n      ...mapGetters([\"userInfo\", \"permission\"]),\n      permissionList() {\n        return {\n          addBtn: this.vaildData(this.permission.user_add, false),\n          viewBtn: this.vaildData(this.permission.user_view, false),\n          delBtn: this.vaildData(this.permission.user_delete, false),\n          editBtn: this.vaildData(this.permission.user_edit, false)\n        };\n      },\n      ids() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids.join(\",\");\n      },\n    },\n    methods: {\n      orderExamineNum(row){\n        var clickNum = row.clickNum==\"\"?0:row.clickNum;\n        return toFixed(Number.parseFloat(clickNum)<=0?0:(Number.parseFloat(row.orderExamineNum)/Number.parseFloat(clickNum)),2)+\"%\";\n      },\n      rowSave(row, done, loading) {\n        delete row.createTime;\n        addChannel(row).then(() => {\n          done();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowUpdate(row, index, done, loading) {\n        delete row.createTime;\n        update(row).then(() => {\n          done();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowDel(row) {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(row.id);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n      searchReset() {\n        this.query = {};\n        this.onLoad(this.page);\n      },\n      searchChange(params, done) {\n        this.query = params;\n        this.page.currentPage = 1;\n        this.onLoad(this.page, params);\n        done();\n      },\n      selectionChange(list) {\n        this.selectionList = list;\n      },\n      handleDelete() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(this.ids);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      handleReset() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择账号密码重置为123456?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return resetPassword(this.ids);\n          })\n          .then(() => {\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      beforeOpen(done, type) {\n        if ([\"edit\", \"view\"].includes(type)) {\n          getUser(this.form.id).then(res => {\n            this.form = res.data.data;\n          });\n        }\n        done();\n      },\n      currentChange(currentPage) {\n        this.page.currentPage = currentPage;\n      },\n      sizeChange(pageSize) {\n        this.page.pageSize = pageSize;\n      },\n      refreshChange() {\n        this.onLoad(this.page, this.query);\n      },\n      onLoad(page, params = {}) {\n        this.loading = true;\n        if (this.query.createTime&&this.query.createTime.length == 2){\n          this.query.beginCreateTime = moment(this.query.createTime[0]+\" 00:00:00\").format('YYYY-MM-DD HH:mm:ss');\n          this.query.endCreateTime = moment(this.query.createTime[1]+\" 23:59:59\").format('YYYY-MM-DD HH:mm:ss');\n          delete this.query.createTime;\n        }\n        getChannelList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n          const data = res.data.data;\n          this.page.total = data.total;\n          this.data = data.records;\n          for(var item of this.data){\n            item.clickNum = item.clickNum == \"\"?0:item.clickNum\n          }\n          this.loading = false;\n        });\n      }\n    }\n  };\n</script>\n\n<style scoped>\n\n  :deep .avue-crud__pagination{\n    padding: 0px 0 0px 10px !important;\n  }\n\n  :deep .el-col {\n    margin-bottom: 0px !important;\n  }\n\n  :deep .avue-crud__right{\n    display: none !important;\n  }\n\n  :deep .avue-crud__search .el-form-item--mini.el-form-item, .avue-crud__search .el-form-item--small.el-form-item {\n    margin-bottom: 5px;\n  }\n</style>\n\n"],"mappings":"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"}]}