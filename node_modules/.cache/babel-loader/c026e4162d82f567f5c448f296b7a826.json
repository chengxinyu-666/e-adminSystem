{"remainingRequest":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\babel-loader\\lib\\index.js!D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\workCode\\xiaoE\\大圣系统源码\\admin\\src\\router\\axios.js","dependencies":[{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\src\\router\\axios.js","mtime":1670176390000},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\babel.config.js","mtime":1666766764000},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678778409044},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1678778390429},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\eslint-loader\\index.js","mtime":1678778406019}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\n/**\n * 全站http配置\n *\n * axios参数说明\n * isSerialize是否开启form表单提交\n * isToken是否需要token\n */\nimport axios from 'axios';\nimport store from '@/store/';\nimport router from '@/router/router';\nimport { serialize } from '@/util/util';\nimport { getToken } from '@/util/auth';\nimport { Message } from 'element-ui';\nimport website from '@/config/website';\nimport NProgress from 'nprogress'; // progress bar\nimport 'nprogress/nprogress.css'; // progress bar style\nimport { Base64 } from 'js-base64';\naxios.defaults.timeout = 10000;\n//返回其他状态吗\naxios.defaults.validateStatus = function (status) {\n  return status >= 200 && status <= 500; // 默认的\n};\n//跨域请求，允许保存cookie\naxios.defaults.withCredentials = true;\n// NProgress Configuration\nNProgress.configure({\n  showSpinner: false\n});\n//HTTPrequest拦截\naxios.interceptors.request.use(function (config) {\n  NProgress.start(); // start progress bar\n  var meta = config.meta || {};\n  var isToken = meta.isToken === false;\n  config.headers['Authorization'] = \"Basic \".concat(Base64.encode(\"\".concat(website.clientId, \":\").concat(website.clientSecret)));\n  if (getToken() && !isToken) {\n    config.headers['Blade-Auth'] = 'bearer ' + getToken(); // 让每个请求携带token--['Authorization']为自定义key 请根据实际情况自行修改\n  }\n  //headers中配置serialize为true开启序列化\n  if (config.method === 'post' && meta.isSerialize === true) {\n    config.data = serialize(config.data);\n  }\n  return config;\n}, function (error) {\n  console.log(\"status1--------\", status);\n  return Promise.reject(error);\n});\n//HTTPresponse拦截\naxios.interceptors.response.use(function (res) {\n  NProgress.done();\n  var status = res.data.code || res.status || 200;\n  var statusWhiteList = website.statusWhiteList || [];\n  var message = res.data.msg || '未知错误';\n  //如果在白名单里则自行catch逻辑处理\n  if (statusWhiteList.includes(status)) return Promise.reject(res);\n  //如果是401则跳转到登录页面\n  if (status === 401) store.dispatch('FedLogOut').then(function () {\n    return router.push({\n      path: '/login'\n    });\n  });\n  // 如果请求为非200否者默认统一处理\n  if (status !== 200) {\n    Message({\n      message: message,\n      type: 'error'\n    });\n    return Promise.reject(new Error(message));\n  }\n  return res;\n}, function (error) {\n  NProgress.done();\n  return Promise.reject(new Error(error));\n});\nexport default axios;",{"version":3,"names":["axios","store","router","serialize","getToken","Message","website","NProgress","Base64","defaults","timeout","validateStatus","status","withCredentials","configure","showSpinner","interceptors","request","use","config","start","meta","isToken","headers","concat","encode","clientId","clientSecret","method","isSerialize","data","error","console","log","Promise","reject","response","res","done","code","statusWhiteList","message","msg","includes","dispatch","then","push","path","type","Error"],"sources":["D:/workCode/xiaoE/大圣系统源码/admin/src/router/axios.js"],"sourcesContent":["/**\n * 全站http配置\n *\n * axios参数说明\n * isSerialize是否开启form表单提交\n * isToken是否需要token\n */\nimport axios from 'axios'\nimport store from '@/store/';\nimport router from '@/router/router'\nimport {serialize} from '@/util/util'\nimport {getToken} from '@/util/auth'\nimport {Message} from 'element-ui'\nimport website from '@/config/website';\nimport NProgress from 'nprogress' // progress bar\nimport 'nprogress/nprogress.css' // progress bar style\nimport {Base64} from 'js-base64';\n\naxios.defaults.timeout = 10000;\n//返回其他状态吗\naxios.defaults.validateStatus = function (status) {\n  return status >= 200 && status <= 500; // 默认的\n};\n//跨域请求，允许保存cookie\naxios.defaults.withCredentials = true;\n// NProgress Configuration\nNProgress.configure({\n  showSpinner: false\n});\n//HTTPrequest拦截\naxios.interceptors.request.use(config => {\n  NProgress.start() // start progress bar\n  const meta = (config.meta || {});\n  const isToken = meta.isToken === false;\n  config.headers['Authorization'] = `Basic ${Base64.encode(`${website.clientId}:${website.clientSecret}`)}`;\n  if (getToken() && !isToken) {\n    config.headers['Blade-Auth'] = 'bearer ' + getToken() // 让每个请求携带token--['Authorization']为自定义key 请根据实际情况自行修改\n  }\n  //headers中配置serialize为true开启序列化\n  if (config.method === 'post' && meta.isSerialize === true) {\n    config.data = serialize(config.data);\n  }\n  return config\n}, error => {\n  console.log(\"status1--------\",status)\n  return Promise.reject(error)\n});\n//HTTPresponse拦截\naxios.interceptors.response.use(res => {\n  NProgress.done();\n  const status = res.data.code || res.status || 200\n  const statusWhiteList = website.statusWhiteList || [];\n  const message = res.data.msg || '未知错误';\n  //如果在白名单里则自行catch逻辑处理\n  if (statusWhiteList.includes(status)) return Promise.reject(res);\n  //如果是401则跳转到登录页面\n  if (status === 401) store.dispatch('FedLogOut').then(() => router.push({path: '/login'}));\n  // 如果请求为非200否者默认统一处理\n  if (status !== 200) {\n    Message({\n      message: message,\n      type: 'error'\n    })\n    return Promise.reject(new Error(message))\n  }\n  return res;\n}, error => {\n  NProgress.done();\n  return Promise.reject(new Error(error));\n})\n\nexport default axios;\n"],"mappings":"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"}]}