{"remainingRequest":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\babel-loader\\lib\\index.js!D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workCode\\xiaoE\\大圣系统源码\\admin\\src\\components\\order\\dialog_sms_template.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\src\\components\\order\\dialog_sms_template.vue","mtime":1670176432000},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\babel.config.js","mtime":1666766764000},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678778409044},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1678778390429},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678778409044},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1678778410194}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.match\";\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport { headers as _headers } from \"../../util/auth\";\nimport { getList, getcanUserList } from \"@/api/parameter/buyunsmstemplate\";\nimport { send } from \"../../api/parameter/buyunsmstemplate\";\nimport { Message } from 'element-ui';\nexport default {\n  name: 'dialog',\n  data: function data() {\n    return {\n      param: null,\n      isShow: false,\n      sms: {\n        id: null,\n        content: null\n      },\n      list: [],\n      parameters: {},\n      options: [{\n        value: '选项1',\n        label: '审核主管'\n      }, {\n        value: '选项2',\n        label: '审核员工'\n      }],\n      users: [{\n        value: '选项1',\n        label: '张三'\n      }, {\n        value: '选项2',\n        label: '李四'\n      }]\n    };\n  },\n  watch: {\n    isShow: function isShow(val, oldVal) {\n      var _this = this;\n      if (!val) {\n        this.$nextTick(function () {\n          _this.end();\n        });\n      }\n    }\n  },\n  created: function created() {\n    var _this2 = this;\n    console.log(this.param);\n    getcanUserList(1, 1000, Object.assign({}, {})).then(function (res) {\n      _this2.list = res.data.data;\n    });\n  },\n  activated: function activated() {},\n  computed: {\n    params: function params() {\n      var items = [];\n      if (this.sms.content) {\n        var regex = /\\#(.+?)\\#/g; // [] 中括号\n        var reasult = this.sms.content.match(regex);\n        var _iterator = _createForOfIteratorHelper(reasult),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var item = _step.value;\n            items.push({\n              key: item,\n              value: null\n            });\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n      return items;\n    }\n  },\n  methods: {\n    headers: function headers() {\n      return _headers();\n    },\n    change: function change(data) {\n      this.sms.content = data.content;\n    },\n    closeFn: function closeFn() {},\n    confirm: function confirm() {\n      var _this3 = this;\n      var paras = {\n        clientId: this.param.clientId,\n        orderId: this.param.id\n      };\n      Object.assign(paras, this.parameters);\n      paras.id = this.sms.id;\n      send(paras).then(function (res) {\n        console.log(res.data.data);\n        _this3.$message(\"发送成功\");\n        _this3.isShow = false;\n      });\n      console.log(paras);\n    },\n    handleAvatarSuccess: function handleAvatarSuccess(res, file) {\n      this.imageUrl = URL.createObjectURL(file.raw);\n    },\n    beforeAvatarUpload: function beforeAvatarUpload(file) {\n      var isJPG = file.type === 'image/jpeg';\n      var isLt2M = file.size / 1024 / 1024 < 2;\n      if (!isJPG) {\n        this.$message.error('上传头像图片只能是 JPG 格式!');\n      }\n      if (!isLt2M) {\n        this.$message.error('上传头像图片大小不能超过 2MB!');\n      }\n      return isJPG && isLt2M;\n    }\n  }\n};",{"version":3,"names":["headers","getList","getcanUserList","send","Message","name","data","param","isShow","sms","id","content","list","parameters","options","value","label","users","watch","val","oldVal","_this","$nextTick","end","created","_this2","console","log","Object","assign","then","res","activated","computed","params","items","regex","reasult","match","_iterator","_createForOfIteratorHelper","_step","s","n","done","item","push","key","err","e","f","methods","change","closeFn","confirm","_this3","paras","clientId","orderId","$message","handleAvatarSuccess","file","imageUrl","URL","createObjectURL","raw","beforeAvatarUpload","isJPG","type","isLt2M","size","error"],"sources":["src/components/order/dialog_sms_template.vue"],"sourcesContent":["<!--\n 发送短信\n -->\n<template>\n  <div>\n    <el-dialog\n      v-if=\"isShow\"\n      title=\"设置二审\"\n      :visible.sync=\"isShow\"\n      width=\"600px\"\n      @close=\"closeFn\"\n      append-to-body\n      style=\"text-align: left\">\n      <el-form ref=\"form1\" label-width=\"120px\" size=\"small\">\n        <el-form-item label=\"短信模板\" prop=\"userNameCn\">\n          <el-select v-model=\"sms.id\" filterable placeholder=\"请选择短信模板\">\n          <el-option\n            v-for=\"item in list\"\n            :key=\"item.tplId\"\n            @click.native =\"change(item)\"\n            :label=\"item.smsType\"\n            :value=\"item.tplId\">\n          </el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"模板内容\" prop=\"userNameCn\">\n          <span>{{ sms.content == null?\"请选择发送模板\":sms.content }}</span>\n        </el-form-item>\n        <template v-for=\"item in params\">\n          <el-form-item :label=\"item.key\" prop=\"userNameCn\">\n            <el-input\n              placeholder=\"这里是替换模板的内容\"\n              v-model=\"parameters[item.key]\">\n            </el-input>\n          </el-form-item>\n        </template>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"isShow = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"confirm\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n<script>\n\n  import {headers} from \"../../util/auth\";\n  import {getList,getcanUserList} from \"@/api/parameter/buyunsmstemplate\";\n  import {send} from \"../../api/parameter/buyunsmstemplate\";\n  import {Message} from 'element-ui'\n\n  export default {\n    name: 'dialog',\n    data () {\n      return {\n        param:null,\n        isShow:false,\n        sms: {\n          id:null,\n          content:null,\n        },\n        list:[],\n        parameters: {},\n        options: [{\n          value: '选项1',\n          label: '审核主管'\n        }, {\n          value: '选项2',\n          label: '审核员工'\n        }],\n        users: [{\n          value: '选项1',\n          label: '张三'\n        }, {\n          value: '选项2',\n          label: '李四'\n        }],\n      };\n    },\n    watch: {\n      isShow(val, oldVal) {\n        if (!val){\n          this.$nextTick(() => {\n            this.end();\n          })\n        }\n      }\n    },\n    created () {\n      console.log(this.param)\n      getcanUserList(1, 1000, Object.assign({}, {})).then(res => {\n        this.list= res.data.data;\n      })\n    },\n    activated () { },\n  computed: {\n    params() {\n      var items = [];\n      if (this.sms.content){\n        var regex = /\\#(.+?)\\#/g; // [] 中括号\n        var reasult = this.sms.content.match(regex);\n        for (const item of reasult) {\n          items.push({key:item,value:null})\n        }\n      }\n      return items;\n    }\n  },\n    methods: {\n      headers(){\n        return headers()\n      },\n      change(data){\n        this.sms.content = data.content\n      },\n      closeFn () {\n      },\n      confirm(){\n        const  paras = {clientId:this.param.clientId,orderId:this.param.id};\n        Object.assign(paras,this.parameters)\n        paras.id = this.sms.id;\n        send(paras).then(res => {\n          console.log(res.data.data)\n          this.$message(\"发送成功\")\n          this.isShow = false\n        })\n        console.log(paras)\n      },\n      handleAvatarSuccess(res, file) {\n        this.imageUrl = URL.createObjectURL(file.raw);\n      },\n      beforeAvatarUpload(file) {\n        const isJPG = file.type === 'image/jpeg';\n        const isLt2M = file.size / 1024 / 1024 < 2;\n\n        if (!isJPG) {\n          this.$message.error('上传头像图片只能是 JPG 格式!');\n        }\n        if (!isLt2M) {\n          this.$message.error('上传头像图片大小不能超过 2MB!');\n        }\n        return isJPG && isLt2M;\n      }\n    },\n  };\n</script>\n<style lang=\"scss\" scope>\n  .avatar-uploader .el-upload {\n    border: 1px dashed #d9d9d9;\n    border-radius: 6px;\n    cursor: pointer;\n    position: relative;\n    overflow: hidden;\n  }\n  .avatar-uploader .el-upload:hover {\n    border-color: #409EFF;\n  }\n  .avatar-uploader-icon {\n    font-size: 28px;\n    color: #8c939d;\n    width: 178px;\n    height: 178px;\n    line-height: 178px;\n    text-align: center;\n  }\n  .avatar {\n    width: 178px;\n    height: 178px;\n    display: block;\n  }\n</style>\n"],"mappings":"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"}]}