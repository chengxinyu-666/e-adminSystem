{"remainingRequest":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\babel-loader\\lib\\index.js!D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workCode\\xiaoE\\大圣系统源码\\admin\\src\\views\\parameter\\entryformtemplate.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\src\\views\\parameter\\entryformtemplate.vue","mtime":1677231246000},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\babel.config.js","mtime":1666766764000},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678778409044},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1678778390429},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678778409044},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1678778410194}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"D:/workCode/xiaoE/\\u5927\\u5723\\u7CFB\\u7EDF\\u6E90\\u7801/admin/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { getList, getDetail, add, update, remove } from \"@/api/parameter/entryformtemplate\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  data: function data() {\n    return {\n      form: {\n        content: []\n      },\n      query: {},\n      loading: true,\n      inputVisible: {},\n      inputValue: '',\n      options: [{\n        value: 1,\n        label: '文本输入框'\n      }, {\n        value: 2,\n        label: '单选'\n      }, {\n        value: 5,\n        label: '多选'\n      }, {\n        value: 4,\n        label: '数字输入框'\n      }, {\n        value: 0,\n        label: '函数'\n      }, {\n        value: -1,\n        label: '编辑不显示'\n      }],\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      selectionList: [],\n      option: {\n        labelWidth: 120,\n        height: 'auto',\n        calcHeight: 210,\n        searchShow: true,\n        searchMenuSpan: 6,\n        tip: false,\n        border: true,\n        index: true,\n        viewBtn: true,\n        selection: true,\n        column: [{\n          label: \"模板名称\",\n          prop: \"title\",\n          span: 24,\n          rules: [{\n            required: true,\n            message: \"请输入进件单模板\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"进件单模板\",\n          prop: \"content\",\n          hide: true,\n          slot: true,\n          rules: [{\n            required: true,\n            message: \"请输入进件单模板\",\n            trigger: \"blur\"\n          }]\n        }]\n      },\n      data: []\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"permission\"])), {}, {\n    permissionList: function permissionList() {\n      return {\n        addBtn: this.vaildData(this.permission.entryformtemplate_add, false),\n        viewBtn: this.vaildData(this.permission.entryformtemplate_view, false),\n        delBtn: this.vaildData(this.permission.entryformtemplate_delete, false),\n        editBtn: this.vaildData(this.permission.entryformtemplate_edit, false)\n      };\n    },\n    ids: function ids() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  }),\n  methods: {\n    addItem: function addItem(data) {\n      data.push({\n        \"title\": \"\",\n        \"value\": []\n      });\n    },\n    addatr: function addatr(data) {\n      data.push({\n        \"edit\": false,\n        \"type\": 1,\n        \"title\": \"\",\n        \"value\": \"\",\n        \"option\": []\n      });\n    },\n    removeItem: function removeItem(data, item) {\n      data.splice(item, 1);\n    },\n    change: function change(one, item) {\n      if (item.value == 5) {\n        one.value = [];\n      }\n      console.log(one, item);\n    },\n    handleClose: function handleClose(tag, one) {\n      console.log(\"删除\", JSON.stringify(one), one, tag);\n      one.splice(one.indexOf(tag), 1);\n      console.log(\"删除\", JSON.stringify(one), one, tag);\n    },\n    showInput: function showInput(one) {\n      var _this = this;\n      one.edit = true;\n      console.log(one);\n      this.$nextTick(function (_) {\n        for (var x in _this.$refs) {\n          if (x == one.title) {\n            _this.$refs[x][0].$refs.input.focus();\n            return;\n          }\n        }\n      });\n    },\n    handleInputConfirm: function handleInputConfirm(one) {\n      var inputValue = this.inputValue;\n      if (inputValue) {\n        console.log(one.option);\n        if (!(one.option instanceof Array)) {\n          one.option = [];\n        }\n        one.option.push(inputValue);\n      }\n      one.edit = false;\n      this.inputValue = '';\n    },\n    rowSave: function rowSave(row, done, loading) {\n      var _this2 = this;\n      var data = Object.assign({}, row);\n      data.content = JSON.stringify(row.content);\n      add(data).then(function () {\n        done();\n        _this2.onLoad(_this2.page);\n        _this2.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowUpdate: function rowUpdate(row, index, done, loading) {\n      var _this3 = this;\n      var data = Object.assign({}, row);\n      data.content = JSON.stringify(row.content);\n      update(data).then(function () {\n        done();\n        _this3.onLoad(_this3.page);\n        _this3.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowDel: function rowDel(row) {\n      var _this4 = this;\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(row.id);\n      }).then(function () {\n        _this4.onLoad(_this4.page);\n        _this4.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      });\n    },\n    handleDelete: function handleDelete() {\n      var _this5 = this;\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(_this5.ids);\n      }).then(function () {\n        _this5.onLoad(_this5.page);\n        _this5.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n        _this5.$refs.crud.toggleSelection();\n      });\n    },\n    beforeOpen: function beforeOpen(done, type) {\n      var _this6 = this;\n      if ([\"edit\", \"view\"].includes(type)) {\n        getDetail(this.form.id).then(function (res) {\n          var one = res.data.data;\n          one.content = JSON.parse(one.content);\n          _this6.form = one;\n        });\n      }\n      done();\n    },\n    searchReset: function searchReset() {\n      this.query = {};\n      this.onLoad(this.page);\n    },\n    searchChange: function searchChange(params, done) {\n      this.query = params;\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange: function selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear: function selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    currentChange: function currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange: function sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    onLoad: function onLoad(page) {\n      var _this7 = this;\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.loading = true;\n      getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(function (res) {\n        var data = res.data.data;\n        _this7.page.total = data.total;\n        var _iterator = _createForOfIteratorHelper(data.records),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var item = _step.value;\n            item.content = JSON.parse(item.content);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        _this7.data = data.records;\n        _this7.loading = false;\n        _this7.selectionClear();\n      });\n    }\n  }\n};",{"version":3,"names":["getList","getDetail","add","update","remove","mapGetters","data","form","content","query","loading","inputVisible","inputValue","options","value","label","page","pageSize","currentPage","total","selectionList","option","labelWidth","height","calcHeight","searchShow","searchMenuSpan","tip","border","index","viewBtn","selection","column","prop","span","rules","required","message","trigger","hide","slot","computed","_objectSpread","permissionList","addBtn","vaildData","permission","entryformtemplate_add","entryformtemplate_view","delBtn","entryformtemplate_delete","editBtn","entryformtemplate_edit","ids","forEach","ele","push","id","join","methods","addItem","addatr","removeItem","item","splice","change","one","console","log","handleClose","tag","JSON","stringify","indexOf","showInput","_this","edit","$nextTick","_","x","$refs","title","input","focus","handleInputConfirm","Array","rowSave","row","done","_this2","Object","assign","then","onLoad","$message","type","error","window","rowUpdate","_this3","rowDel","_this4","$confirm","confirmButtonText","cancelButtonText","handleDelete","_this5","length","warning","crud","toggleSelection","beforeOpen","_this6","includes","res","parse","searchReset","searchChange","params","selectionChange","list","selectionClear","currentChange","sizeChange","_this7","arguments","undefined","_iterator","_createForOfIteratorHelper","records","_step","s","n","err","e","f"],"sources":["src/views/parameter/entryformtemplate.vue"],"sourcesContent":["<template>\n  <basic-container>\n    <avue-crud :option=\"option\"\n               :table-loading=\"loading\"\n               :data=\"data\"\n               :page=\"page\"\n               :permission=\"permissionList\"\n               :before-open=\"beforeOpen\"\n               v-model=\"form\"\n               ref=\"crud\"\n               @row-update=\"rowUpdate\"\n               @row-save=\"rowSave\"\n               @row-del=\"rowDel\"\n               @search-change=\"searchChange\"\n               @search-reset=\"searchReset\"\n               @selection-change=\"selectionChange\"\n               @current-change=\"currentChange\"\n               @size-change=\"sizeChange\"\n               @on-load=\"onLoad\">\n      <template slot=\"menuLeft\">\n        <el-button type=\"danger\"\n                   size=\"small\"\n                   icon=\"el-icon-delete\"\n                   plain\n                   v-if=\"permission.entryformtemplate_delete\"\n                   @click=\"handleDelete\">删 除\n        </el-button>\n      </template>\n      <template slot-scope=\"{type,disabled}\" slot=\"contentForm\">\n        <div style=\"border: 1px solid rgba(136, 136, 136, 1.0);padding: 10px;text-align: center;width: 800px\">\n          <div v-for=\"(item,index) in form.content\" style=\"margin-bottom: 20px\">\n            <div style=\"display: flex;margin-top: 10px\">\n              <span>类型名称:</span>\n              <el-input v-model=\"item.title\" style=\"flex: 1;margin-left: 10px;margin-right: 10px\" placeholder=\"请输入类型名称\"></el-input>\n              <el-button @click=\"removeItem(form.content,index);\">删除类型</el-button>\n            </div>\n            <div v-for=\"(one,n) in item.value\" style=\"margin-top: 20px;padding-bottom:10px;border-bottom: 1px solid #dddddd;\">\n              <div style=\"display: flex;width: auto\">\n                <span>子项名称:</span>\n                <el-input v-model=\"one.title\" placeholder=\"请输入名称\" style=\"width: 40%;margin-left: 10px\"></el-input>\n                <span style=\"margin-left: 10px\">子项类型:</span>\n                <el-select v-model=\"one.type\" placeholder=\"请选择\" style=\"flex: 1 !important;margin-left: 10px;margin-right: 10px\">\n                  <el-option\n                    v-for=\"item in options\"\n                    @click.native=\"change(one,item)\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\">\n                  </el-option>\n                </el-select>\n                <el-button @click=\"removeItem(item.value,n);\">删除子项</el-button>\n              </div>\n              <div v-if=\"one.type == -1\" style=\"width: 100%;display: flex;margin-top: 5px\">\n                <span>默认数据:</span><el-input v-model=\"one.value\" placeholder=\"请输入默认值\" style=\"width: 40%;margin-left: 10px\"></el-input>\n              </div>\n              <div v-if=\"one.type == 1\" style=\"width: 100%;display: flex;margin-top: 5px\">\n                <span>默认数据:</span><el-input v-model=\"one.value\" placeholder=\"请输入默认值\" style=\"width: 40%;margin-left: 10px\"></el-input>\n              </div>\n              <div v-else-if=\"one.type == 0\" style=\"width: 100%;display: flex;margin-top: 5px\">\n                <span>输入函数:</span><el-input v-model=\"one.val\" placeholder=\"请输入函数\" style=\"width: 40%;margin-left: 10px\"></el-input>\n              </div>\n              <div v-else-if=\"one.type == 2\" style=\"width: 100%;display: flex;margin-top: 5px\">\n                <span>输入选项:</span>\n                <div style=\"margin-left: 10px;display: flex;flex-direction: row;flex-wrap: wrap;\">\n                  <el-tag\n                    :key=\"tag\"\n                    v-if=\"one.option\"\n                    v-for=\"tag in one.option\"\n                    closable\n                    style=\"margin-right: 5px\"\n                    :disable-transitions=\"false\"\n                    @close=\"handleClose(tag,one.option)\">\n                    {{tag}}\n                  </el-tag>\n                  <el-input\n                    class=\"input-new-tag\"\n                    v-if=\"one.edit\"\n                    v-model=\"inputValue\"\n                    :ref=\"one.title\"\n                    size=\"small\"\n                    style=\"width: 90px;\"\n                    @keyup.enter.native=\"handleInputConfirm(one)\"\n                    @blur=\"handleInputConfirm(one)\"\n                  >\n                  </el-input>\n                  <el-button v-else class=\"button-new-tag\" size=\"small\" @click=\"showInput(one)\">添加值</el-button>\n                </div>\n                <span style=\"margin-left: 10px\">选择默认值:</span>\n                <el-select v-model=\"one.value\" placeholder=\"请选择\" style=\"flex: 1 !important;margin-left: 10px\">\n                  <el-option\n                    v-for=\"item in one.option\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                  </el-option>\n                </el-select>\n              </div>\n              <div v-else-if=\"one.type == 5\" style=\"width: 100%;display: flex;margin-top: 5px\">\n                <span>输入选项:</span>\n                <div style=\"margin-left: 10px;display: flex\">\n                  <el-tag\n                    :key=\"tag\"\n                    v-for=\"tag in one.option\"\n                    closable\n                    style=\"margin-right: 5px\"\n                    :disable-transitions=\"false\"\n                    @close=\"handleClose(tag,one.option)\">\n                    {{tag}}\n                  </el-tag>\n                  <el-input\n                    class=\"input-new-tag\"\n                    v-if=\"one.edit\"\n                    v-model=\"inputValue\"\n                    :ref=\"one.title\"\n                    size=\"small\"\n                    style=\"width: 90px;\"\n                    @keyup.enter.native=\"handleInputConfirm(one)\"\n                    @blur=\"handleInputConfirm(one)\"\n                  >\n                  </el-input>\n                  <el-button v-else class=\"button-new-tag\" size=\"small\" @click=\"showInput(one)\">添加值</el-button>\n                </div>\n                <span style=\"margin-left: 10px\">选择默认值:</span>\n                <el-select v-model=\"one.value\" multiple placeholder=\"请选择\" style=\"flex: 1 !important;margin-left: 10px\">\n                  <el-option\n                    v-for=\"item in one.option\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                  </el-option>\n                </el-select>\n              </div>\n            </div>\n            <div style=\"text-align: center;margin-top: 10px;\">\n              <el-button @click=\"addatr(item.value)\">新增子项</el-button>\n            </div>\n          </div>\n          <el-button @click=\"addItem(form.content)\">新增类别</el-button>\n        </div>\n      </template>\n      <template slot=\"content\" slot-scope=\"{row,index}\">\n        <div ></div>\n      </template>\n    </avue-crud>\n  </basic-container>\n</template>\n\n<script>\n  import {getList, getDetail, add, update, remove} from \"@/api/parameter/entryformtemplate\";\n  import {mapGetters} from \"vuex\";\n\n  export default {\n    data() {\n      return {\n        form: {content:[]},\n        query: {},\n        loading: true,\n        inputVisible: {},\n        inputValue: '',\n        options: [{\n          value: 1,\n          label: '文本输入框'\n        }, {\n          value: 2,\n          label: '单选'\n        }, {\n          value: 5,\n          label: '多选'\n        }, {\n          value: 4,\n          label: '数字输入框'\n        }, {\n          value: 0,\n          label: '函数'\n        }, {\n          value: -1,\n          label: '编辑不显示'\n        }],\n        page: {\n          pageSize: 10,\n          currentPage: 1,\n          total: 0\n        },\n        selectionList: [],\n        option: {\n          labelWidth: 120,\n          height: 'auto',\n          calcHeight: 210,\n          searchShow: true,\n          searchMenuSpan: 6,\n          tip: false,\n          border: true,\n          index: true,\n          viewBtn: true,\n          selection: true,\n          column: [\n            {\n              label: \"模板名称\",\n              prop: \"title\",\n              span:24,\n              rules: [{\n                required: true,\n                message: \"请输入进件单模板\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"进件单模板\",\n              prop: \"content\",\n              hide: true,\n              slot: true,\n              rules: [{\n                required: true,\n                message: \"请输入进件单模板\",\n                trigger: \"blur\"\n              }]\n            },\n          ]\n        },\n        data: []\n      };\n    },\n    computed: {\n      ...mapGetters([\"permission\"]),\n      permissionList() {\n        return {\n          addBtn: this.vaildData(this.permission.entryformtemplate_add, false),\n          viewBtn: this.vaildData(this.permission.entryformtemplate_view, false),\n          delBtn: this.vaildData(this.permission.entryformtemplate_delete, false),\n          editBtn: this.vaildData(this.permission.entryformtemplate_edit, false)\n        };\n      },\n      ids() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids.join(\",\");\n      }\n    },\n    methods: {\n      addItem(data){\n        data.push({\n          \"title\": \"\",\n          \"value\": []\n        })\n      },\n      addatr(data){\n        data.push({\n          \"edit\": false,\n          \"type\": 1,\n          \"title\": \"\",\n          \"value\": \"\",\n          \"option\": []\n        })\n      },\n      removeItem(data,item){\n        data.splice(item,1)\n      },\n      change(one,item){\n        if (item.value == 5){\n          one.value = []\n        }\n        console.log(one,item)\n      },\n      handleClose(tag,one) {\n        console.log(\"删除\",JSON.stringify(one),one,tag)\n        one.splice(one.indexOf(tag), 1);\n        console.log(\"删除\",JSON.stringify(one),one,tag)\n      },\n\n      showInput(one) {\n        one.edit= true;\n        console.log(one)\n        this.$nextTick(_ => {\n          for (const x in this.$refs) {\n            if (x == one.title){\n              this.$refs[x][0].$refs.input.focus();\n              return\n            }\n          }\n        });\n      },\n      handleInputConfirm(one) {\n        let inputValue = this.inputValue;\n        if (inputValue) {\n          console.log(one.option)\n          if(!(one.option instanceof Array)){\n            one.option = []\n          }\n          one.option.push(inputValue);\n        }\n        one.edit = false;\n        this.inputValue = '';\n      },\n      rowSave(row, done, loading) {\n        let data = Object.assign({},row);\n        data.content = JSON.stringify(row.content)\n        add(data).then(() => {\n          done();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowUpdate(row, index, done, loading) {\n        let data = Object.assign({},row);\n        data.content = JSON.stringify(row.content)\n        update(data).then(() => {\n          done();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowDel(row) {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(row.id);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n      handleDelete() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(this.ids);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      beforeOpen(done, type) {\n        if ([\"edit\", \"view\"].includes(type)) {\n          getDetail(this.form.id).then(res => {\n            let one = res.data.data;\n            one.content = JSON.parse(one.content);\n            this.form = one;\n          });\n        }\n        done();\n      },\n      searchReset() {\n        this.query = {};\n        this.onLoad(this.page);\n      },\n      searchChange(params, done) {\n        this.query = params;\n        this.page.currentPage = 1;\n        this.onLoad(this.page, params);\n        done();\n      },\n      selectionChange(list) {\n        this.selectionList = list;\n      },\n      selectionClear() {\n        this.selectionList = [];\n        this.$refs.crud.toggleSelection();\n      },\n      currentChange(currentPage){\n        this.page.currentPage = currentPage;\n      },\n      sizeChange(pageSize){\n        this.page.pageSize = pageSize;\n      },\n      onLoad(page, params = {}) {\n        this.loading = true;\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n          const data = res.data.data;\n          this.page.total = data.total;\n          for (const item of data.records) {\n            item.content = JSON.parse(item.content);\n          }\n          this.data = data.records;\n          this.loading = false;\n          this.selectionClear();\n        });\n      }\n    }\n  };\n</script>\n\n<style scoped>\n  .button-new-tag{\n    height: 32px !important;\n  }\n</style>\n"],"mappings":"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"}]}