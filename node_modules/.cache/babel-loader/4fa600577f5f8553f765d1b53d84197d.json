{"remainingRequest":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\babel-loader\\lib\\index.js!D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workCode\\xiaoE\\大圣系统源码\\admin\\src\\views\\authority\\datascope.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\src\\views\\authority\\datascope.vue","mtime":1666766764000},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\babel.config.js","mtime":1666766764000},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678778409044},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1678778390429},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678778409044},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1678778410194}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"D:/workCode/xiaoE/\\u5927\\u5723\\u7CFB\\u7EDF\\u6E90\\u7801/admin/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { add, remove, update, getLazyMenuList, getMenu } from \"@/api/system/menu\";\nimport { addDataScope, removeDataScope, updateDataScope, getListDataScope, getMenuDataScope } from \"@/api/system/scope\";\nimport { mapGetters } from \"vuex\";\nimport iconList from \"@/config/iconList\";\nimport func from \"@/util/func\";\nexport default {\n  data: function data() {\n    return {\n      form: {},\n      selectionList: [],\n      query: {},\n      loading: true,\n      parentId: 0,\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      drawerVisible: false,\n      direction: 'rtl',\n      scopeMenuId: 0,\n      scopeMenuCode: '',\n      scopeMenuName: \"菜单\",\n      scopeLoading: false,\n      menu: true,\n      watchMode: true,\n      option: {\n        lazy: true,\n        tip: false,\n        simplePage: true,\n        searchShow: true,\n        searchMenuSpan: 6,\n        dialogWidth: \"60%\",\n        tree: true,\n        border: true,\n        index: true,\n        selection: true,\n        viewBtn: false,\n        editBtn: false,\n        addBtn: false,\n        delBtn: false,\n        menuWidth: 150,\n        dialogClickModal: false,\n        column: [{\n          label: \"菜单名称\",\n          prop: \"name\",\n          search: true,\n          rules: [{\n            required: true,\n            message: \"请输入菜单名称\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"路由地址\",\n          prop: \"path\",\n          rules: [{\n            required: true,\n            message: \"请输入路由地址\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"上级菜单\",\n          prop: \"parentId\",\n          type: \"tree\",\n          dicUrl: \"/api/blade-system/menu/tree\",\n          hide: true,\n          props: {\n            label: \"title\"\n          },\n          rules: [{\n            required: false,\n            message: \"请选择上级菜单\",\n            trigger: \"click\"\n          }]\n        }, {\n          label: \"菜单图标\",\n          prop: \"source\",\n          type: \"icon\",\n          slot: true,\n          width: 80,\n          iconList: iconList,\n          rules: [{\n            required: true,\n            message: \"请输入菜单图标\",\n            trigger: \"click\"\n          }]\n        }, {\n          label: \"菜单编号\",\n          prop: \"code\",\n          search: true,\n          rules: [{\n            required: true,\n            message: \"请输入菜单编号\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"菜单类型\",\n          prop: \"category\",\n          type: \"radio\",\n          dicData: [{\n            label: \"菜单\",\n            value: 1\n          }, {\n            label: \"按钮\",\n            value: 2\n          }],\n          hide: true,\n          rules: [{\n            required: true,\n            message: \"请选择菜单类型\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"菜单别名\",\n          prop: \"alias\",\n          rules: [{\n            required: true,\n            message: \"请输入菜单别名\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"按钮功能\",\n          prop: \"action\",\n          type: \"radio\",\n          dicData: [{\n            label: \"工具栏\",\n            value: 0\n          }, {\n            label: \"操作栏\",\n            value: 1\n          }, {\n            label: \"工具操作栏\",\n            value: 2\n          }],\n          hide: true,\n          rules: [{\n            required: true,\n            message: \"请选择按钮功能\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"菜单排序\",\n          prop: \"sort\",\n          type: \"number\",\n          width: 80,\n          rules: [{\n            required: true,\n            message: \"请输入菜单排序\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"新窗口\",\n          prop: \"isOpen\",\n          type: \"radio\",\n          dicData: [{\n            label: \"否\",\n            value: 0\n          }, {\n            label: \"是\",\n            value: 1\n          }],\n          hide: true\n        }, {\n          label: \"菜单备注\",\n          prop: \"remark\",\n          type: \"textarea\",\n          span: 24,\n          minRows: 6,\n          hide: true\n        }]\n      },\n      data: [],\n      formScope: {},\n      selectionListScope: [],\n      pageScope: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      optionScope: {\n        tip: false,\n        searchShow: true,\n        searchMenuSpan: 6,\n        border: true,\n        index: true,\n        viewBtn: true,\n        selection: true,\n        menuWidth: 200,\n        dialogWidth: 900,\n        dialogClickModal: false,\n        column: [{\n          label: \"权限名称\",\n          prop: \"scopeName\",\n          search: true,\n          value: \"\",\n          rules: [{\n            required: true,\n            message: \"请输入数据权限名称\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"权限编号\",\n          prop: \"resourceCode\",\n          search: true,\n          width: 100,\n          rules: [{\n            required: true,\n            message: \"请输入数据权限编号\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"权限字段\",\n          prop: \"scopeColumn\",\n          width: 130,\n          rules: [{\n            required: true,\n            message: \"请输入数据权限编号\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"规则类型\",\n          type: \"select\",\n          dicUrl: \"/api/blade-system/dict/dictionary?code=data_scope_type\",\n          props: {\n            label: \"dictValue\",\n            value: \"dictKey\"\n          },\n          dataType: \"number\",\n          slot: true,\n          width: 140,\n          prop: \"scopeType\",\n          rules: [{\n            required: true,\n            message: \"请输入通知类型\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"可见字段\",\n          prop: \"scopeField\",\n          span: 24,\n          hide: true,\n          value: \"*\",\n          rules: [{\n            required: true,\n            message: \"请输入数据权限可见的字段\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"权限类名\",\n          prop: \"scopeClass\",\n          span: 24,\n          hide: true,\n          rules: [{\n            required: true,\n            message: \"请输入MybatisMapper对应方法的完整类名路径\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"规则值\",\n          prop: \"scopeValue\",\n          span: 24,\n          minRows: 5,\n          type: \"textarea\",\n          display: true,\n          hide: true\n        }, {\n          label: \"备注\",\n          prop: \"remark\",\n          span: 24,\n          hide: true\n        }]\n      },\n      dataScope: []\n    };\n  },\n  watch: {\n    'formScope.scopeType': function formScopeScopeType() {\n      this.initScope();\n    }\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"permission\"])), {}, {\n    permissionList: function permissionList() {\n      return {\n        addBtn: this.vaildData(this.permission.menu_add, false),\n        viewBtn: this.vaildData(this.permission.menu_view, false),\n        delBtn: this.vaildData(this.permission.menu_delete, false),\n        editBtn: this.vaildData(this.permission.menu_edit, false)\n      };\n    },\n    ids: function ids() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    },\n    scopeIds: function scopeIds() {\n      var ids = [];\n      this.selectionListScope.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  }),\n  methods: {\n    initScope: function initScope() {\n      var _this = this;\n      var scopeType = func.toInt(this.formScope.scopeType);\n      var watchMode = this.watchMode;\n      var column = \"-\",\n        name = \"暂无\";\n      if (scopeType === 1) {\n        column = \"-\";\n        name = \"全部可见\";\n      } else if (scopeType === 2) {\n        column = \"create_user\";\n        name = \"本人可见\";\n      } else if (scopeType === 3) {\n        column = \"create_dept\";\n        name = \"所在机构可见\";\n      } else if (scopeType === 4) {\n        column = \"create_dept\";\n        name = \"所在机构可见及子级可见\";\n      } else if (scopeType === 5) {\n        column = \"\";\n        name = \"自定义\";\n      }\n      this.$refs.crudScope.option.column.filter(function (item) {\n        if (watchMode) {\n          if (item.prop === \"scopeName\") {\n            _this.formScope.scopeName = \"\".concat(_this.scopeMenuName, \" [\").concat(name, \"]\");\n          }\n          if (item.prop === \"resourceCode\") {\n            _this.formScope.resourceCode = _this.scopeMenuCode;\n          }\n          if (item.prop === \"scopeColumn\") {\n            _this.formScope.scopeColumn = column;\n          }\n        }\n        if (item.prop === \"scopeValue\") {\n          item.display = scopeType === 5;\n        }\n      });\n    },\n    // 菜单管理模块\n    rowSave: function rowSave(row, done, loading) {\n      var _this2 = this;\n      add(row).then(function () {\n        _this2.onLoad(_this2.page);\n        _this2.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n        done();\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowUpdate: function rowUpdate(row, index, done, loading) {\n      var _this3 = this;\n      update(row).then(function () {\n        _this3.onLoad(_this3.page);\n        _this3.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n        done();\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowDel: function rowDel(row) {\n      var _this4 = this;\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(row.id);\n      }).then(function () {\n        _this4.onLoad(_this4.page);\n        _this4.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      });\n    },\n    searchReset: function searchReset() {\n      this.query = {};\n      this.parentId = 0;\n      this.onLoad(this.page);\n    },\n    searchChange: function searchChange(params, done) {\n      this.query = params;\n      this.parentId = '';\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange: function selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear: function selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    handleDelete: function handleDelete() {\n      var _this5 = this;\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(_this5.ids);\n      }).then(function () {\n        _this5.onLoad(_this5.page);\n        _this5.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n        _this5.$refs.crud.toggleSelection();\n      });\n    },\n    beforeOpen: function beforeOpen(done, type) {\n      var _this6 = this;\n      if ([\"edit\", \"view\"].includes(type)) {\n        getMenu(this.form.id).then(function (res) {\n          _this6.form = res.data.data;\n        });\n      }\n      done();\n    },\n    currentChange: function currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange: function sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    refreshChange: function refreshChange() {\n      this.onLoad(this.page, this.query);\n    },\n    onLoad: function onLoad(page) {\n      var _this7 = this;\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.loading = true;\n      getLazyMenuList(this.parentId, Object.assign(params, this.query)).then(function (res) {\n        _this7.data = res.data.data;\n        _this7.loading = false;\n        _this7.selectionClear();\n      });\n    },\n    treeLoad: function treeLoad(tree, treeNode, resolve) {\n      var parentId = tree.id;\n      getLazyMenuList(parentId).then(function (res) {\n        resolve(res.data.data);\n      });\n    },\n    // 数据权限模块\n    handleDataScope: function handleDataScope(row) {\n      this.drawerVisible = true;\n      this.scopeMenuId = row.id;\n      this.scopeMenuCode = row.code;\n      this.scopeMenuName = row.name;\n      this.onLoadScope(this.pageScope);\n    },\n    handleDrawerClose: function handleDrawerClose(hide) {\n      hide();\n    },\n    rowSaveScope: function rowSaveScope(row, done, loading) {\n      var _this8 = this;\n      row = _objectSpread(_objectSpread({}, row), {}, {\n        menuId: this.scopeMenuId\n      });\n      addDataScope(row).then(function () {\n        _this8.onLoadScope(_this8.pageScope);\n        _this8.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n        done();\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowUpdateScope: function rowUpdateScope(row, index, done, loading) {\n      var _this9 = this;\n      row = _objectSpread(_objectSpread({}, row), {}, {\n        menuId: this.scopeMenuId\n      });\n      updateDataScope(row).then(function () {\n        _this9.onLoadScope(_this9.pageScope);\n        _this9.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n        done();\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowDelScope: function rowDelScope(row) {\n      var _this10 = this;\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return removeDataScope(row.id);\n      }).then(function () {\n        _this10.onLoadScope(_this10.pageScope);\n        _this10.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      });\n    },\n    handleDeleteScope: function handleDeleteScope() {\n      var _this11 = this;\n      if (this.selectionListScope.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return removeDataScope(_this11.scopeIds);\n      }).then(function () {\n        _this11.onLoadScope(_this11.pageScope);\n        _this11.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n        _this11.$refs.crudScope.toggleSelection();\n      });\n    },\n    beforeOpenScope: function beforeOpenScope(done, type) {\n      var _this12 = this;\n      if ([\"add\"].includes(type)) {\n        this.watchMode = true;\n        this.initScope();\n      }\n      if ([\"edit\", \"view\"].includes(type)) {\n        this.watchMode = false;\n        getMenuDataScope(this.formScope.id).then(function (res) {\n          _this12.formScope = res.data.data;\n        });\n      }\n      done();\n    },\n    searchResetScope: function searchResetScope() {\n      this.onLoadScope(this.pageScope);\n    },\n    searchChangeScope: function searchChangeScope(params, done) {\n      this.onLoadScope(this.pageScope, params);\n      done();\n    },\n    selectionChangeScope: function selectionChangeScope(list) {\n      this.selectionListScope = list;\n    },\n    currentChangeScope: function currentChangeScope(currentPage) {\n      this.pageScope.currentPage = currentPage;\n    },\n    sizeChangeScope: function sizeChangeScope(pageSize) {\n      this.pageScope.pageSize = pageSize;\n    },\n    onLoadScope: function onLoadScope(page) {\n      var _this13 = this;\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.scopeLoading = true;\n      var values = _objectSpread(_objectSpread({}, params), {}, {\n        menuId: this.scopeMenuId\n      });\n      getListDataScope(page.currentPage, page.pageSize, Object.assign(values, this.query)).then(function (res) {\n        var data = res.data.data;\n        _this13.pageScope.total = data.total;\n        _this13.dataScope = data.records;\n        _this13.selectionListScope = [];\n        _this13.scopeLoading = false;\n      });\n    }\n  }\n};",{"version":3,"names":["add","remove","update","getLazyMenuList","getMenu","addDataScope","removeDataScope","updateDataScope","getListDataScope","getMenuDataScope","mapGetters","iconList","func","data","form","selectionList","query","loading","parentId","page","pageSize","currentPage","total","drawerVisible","direction","scopeMenuId","scopeMenuCode","scopeMenuName","scopeLoading","menu","watchMode","option","lazy","tip","simplePage","searchShow","searchMenuSpan","dialogWidth","tree","border","index","selection","viewBtn","editBtn","addBtn","delBtn","menuWidth","dialogClickModal","column","label","prop","search","rules","required","message","trigger","type","dicUrl","hide","props","slot","width","dicData","value","span","minRows","formScope","selectionListScope","pageScope","optionScope","dataType","display","dataScope","watch","formScopeScopeType","initScope","computed","_objectSpread","permissionList","vaildData","permission","menu_add","menu_view","menu_delete","menu_edit","ids","forEach","ele","push","id","join","scopeIds","methods","_this","scopeType","toInt","name","$refs","crudScope","filter","item","scopeName","concat","resourceCode","scopeColumn","rowSave","row","done","_this2","then","onLoad","$message","error","window","console","log","rowUpdate","_this3","rowDel","_this4","$confirm","confirmButtonText","cancelButtonText","searchReset","searchChange","params","selectionChange","list","selectionClear","crud","toggleSelection","handleDelete","_this5","length","warning","beforeOpen","_this6","includes","res","currentChange","sizeChange","refreshChange","_this7","arguments","undefined","Object","assign","treeLoad","treeNode","resolve","handleDataScope","code","onLoadScope","handleDrawerClose","rowSaveScope","_this8","menuId","rowUpdateScope","_this9","rowDelScope","_this10","handleDeleteScope","_this11","beforeOpenScope","_this12","searchResetScope","searchChangeScope","selectionChangeScope","currentChangeScope","sizeChangeScope","_this13","values","records"],"sources":["src/views/authority/datascope.vue"],"sourcesContent":["<template>\r\n  <basic-container>\r\n    <avue-crud :option=\"option\"\r\n               :table-loading=\"loading\"\r\n               :data=\"data\"\r\n               ref=\"crud\"\r\n               v-model=\"form\"\r\n               :permission=\"permissionList\"\r\n               :before-open=\"beforeOpen\"\r\n               @row-del=\"rowDel\"\r\n               @row-update=\"rowUpdate\"\r\n               @row-save=\"rowSave\"\r\n               @search-change=\"searchChange\"\r\n               @search-reset=\"searchReset\"\r\n               @selection-change=\"selectionChange\"\r\n               @current-change=\"currentChange\"\r\n               @size-change=\"sizeChange\"\r\n               @refresh-change=\"refreshChange\"\r\n               @on-load=\"onLoad\"\r\n               @tree-load=\"treeLoad\">\r\n      <template slot-scope=\"{row}\" slot=\"menu\">\r\n        <el-button type=\"text\"\r\n                   icon=\"el-icon-setting\"\r\n                   size=\"small\"\r\n                   v-if=\"permission.data_scope_setting\"\r\n                   plain\r\n                   style=\"border: 0;background-color: transparent !important;\"\r\n                   @click.stop=\"handleDataScope(row)\">权限配置\r\n        </el-button>\r\n      </template>\r\n      <template slot-scope=\"{row}\" slot=\"source\">\r\n        <div style=\"text-align:center\">\r\n          <i :class=\"row.source\"/>\r\n        </div>\r\n      </template>\r\n    </avue-crud>\r\n    <el-drawer :title=\"`[${scopeMenuName}] 数据权限配置`\" :visible.sync=\"drawerVisible\" :direction=\"direction\"\r\n               append-to-body\r\n               :before-close=\"handleDrawerClose\" size=\"1000px\">\r\n      <basic-container>\r\n        <avue-crud :option=\"optionScope\"\r\n                   :data=\"dataScope\"\r\n                   :page=\"pageScope\"\r\n                   v-model=\"formScope\"\r\n                   :table-loading=\"scopeLoading\"\r\n                   ref=\"crudScope\"\r\n                   @row-del=\"rowDelScope\"\r\n                   @row-update=\"rowUpdateScope\"\r\n                   @row-save=\"rowSaveScope\"\r\n                   :before-open=\"beforeOpenScope\"\r\n                   @search-change=\"searchChangeScope\"\r\n                   @search-reset=\"searchResetScope\"\r\n                   @selection-change=\"selectionChangeScope\"\r\n                   @current-change=\"currentChangeScope\"\r\n                   @size-change=\"sizeChangeScope\"\r\n                   @on-load=\"onLoadScope\">\r\n          <template slot=\"menuLeft\">\r\n            <el-button type=\"danger\"\r\n                       size=\"small\"\r\n                       icon=\"el-icon-delete\"\r\n                       plain\r\n                       @click=\"handleDeleteScope\">删 除\r\n            </el-button>\r\n          </template>\r\n          <template slot-scope=\"{row}\"\r\n                    slot=\"scopeType\">\r\n            <el-tag>{{row.scopeTypeName}}</el-tag>\r\n          </template>\r\n        </avue-crud>\r\n      </basic-container>\r\n    </el-drawer>\r\n  </basic-container>\r\n</template>\r\n\r\n<script>\r\n  import {\r\n    add,\r\n    remove,\r\n    update,\r\n    getLazyMenuList,\r\n    getMenu\r\n  } from \"@/api/system/menu\";\r\n  import {\r\n    addDataScope,\r\n    removeDataScope,\r\n    updateDataScope,\r\n    getListDataScope,\r\n    getMenuDataScope\r\n  } from \"@/api/system/scope\";\r\n  import {mapGetters} from \"vuex\";\r\n  import iconList from \"@/config/iconList\";\r\n  import func from \"@/util/func\";\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        form: {},\r\n        selectionList: [],\r\n        query: {},\r\n        loading: true,\r\n        parentId: 0,\r\n        page: {\r\n          pageSize: 10,\r\n          currentPage: 1,\r\n          total: 0\r\n        },\r\n        drawerVisible: false,\r\n        direction: 'rtl',\r\n        scopeMenuId: 0,\r\n        scopeMenuCode: '',\r\n        scopeMenuName: \"菜单\",\r\n        scopeLoading: false,\r\n        menu: true,\r\n        watchMode: true,\r\n        option: {\r\n          lazy: true,\r\n          tip: false,\r\n          simplePage: true,\r\n          searchShow: true,\r\n          searchMenuSpan: 6,\r\n          dialogWidth: \"60%\",\r\n          tree: true,\r\n          border: true,\r\n          index: true,\r\n          selection: true,\r\n          viewBtn: false,\r\n          editBtn: false,\r\n          addBtn: false,\r\n          delBtn: false,\r\n          menuWidth: 150,\r\n          dialogClickModal: false,\r\n          column: [\r\n            {\r\n              label: \"菜单名称\",\r\n              prop: \"name\",\r\n              search: true,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"请输入菜单名称\",\r\n                  trigger: \"blur\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"路由地址\",\r\n              prop: \"path\",\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"请输入路由地址\",\r\n                  trigger: \"blur\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"上级菜单\",\r\n              prop: \"parentId\",\r\n              type: \"tree\",\r\n              dicUrl: \"/api/blade-system/menu/tree\",\r\n              hide: true,\r\n              props: {\r\n                label: \"title\"\r\n              },\r\n              rules: [\r\n                {\r\n                  required: false,\r\n                  message: \"请选择上级菜单\",\r\n                  trigger: \"click\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"菜单图标\",\r\n              prop: \"source\",\r\n              type: \"icon\",\r\n              slot: true,\r\n              width: 80,\r\n              iconList: iconList,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"请输入菜单图标\",\r\n                  trigger: \"click\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"菜单编号\",\r\n              prop: \"code\",\r\n              search: true,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"请输入菜单编号\",\r\n                  trigger: \"blur\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"菜单类型\",\r\n              prop: \"category\",\r\n              type: \"radio\",\r\n              dicData: [\r\n                {\r\n                  label: \"菜单\",\r\n                  value: 1\r\n                },\r\n                {\r\n                  label: \"按钮\",\r\n                  value: 2\r\n                }\r\n              ],\r\n              hide: true,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"请选择菜单类型\",\r\n                  trigger: \"blur\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"菜单别名\",\r\n              prop: \"alias\",\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"请输入菜单别名\",\r\n                  trigger: \"blur\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"按钮功能\",\r\n              prop: \"action\",\r\n              type: \"radio\",\r\n              dicData: [\r\n                {\r\n                  label: \"工具栏\",\r\n                  value: 0\r\n                },\r\n                {\r\n                  label: \"操作栏\",\r\n                  value: 1\r\n                },\r\n                {\r\n                  label: \"工具操作栏\",\r\n                  value: 2\r\n                }\r\n              ],\r\n              hide: true,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"请选择按钮功能\",\r\n                  trigger: \"blur\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"菜单排序\",\r\n              prop: \"sort\",\r\n              type: \"number\",\r\n              width: 80,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"请输入菜单排序\",\r\n                  trigger: \"blur\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"新窗口\",\r\n              prop: \"isOpen\",\r\n              type: \"radio\",\r\n              dicData: [\r\n                {\r\n                  label: \"否\",\r\n                  value: 0\r\n                },\r\n                {\r\n                  label: \"是\",\r\n                  value: 1\r\n                },\r\n              ],\r\n              hide: true\r\n            },\r\n            {\r\n              label: \"菜单备注\",\r\n              prop: \"remark\",\r\n              type: \"textarea\",\r\n              span: 24,\r\n              minRows: 6,\r\n              hide: true\r\n            }\r\n          ]\r\n        },\r\n        data: [],\r\n        formScope: {},\r\n        selectionListScope: [],\r\n        pageScope: {\r\n          pageSize: 10,\r\n          currentPage: 1,\r\n          total: 0\r\n        },\r\n        optionScope: {\r\n          tip: false,\r\n          searchShow: true,\r\n          searchMenuSpan: 6,\r\n          border: true,\r\n          index: true,\r\n          viewBtn: true,\r\n          selection: true,\r\n          menuWidth: 200,\r\n          dialogWidth: 900,\r\n          dialogClickModal: false,\r\n          column: [\r\n            {\r\n              label: \"权限名称\",\r\n              prop: \"scopeName\",\r\n              search: true,\r\n              value: \"\",\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入数据权限名称\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"权限编号\",\r\n              prop: \"resourceCode\",\r\n              search: true,\r\n              width: 100,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入数据权限编号\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"权限字段\",\r\n              prop: \"scopeColumn\",\r\n              width: 130,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入数据权限编号\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"规则类型\",\r\n              type: \"select\",\r\n              dicUrl: \"/api/blade-system/dict/dictionary?code=data_scope_type\",\r\n              props: {\r\n                label: \"dictValue\",\r\n                value: \"dictKey\"\r\n              },\r\n              dataType: \"number\",\r\n              slot: true,\r\n              width: 140,\r\n              prop: \"scopeType\",\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入通知类型\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"可见字段\",\r\n              prop: \"scopeField\",\r\n              span: 24,\r\n              hide: true,\r\n              value: \"*\",\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入数据权限可见的字段\",\r\n                trigger: \"blur\"\r\n              }],\r\n            },\r\n            {\r\n              label: \"权限类名\",\r\n              prop: \"scopeClass\",\r\n              span: 24,\r\n              hide: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入MybatisMapper对应方法的完整类名路径\",\r\n                trigger: \"blur\"\r\n              }],\r\n            },\r\n            {\r\n              label: \"规则值\",\r\n              prop: \"scopeValue\",\r\n              span: 24,\r\n              minRows: 5,\r\n              type: \"textarea\",\r\n              display: true,\r\n              hide: true,\r\n            },\r\n            {\r\n              label: \"备注\",\r\n              prop: \"remark\",\r\n              span: 24,\r\n              hide: true,\r\n            },\r\n          ]\r\n        },\r\n        dataScope: []\r\n      };\r\n    },\r\n    watch: {\r\n      'formScope.scopeType'() {\r\n        this.initScope();\r\n      }\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"permission\"]),\r\n      permissionList() {\r\n        return {\r\n          addBtn: this.vaildData(this.permission.menu_add, false),\r\n          viewBtn: this.vaildData(this.permission.menu_view, false),\r\n          delBtn: this.vaildData(this.permission.menu_delete, false),\r\n          editBtn: this.vaildData(this.permission.menu_edit, false)\r\n        };\r\n      },\r\n      ids() {\r\n        let ids = [];\r\n        this.selectionList.forEach(ele => {\r\n          ids.push(ele.id);\r\n        });\r\n        return ids.join(\",\");\r\n      },\r\n      scopeIds() {\r\n        let ids = [];\r\n        this.selectionListScope.forEach(ele => {\r\n          ids.push(ele.id);\r\n        });\r\n        return ids.join(\",\");\r\n      }\r\n    },\r\n    methods: {\r\n      initScope() {\r\n        const scopeType = func.toInt(this.formScope.scopeType);\r\n        const watchMode = this.watchMode;\r\n        let column = \"-\", name = \"暂无\";\r\n        if (scopeType === 1) {\r\n          column = \"-\";\r\n          name = \"全部可见\";\r\n        } else if (scopeType === 2) {\r\n          column = \"create_user\";\r\n          name = \"本人可见\";\r\n        } else if (scopeType === 3) {\r\n          column = \"create_dept\";\r\n          name = \"所在机构可见\";\r\n        } else if (scopeType === 4) {\r\n          column = \"create_dept\";\r\n          name = \"所在机构可见及子级可见\";\r\n        } else if (scopeType === 5) {\r\n          column = \"\";\r\n          name = \"自定义\";\r\n        }\r\n        this.$refs.crudScope.option.column.filter(item => {\r\n          if (watchMode) {\r\n            if (item.prop === \"scopeName\") {\r\n              this.formScope.scopeName = `${this.scopeMenuName} [${name}]`;\r\n            }\r\n            if (item.prop === \"resourceCode\") {\r\n              this.formScope.resourceCode = this.scopeMenuCode;\r\n            }\r\n            if (item.prop === \"scopeColumn\") {\r\n              this.formScope.scopeColumn = column;\r\n            }\r\n          }\r\n          if (item.prop === \"scopeValue\") {\r\n            item.display = scopeType === 5;\r\n          }\r\n        });\r\n      },\r\n      // 菜单管理模块\r\n      rowSave(row, done, loading) {\r\n        add(row).then(() => {\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n          done();\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowUpdate(row, index, done, loading) {\r\n        update(row).then(() => {\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n          done();\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowDel(row) {\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(row.id);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          });\r\n      },\r\n      searchReset() {\r\n        this.query = {};\r\n        this.parentId = 0;\r\n        this.onLoad(this.page);\r\n      },\r\n      searchChange(params, done) {\r\n        this.query = params;\r\n        this.parentId = '';\r\n        this.page.currentPage = 1;\r\n        this.onLoad(this.page, params);\r\n        done();\r\n      },\r\n      selectionChange(list) {\r\n        this.selectionList = list;\r\n      },\r\n      selectionClear() {\r\n        this.selectionList = [];\r\n        this.$refs.crud.toggleSelection();\r\n      },\r\n      handleDelete() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(this.ids);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crud.toggleSelection();\r\n          });\r\n      },\r\n      beforeOpen(done, type) {\r\n        if ([\"edit\", \"view\"].includes(type)) {\r\n          getMenu(this.form.id).then(res => {\r\n            this.form = res.data.data;\r\n          });\r\n        }\r\n        done();\r\n      },\r\n      currentChange(currentPage) {\r\n        this.page.currentPage = currentPage;\r\n      },\r\n      sizeChange(pageSize) {\r\n        this.page.pageSize = pageSize;\r\n      },\r\n      refreshChange() {\r\n        this.onLoad(this.page, this.query);\r\n      },\r\n      onLoad(page, params = {}) {\r\n        this.loading = true;\r\n        getLazyMenuList(this.parentId, Object.assign(params, this.query)).then(res => {\r\n          this.data = res.data.data;\r\n          this.loading = false;\r\n          this.selectionClear();\r\n        });\r\n      },\r\n      treeLoad(tree, treeNode, resolve) {\r\n        const parentId = tree.id;\r\n        getLazyMenuList(parentId).then(res => {\r\n          resolve(res.data.data);\r\n        });\r\n      },\r\n      // 数据权限模块\r\n      handleDataScope(row) {\r\n        this.drawerVisible = true;\r\n        this.scopeMenuId = row.id;\r\n        this.scopeMenuCode = row.code;\r\n        this.scopeMenuName = row.name;\r\n        this.onLoadScope(this.pageScope)\r\n      },\r\n      handleDrawerClose(hide) {\r\n        hide();\r\n      },\r\n      rowSaveScope(row, done, loading) {\r\n        row = {\r\n          ...row,\r\n          menuId: this.scopeMenuId,\r\n        };\r\n        addDataScope(row).then(() => {\r\n          this.onLoadScope(this.pageScope);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n          done();\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowUpdateScope(row, index, done, loading) {\r\n        row = {\r\n          ...row,\r\n          menuId: this.scopeMenuId,\r\n        };\r\n        updateDataScope(row).then(() => {\r\n          this.onLoadScope(this.pageScope);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n          done();\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowDelScope(row) {\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return removeDataScope(row.id);\r\n          })\r\n          .then(() => {\r\n            this.onLoadScope(this.pageScope);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          });\r\n      },\r\n      handleDeleteScope() {\r\n        if (this.selectionListScope.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return removeDataScope(this.scopeIds);\r\n          })\r\n          .then(() => {\r\n            this.onLoadScope(this.pageScope);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crudScope.toggleSelection();\r\n          });\r\n      },\r\n      beforeOpenScope(done, type) {\r\n        if ([\"add\"].includes(type)) {\r\n          this.watchMode = true;\r\n          this.initScope();\r\n        }\r\n        if ([\"edit\", \"view\"].includes(type)) {\r\n          this.watchMode = false;\r\n          getMenuDataScope(this.formScope.id).then(res => {\r\n            this.formScope = res.data.data;\r\n          });\r\n        }\r\n        done();\r\n      },\r\n      searchResetScope() {\r\n        this.onLoadScope(this.pageScope);\r\n      },\r\n      searchChangeScope(params, done) {\r\n        this.onLoadScope(this.pageScope, params);\r\n        done();\r\n      },\r\n      selectionChangeScope(list) {\r\n        this.selectionListScope = list;\r\n      },\r\n      currentChangeScope(currentPage) {\r\n        this.pageScope.currentPage = currentPage;\r\n      },\r\n      sizeChangeScope(pageSize) {\r\n        this.pageScope.pageSize = pageSize;\r\n      },\r\n      onLoadScope(page, params = {}) {\r\n        this.scopeLoading = true;\r\n        const values = {\r\n          ...params,\r\n          menuId: this.scopeMenuId,\r\n        }\r\n        getListDataScope(page.currentPage, page.pageSize, Object.assign(values, this.query)).then(res => {\r\n          const data = res.data.data;\r\n          this.pageScope.total = data.total;\r\n          this.dataScope = data.records;\r\n          this.selectionListScope = [];\r\n          this.scopeLoading = false;\r\n        });\r\n      },\r\n    }\r\n  };\r\n</script>\r\n\r\n"],"mappings":";;;;;;;;;AA2EA,SACAA,GAAA,EACAC,MAAA,EACAC,MAAA,EACAC,eAAA,EACAC,OAAA,QACA;AACA,SACAC,YAAA,EACAC,eAAA,EACAC,eAAA,EACAC,gBAAA,EACAC,gBAAA,QACA;AACA,SAAAC,UAAA;AACA,OAAAC,QAAA;AACA,OAAAC,IAAA;AAEA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,IAAA;MACAC,aAAA;MACAC,KAAA;MACAC,OAAA;MACAC,QAAA;MACAC,IAAA;QACAC,QAAA;QACAC,WAAA;QACAC,KAAA;MACA;MACAC,aAAA;MACAC,SAAA;MACAC,WAAA;MACAC,aAAA;MACAC,aAAA;MACAC,YAAA;MACAC,IAAA;MACAC,SAAA;MACAC,MAAA;QACAC,IAAA;QACAC,GAAA;QACAC,UAAA;QACAC,UAAA;QACAC,cAAA;QACAC,WAAA;QACAC,IAAA;QACAC,MAAA;QACAC,KAAA;QACAC,SAAA;QACAC,OAAA;QACAC,OAAA;QACAC,MAAA;QACAC,MAAA;QACAC,SAAA;QACAC,gBAAA;QACAC,MAAA,GACA;UACAC,KAAA;UACAC,IAAA;UACAC,MAAA;UACAC,KAAA,GACA;YACAC,QAAA;YACAC,OAAA;YACAC,OAAA;UACA;QAEA,GACA;UACAN,KAAA;UACAC,IAAA;UACAE,KAAA,GACA;YACAC,QAAA;YACAC,OAAA;YACAC,OAAA;UACA;QAEA,GACA;UACAN,KAAA;UACAC,IAAA;UACAM,IAAA;UACAC,MAAA;UACAC,IAAA;UACAC,KAAA;YACAV,KAAA;UACA;UACAG,KAAA,GACA;YACAC,QAAA;YACAC,OAAA;YACAC,OAAA;UACA;QAEA,GACA;UACAN,KAAA;UACAC,IAAA;UACAM,IAAA;UACAI,IAAA;UACAC,KAAA;UACAlD,QAAA,EAAAA,QAAA;UACAyC,KAAA,GACA;YACAC,QAAA;YACAC,OAAA;YACAC,OAAA;UACA;QAEA,GACA;UACAN,KAAA;UACAC,IAAA;UACAC,MAAA;UACAC,KAAA,GACA;YACAC,QAAA;YACAC,OAAA;YACAC,OAAA;UACA;QAEA,GACA;UACAN,KAAA;UACAC,IAAA;UACAM,IAAA;UACAM,OAAA,GACA;YACAb,KAAA;YACAc,KAAA;UACA,GACA;YACAd,KAAA;YACAc,KAAA;UACA,EACA;UACAL,IAAA;UACAN,KAAA,GACA;YACAC,QAAA;YACAC,OAAA;YACAC,OAAA;UACA;QAEA,GACA;UACAN,KAAA;UACAC,IAAA;UACAE,KAAA,GACA;YACAC,QAAA;YACAC,OAAA;YACAC,OAAA;UACA;QAEA,GACA;UACAN,KAAA;UACAC,IAAA;UACAM,IAAA;UACAM,OAAA,GACA;YACAb,KAAA;YACAc,KAAA;UACA,GACA;YACAd,KAAA;YACAc,KAAA;UACA,GACA;YACAd,KAAA;YACAc,KAAA;UACA,EACA;UACAL,IAAA;UACAN,KAAA,GACA;YACAC,QAAA;YACAC,OAAA;YACAC,OAAA;UACA;QAEA,GACA;UACAN,KAAA;UACAC,IAAA;UACAM,IAAA;UACAK,KAAA;UACAT,KAAA,GACA;YACAC,QAAA;YACAC,OAAA;YACAC,OAAA;UACA;QAEA,GACA;UACAN,KAAA;UACAC,IAAA;UACAM,IAAA;UACAM,OAAA,GACA;YACAb,KAAA;YACAc,KAAA;UACA,GACA;YACAd,KAAA;YACAc,KAAA;UACA,EACA;UACAL,IAAA;QACA,GACA;UACAT,KAAA;UACAC,IAAA;UACAM,IAAA;UACAQ,IAAA;UACAC,OAAA;UACAP,IAAA;QACA;MAEA;MACA7C,IAAA;MACAqD,SAAA;MACAC,kBAAA;MACAC,SAAA;QACAhD,QAAA;QACAC,WAAA;QACAC,KAAA;MACA;MACA+C,WAAA;QACApC,GAAA;QACAE,UAAA;QACAC,cAAA;QACAG,MAAA;QACAC,KAAA;QACAE,OAAA;QACAD,SAAA;QACAK,SAAA;QACAT,WAAA;QACAU,gBAAA;QACAC,MAAA,GACA;UACAC,KAAA;UACAC,IAAA;UACAC,MAAA;UACAY,KAAA;UACAX,KAAA;YACAC,QAAA;YACAC,OAAA;YACAC,OAAA;UACA;QACA,GACA;UACAN,KAAA;UACAC,IAAA;UACAC,MAAA;UACAU,KAAA;UACAT,KAAA;YACAC,QAAA;YACAC,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"}]}