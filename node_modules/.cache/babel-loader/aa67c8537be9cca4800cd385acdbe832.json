{"remainingRequest":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\babel-loader\\lib\\index.js!D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workCode\\xiaoE\\大圣系统源码\\admin\\src\\views\\authority\\role.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\src\\views\\authority\\role.vue","mtime":1675701958000},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\babel.config.js","mtime":1666766764000},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678778409044},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1678778390429},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678778409044},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1678778410194}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _defineProperty from \"D:/workCode/xiaoE/\\u5927\\u5723\\u7CFB\\u7EDF\\u6E90\\u7801/admin/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { add, getList, getRole, getRoleTree, grant, grantTree, remove, update } from \"@/api/system/role\";\nimport { mapGetters } from \"vuex\";\nimport website from '@/config/website';\nexport default {\n  data: function data() {\n    return {\n      form: {},\n      box: false,\n      props: {\n        label: \"title\",\n        value: \"key\"\n      },\n      menuGrantList: [],\n      dataScopeGrantList: [],\n      menuTreeObj: [],\n      dataScopeTreeObj: [],\n      selectionList: [],\n      query: {},\n      loading: true,\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      data: []\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"userInfo\", \"permission\"])), {}, {\n    permissionList: function permissionList() {\n      return {\n        addBtn: this.vaildData(this.permission.role_add, false),\n        viewBtn: this.vaildData(this.permission.role_view, false),\n        delBtn: this.vaildData(this.permission.role_delete, false),\n        editBtn: this.vaildData(this.permission.role_edit, false)\n      };\n    },\n    option: function option() {\n      return {\n        searchShow: true,\n        searchMenuSpan: 6,\n        tip: false,\n        tree: true,\n        border: true,\n        index: true,\n        editBtn: this.users().authority.includes('administrator') ? true : false,\n        delBtn: this.users().authority.includes('administrator') ? true : false,\n        addBtn: this.users().authority.includes('administrator') ? true : false,\n        selection: true,\n        viewBtn: true,\n        column: [{\n          label: \"角色名称\",\n          prop: \"roleName\",\n          search: true,\n          span: 24,\n          rules: [{\n            required: true,\n            message: \"请输入角色名称\",\n            trigger: \"blur\"\n          }]\n        },\n        // {\n        //   label: \"所属资方\",\n        //   prop: \"tenantId\",\n        //   type: \"tree\",\n        //   dicUrl: \"/api/blade-system/tenant/select\",\n        //   addDisplay: false,\n        //   editDisplay: false,\n        //   viewDisplay: website.tenantMode,\n        //   span: 24,\n        //   props: {\n        //     label: \"tenantName\",\n        //     value: \"tenantId\"\n        //   },\n        //   hide: !website.tenantMode,\n        //   search: website.tenantMode,\n        //   rules: [{\n        //     required: true,\n        //     message: \"请输入所属资方\",\n        //     trigger: \"click\"\n        //   }]\n        // },\n        {\n          label: \"角色别名\",\n          prop: \"roleAlias\",\n          search: true,\n          span: 24,\n          rules: [{\n            required: true,\n            message: \"请输入角色别名\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"上级角色\",\n          prop: \"parentId\",\n          dicData: [],\n          type: \"tree\",\n          hide: true,\n          span: 24,\n          props: {\n            label: \"title\"\n          },\n          rules: [{\n            required: false,\n            message: \"请选择上级角色\",\n            trigger: \"click\"\n          }]\n        }, {\n          label: \"角色排序\",\n          prop: \"sort\",\n          type: \"number\",\n          span: 24,\n          rules: [{\n            required: true,\n            message: \"请输入角色排序\",\n            trigger: \"blur\"\n          }]\n        }]\n      };\n    },\n    ids: function ids() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    },\n    idsArray: function idsArray() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids;\n    }\n  }),\n  methods: {\n    users: function users() {\n      return this.userInfo;\n    },\n    submit: function submit() {\n      var _this = this;\n      var menuList = this.$refs.treeMenu.getCheckedKeys();\n      var dataScopeList = this.$refs.treeDataScope.getCheckedKeys();\n      grant(this.idsArray, menuList, dataScopeList).then(function () {\n        _this.box = false;\n        _this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n        _this.onLoad(_this.page);\n      });\n\n      /*const menuLIst = this.$refs.tree.getCheckedKeys();\n      grant(this.idsArray, menuLIst).then(() => {\n        this.box = false;\n        this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n        this.onLoad(this.page);\n      });*/\n    },\n    rowSave: function rowSave(row, done, loading) {\n      var _this2 = this;\n      add(row).then(function () {\n        done();\n        _this2.onLoad(_this2.page);\n        _this2.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowUpdate: function rowUpdate(row, index, done, loading) {\n      var _this3 = this;\n      update(row).then(function () {\n        done();\n        _this3.onLoad(_this3.page);\n        _this3.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowDel: function rowDel(row) {\n      var _this4 = this;\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(row.id);\n      }).then(function () {\n        _this4.onLoad(_this4.page);\n        _this4.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      });\n    },\n    searchReset: function searchReset() {\n      this.query = {};\n      this.onLoad(this.page);\n    },\n    searchChange: function searchChange(params, done) {\n      this.query = params;\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange: function selectionChange(list) {\n      this.selectionList = list;\n    },\n    handleRole: function handleRole() {\n      var _this5 = this;\n      if (this.selectionList.length !== 1) {\n        this.$message.warning(\"只能选择一条数据\");\n        return;\n      }\n      this.menuTreeObj = [];\n      this.dataScopeTreeObj = [];\n      grantTree().then(function (res) {\n        _this5.menuGrantList = res.data.data.menu;\n        _this5.dataScopeGrantList = res.data.data.dataScope;\n        getRole(_this5.ids).then(function (res) {\n          _this5.menuTreeObj = res.data.data.menu;\n          _this5.dataScopeTreeObj = res.data.data.dataScope;\n          _this5.box = true;\n        });\n      });\n\n      /*this.defaultObj = [];\n      grantTree()\n        .then(res => {\n          this.list = res.data.data;\n          return getRole(this.ids);\n        })\n        .then(res => {\n          this.defaultObj = res.data.data;\n          this.box = true;\n        });*/\n    },\n    handleDelete: function handleDelete() {\n      var _this6 = this;\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(_this6.ids);\n      }).then(function () {\n        _this6.onLoad(_this6.page);\n        _this6.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n        _this6.$refs.crud.toggleSelection();\n      });\n    },\n    currentChange: function currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange: function sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    onLoad: function onLoad(page) {\n      var _this7 = this;\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.loading = true;\n      getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(function (res) {\n        _this7.data = res.data.data;\n        _this7.loading = false;\n        getRoleTree().then(function (res) {\n          var column = _this7.findObject(_this7.option.column, \"parentId\");\n          column.dicData = res.data.data;\n        });\n      });\n    }\n  }\n};",{"version":3,"names":["add","getList","getRole","getRoleTree","grant","grantTree","remove","update","mapGetters","website","data","form","box","props","label","value","menuGrantList","dataScopeGrantList","menuTreeObj","dataScopeTreeObj","selectionList","query","loading","page","pageSize","currentPage","total","computed","_objectSpread","permissionList","addBtn","vaildData","permission","role_add","viewBtn","role_view","delBtn","role_delete","editBtn","role_edit","option","searchShow","searchMenuSpan","tip","tree","border","index","users","authority","includes","selection","column","prop","search","span","rules","required","message","trigger","dicData","type","hide","ids","forEach","ele","push","id","join","idsArray","methods","userInfo","submit","_this","menuList","$refs","treeMenu","getCheckedKeys","dataScopeList","treeDataScope","then","$message","onLoad","rowSave","row","done","_this2","error","window","console","log","rowUpdate","_this3","rowDel","_this4","$confirm","confirmButtonText","cancelButtonText","searchReset","searchChange","params","selectionChange","list","handleRole","_this5","length","warning","res","menu","dataScope","handleDelete","_this6","crud","toggleSelection","currentChange","sizeChange","_this7","arguments","undefined","Object","assign","findObject"],"sources":["src/views/authority/role.vue"],"sourcesContent":["<template>\n  <basic-container>\n    <avue-crud :option=\"option\"\n               :table-loading=\"loading\"\n               :data=\"data\"\n               ref=\"crud\"\n               v-model=\"form\"\n               :permission=\"permissionList\"\n               @row-del=\"rowDel\"\n               @row-update=\"rowUpdate\"\n               @row-save=\"rowSave\"\n               @search-change=\"searchChange\"\n               @search-reset=\"searchReset\"\n               @selection-change=\"selectionChange\"\n               @current-change=\"currentChange\"\n               @size-change=\"sizeChange\"\n               @on-load=\"onLoad\">\n      <template slot=\"menuLeft\">\n        <el-button type=\"danger\"\n                   size=\"small\"\n                   icon=\"el-icon-delete\"\n                   v-if=\"userInfo.authority.includes('administrator') && permission.role_delete\"\n                   plain\n                   @click=\"handleDelete\">删 除\n        </el-button>\n        <el-button size=\"small\"\n                   v-if=\"userInfo.authority.includes('administrator')\"\n                   icon=\"el-icon-delete\"\n                   @click=\"handleRole\"\n                   plain>权限设置\n        </el-button>\n      </template>\n    </avue-crud>\n    <el-dialog title=\"角色配置\"\n               :visible.sync=\"box\"\n               width=\"345px\">\n      <el-tabs type=\"border-card\">\n        <el-tab-pane label=\"菜单权限\">\n          <el-tree :data=\"menuGrantList\"\n                   show-checkbox\n                   node-key=\"id\"\n                   ref=\"treeMenu\"\n                   :default-checked-keys=\"menuTreeObj\"\n                   :props=\"props\">\n          </el-tree>\n        </el-tab-pane>\n        <el-tab-pane label=\"数据权限\">\n          <el-tree :data=\"dataScopeGrantList\"\n                   show-checkbox\n                   node-key=\"id\"\n                   ref=\"treeDataScope\"\n                   :default-checked-keys=\"dataScopeTreeObj\"\n                   :props=\"props\">\n          </el-tree>\n        </el-tab-pane>\n      </el-tabs>\n      <span slot=\"footer\"\n            class=\"dialog-footer\">\n        <el-button @click=\"box = false\">取 消</el-button>\n        <el-button type=\"primary\"\n                   @click=\"submit\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </basic-container>\n</template>\n\n<script>\n  import {add, getList, getRole, getRoleTree, grant, grantTree, remove, update} from \"@/api/system/role\";\n  import {mapGetters} from \"vuex\";\n  import website from '@/config/website';\n\n  export default {\n    data() {\n      return {\n        form: {},\n        box: false,\n        props: {\n          label: \"title\",\n          value: \"key\"\n        },\n        menuGrantList: [],\n        dataScopeGrantList: [],\n        menuTreeObj: [],\n        dataScopeTreeObj: [],\n        selectionList: [],\n        query: {},\n        loading: true,\n        page: {\n          pageSize: 10,\n          currentPage: 1,\n          total: 0\n        },\n        data: []\n      };\n    },\n    computed: {\n      ...mapGetters([\"userInfo\", \"permission\"]),\n      permissionList() {\n        return {\n          addBtn: this.vaildData(this.permission.role_add, false),\n          viewBtn: this.vaildData(this.permission.role_view, false),\n          delBtn: this.vaildData(this.permission.role_delete, false),\n          editBtn: this.vaildData(this.permission.role_edit, false)\n        };\n      },\n      option(){\n        return {\n          searchShow: true,\n          searchMenuSpan: 6,\n          tip: false,\n          tree: true,\n          border: true,\n          index: true,\n          editBtn:this.users().authority.includes('administrator')?true:false,\n          delBtn:this.users().authority.includes('administrator')?true:false,\n          addBtn:this.users().authority.includes('administrator')?true:false,\n          selection: true,\n          viewBtn: true,\n          column: [\n            {\n              label: \"角色名称\",\n              prop: \"roleName\",\n              search: true,\n              span: 24,\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入角色名称\",\n                  trigger: \"blur\"\n                }\n              ]\n            },\n            // {\n            //   label: \"所属资方\",\n            //   prop: \"tenantId\",\n            //   type: \"tree\",\n            //   dicUrl: \"/api/blade-system/tenant/select\",\n            //   addDisplay: false,\n            //   editDisplay: false,\n            //   viewDisplay: website.tenantMode,\n            //   span: 24,\n            //   props: {\n            //     label: \"tenantName\",\n            //     value: \"tenantId\"\n            //   },\n            //   hide: !website.tenantMode,\n            //   search: website.tenantMode,\n            //   rules: [{\n            //     required: true,\n            //     message: \"请输入所属资方\",\n            //     trigger: \"click\"\n            //   }]\n            // },\n            {\n              label: \"角色别名\",\n              prop: \"roleAlias\",\n              search: true,\n              span: 24,\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入角色别名\",\n                  trigger: \"blur\"\n                }\n              ]\n            },\n            {\n              label: \"上级角色\",\n              prop: \"parentId\",\n              dicData: [],\n              type: \"tree\",\n              hide: true,\n              span: 24,\n              props: {\n                label: \"title\"\n              },\n              rules: [\n                {\n                  required: false,\n                  message: \"请选择上级角色\",\n                  trigger: \"click\"\n                }\n              ]\n            },\n            {\n              label: \"角色排序\",\n              prop: \"sort\",\n              type: \"number\",\n              span: 24,\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入角色排序\",\n                  trigger: \"blur\"\n                }\n              ]\n            }\n          ]\n        }\n      },\n      ids() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids.join(\",\");\n      },\n      idsArray() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids;\n      }\n    },\n    methods: {\n      users(){\n        return this.userInfo\n      },\n      submit() {\n        const menuList = this.$refs.treeMenu.getCheckedKeys();\n        const dataScopeList = this.$refs.treeDataScope.getCheckedKeys();\n        grant(this.idsArray, menuList, dataScopeList).then(() => {\n          this.box = false;\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          this.onLoad(this.page);\n        });\n\n        /*const menuLIst = this.$refs.tree.getCheckedKeys();\n        grant(this.idsArray, menuLIst).then(() => {\n          this.box = false;\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          this.onLoad(this.page);\n        });*/\n      },\n      rowSave(row, done, loading) {\n        add(row).then(() => {\n          done();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowUpdate(row, index, done, loading) {\n        update(row).then(() => {\n          done();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowDel(row) {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(row.id);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n\n      searchReset() {\n        this.query = {};\n        this.onLoad(this.page);\n      },\n      searchChange(params, done) {\n        this.query = params;\n        this.page.currentPage = 1;\n        this.onLoad(this.page, params);\n        done();\n      },\n      selectionChange(list) {\n        this.selectionList = list;\n      },\n      handleRole() {\n        if (this.selectionList.length !== 1) {\n          this.$message.warning(\"只能选择一条数据\");\n          return;\n        }\n        this.menuTreeObj = [];\n        this.dataScopeTreeObj = [];\n        grantTree()\n          .then(res => {\n            this.menuGrantList = res.data.data.menu;\n            this.dataScopeGrantList = res.data.data.dataScope;\n            getRole(this.ids).then(res => {\n              this.menuTreeObj = res.data.data.menu;\n              this.dataScopeTreeObj = res.data.data.dataScope;\n              this.box = true;\n            });\n          });\n\n\n        /*this.defaultObj = [];\n        grantTree()\n          .then(res => {\n            this.list = res.data.data;\n            return getRole(this.ids);\n          })\n          .then(res => {\n            this.defaultObj = res.data.data;\n            this.box = true;\n          });*/\n      },\n      handleDelete() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(this.ids);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      currentChange(currentPage) {\n        this.page.currentPage = currentPage;\n      },\n      sizeChange(pageSize) {\n        this.page.pageSize = pageSize;\n      },\n      onLoad(page, params = {}) {\n        this.loading = true;\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n          this.data = res.data.data;\n          this.loading = false;\n          getRoleTree().then(res => {\n            const column = this.findObject(this.option.column, \"parentId\");\n            column.dicData = res.data.data;\n          });\n        });\n      }\n    }\n  };\n</script>\n\n<style>\n</style>\n"],"mappings":"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"}]}