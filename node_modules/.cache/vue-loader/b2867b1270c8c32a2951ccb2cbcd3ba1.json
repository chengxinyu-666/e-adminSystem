{"remainingRequest":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workCode\\xiaoE\\大圣系统源码\\admin\\src\\views\\client\\clientcoupon.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\src\\views\\client\\clientcoupon.vue","mtime":1676968324000},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678778409044},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1678778390429},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678778409044},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1678778410194}],"contextDependencies":[],"result":["\n  import {getList, getDetail, add, update, remove} from \"@/api/client/clientcoupon\";\n  import {mapGetters} from \"vuex\";\n\n  export default {\n    data() {\n      return {\n        form: {},\n        query: {},\n        loading: true,\n        page: {\n          pageSize: 10,\n          currentPage: 1,\n          total: 0\n        },\n        selectionList: [],\n        option: {\n          height: 'auto',\n          calcHeight: 210,\n          searchShow: true,\n          searchMenuSpan: 6,\n          tip: false,\n          border: true,\n          index: true,\n          viewBtn: true,\n          selection: true,\n          column: [\n            {\n              label: \"id\",\n              prop: \"id\",\n              rules: [{\n                required: true,\n                message: \"请输入id\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"用户\",\n              prop: \"clientId\",\n              rules: [{\n                required: true,\n                message: \"请输入用户\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"优惠券id\",\n              prop: \"couponId\",\n              rules: [{\n                required: true,\n                message: \"请输入优惠券id\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"优惠券名称\",\n              prop: \"name\",\n              rules: [{\n                required: true,\n                message: \"请输入优惠券名称\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"优惠券类别\",\n              prop: \"type\",\n              rules: [{\n                required: true,\n                message: \"请输入优惠券类别\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"优惠券面额\",\n              prop: \"money\",\n              rules: [{\n                required: true,\n                message: \"请输入优惠券面额\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"优惠券说明\",\n              prop: \"content\",\n              rules: [{\n                required: true,\n                message: \"请输入优惠券说明\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"金额限制 0无限制\",\n              prop: \"moneyLimit\",\n              rules: [{\n                required: true,\n                message: \"请输入金额限制 0无限制\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"生效条件 0无限制 1未满多少天付款不可使用 2提交多少付款可以使用\",\n              prop: \"typeLimit\",\n              rules: [{\n                required: true,\n                message: \"请输入生效条件 0无限制 1未满多少天付款不可使用 2提交多少付款可以使用\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"限制日期\",\n              prop: \"typeLimitDate\",\n              rules: [{\n                required: true,\n                message: \"请输入限制日期\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"开始时间\",\n              prop: \"startDate\",\n              rules: [{\n                required: true,\n                message: \"请输入开始时间\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"结束时间\",\n              prop: \"endDate\",\n              rules: [{\n                required: true,\n                message: \"请输入结束时间\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"适用范围 0全场通用 1分类限制 2商品限制\",\n              prop: \"rangeLimit\",\n              rules: [{\n                required: true,\n                message: \"请输入适用范围 0全场通用 1分类限制 2商品限制\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"范围ids\",\n              prop: \"rangeIds\",\n              rules: [{\n                required: true,\n                message: \"请输入范围ids\",\n                trigger: \"blur\"\n              }]\n            },\n          ]\n        },\n        data: []\n      };\n    },\n    computed: {\n      ...mapGetters([\"permission\"]),\n      permissionList() {\n        return {\n          addBtn: this.vaildData(this.permission.clientcoupon_add, false),\n          viewBtn: this.vaildData(this.permission.clientcoupon_view, false),\n          delBtn: this.vaildData(this.permission.clientcoupon_delete, false),\n          editBtn: this.vaildData(this.permission.clientcoupon_edit, false)\n        };\n      },\n      ids() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids.join(\",\");\n      }\n    },\n    methods: {\n      rowSave(row, done, loading) {\n        add(row).then(() => {\n          done();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowUpdate(row, index, done, loading) {\n        update(row).then(() => {\n          done();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowDel(row) {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(row.id);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n      handleDelete() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(this.ids);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      beforeOpen(done, type) {\n        if ([\"edit\", \"view\"].includes(type)) {\n          getDetail(this.form.id).then(res => {\n            this.form = res.data.data;\n          });\n        }\n        done();\n      },\n      searchReset() {\n        this.query = {};\n        this.onLoad(this.page);\n      },\n      searchChange(params, done) {\n        this.query = params;\n        this.page.currentPage = 1;\n        this.onLoad(this.page, params);\n        done();\n      },\n      selectionChange(list) {\n        this.selectionList = list;\n      },\n      selectionClear() {\n        this.selectionList = [];\n        this.$refs.crud.toggleSelection();\n      },\n      currentChange(currentPage){\n        this.page.currentPage = currentPage;\n      },\n      sizeChange(pageSize){\n        this.page.pageSize = pageSize;\n      },\n      onLoad(page, params = {}) {\n        this.loading = true;\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n          const data = res.data.data;\n          this.page.total = data.total;\n          this.data = data.records;\n          this.loading = false;\n          this.selectionClear();\n        });\n      }\n    }\n  };\n",{"version":3,"sources":["clientcoupon.vue"],"names":[],"mappings":";AAifile":"clientcoupon.vue","sourceRoot":"src/views/client","sourcesContent":["<template>\n  <basic-container>\n    <avue-crud :option=\"option\"\n               :table-loading=\"loading\"\n               :data=\"data\"\n               :page=\"page\"\n               :permission=\"permissionList\"\n               :before-open=\"beforeOpen\"\n               v-model=\"form\"\n               ref=\"crud\"\n               @row-update=\"rowUpdate\"\n               @row-save=\"rowSave\"\n               @row-del=\"rowDel\"\n               @search-change=\"searchChange\"\n               @search-reset=\"searchReset\"\n               @selection-change=\"selectionChange\"\n               @current-change=\"currentChange\"\n               @size-change=\"sizeChange\"\n               @on-load=\"onLoad\">\n      <template slot=\"menuLeft\">\n        <el-button type=\"danger\"\n                   size=\"small\"\n                   icon=\"el-icon-delete\"\n                   plain\n                   v-if=\"permission.clientcoupon_delete\"\n                   @click=\"handleDelete\">删 除\n        </el-button>\n      </template>\n    </avue-crud>\n  </basic-container>\n</template>\n\n<script>\n  import {getList, getDetail, add, update, remove} from \"@/api/client/clientcoupon\";\n  import {mapGetters} from \"vuex\";\n\n  export default {\n    data() {\n      return {\n        form: {},\n        query: {},\n        loading: true,\n        page: {\n          pageSize: 10,\n          currentPage: 1,\n          total: 0\n        },\n        selectionList: [],\n        option: {\n          height: 'auto',\n          calcHeight: 210,\n          searchShow: true,\n          searchMenuSpan: 6,\n          tip: false,\n          border: true,\n          index: true,\n          viewBtn: true,\n          selection: true,\n          column: [\n            {\n              label: \"id\",\n              prop: \"id\",\n              rules: [{\n                required: true,\n                message: \"请输入id\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"用户\",\n              prop: \"clientId\",\n              rules: [{\n                required: true,\n                message: \"请输入用户\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"优惠券id\",\n              prop: \"couponId\",\n              rules: [{\n                required: true,\n                message: \"请输入优惠券id\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"优惠券名称\",\n              prop: \"name\",\n              rules: [{\n                required: true,\n                message: \"请输入优惠券名称\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"优惠券类别\",\n              prop: \"type\",\n              rules: [{\n                required: true,\n                message: \"请输入优惠券类别\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"优惠券面额\",\n              prop: \"money\",\n              rules: [{\n                required: true,\n                message: \"请输入优惠券面额\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"优惠券说明\",\n              prop: \"content\",\n              rules: [{\n                required: true,\n                message: \"请输入优惠券说明\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"金额限制 0无限制\",\n              prop: \"moneyLimit\",\n              rules: [{\n                required: true,\n                message: \"请输入金额限制 0无限制\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"生效条件 0无限制 1未满多少天付款不可使用 2提交多少付款可以使用\",\n              prop: \"typeLimit\",\n              rules: [{\n                required: true,\n                message: \"请输入生效条件 0无限制 1未满多少天付款不可使用 2提交多少付款可以使用\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"限制日期\",\n              prop: \"typeLimitDate\",\n              rules: [{\n                required: true,\n                message: \"请输入限制日期\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"开始时间\",\n              prop: \"startDate\",\n              rules: [{\n                required: true,\n                message: \"请输入开始时间\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"结束时间\",\n              prop: \"endDate\",\n              rules: [{\n                required: true,\n                message: \"请输入结束时间\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"适用范围 0全场通用 1分类限制 2商品限制\",\n              prop: \"rangeLimit\",\n              rules: [{\n                required: true,\n                message: \"请输入适用范围 0全场通用 1分类限制 2商品限制\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"范围ids\",\n              prop: \"rangeIds\",\n              rules: [{\n                required: true,\n                message: \"请输入范围ids\",\n                trigger: \"blur\"\n              }]\n            },\n          ]\n        },\n        data: []\n      };\n    },\n    computed: {\n      ...mapGetters([\"permission\"]),\n      permissionList() {\n        return {\n          addBtn: this.vaildData(this.permission.clientcoupon_add, false),\n          viewBtn: this.vaildData(this.permission.clientcoupon_view, false),\n          delBtn: this.vaildData(this.permission.clientcoupon_delete, false),\n          editBtn: this.vaildData(this.permission.clientcoupon_edit, false)\n        };\n      },\n      ids() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids.join(\",\");\n      }\n    },\n    methods: {\n      rowSave(row, done, loading) {\n        add(row).then(() => {\n          done();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowUpdate(row, index, done, loading) {\n        update(row).then(() => {\n          done();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowDel(row) {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(row.id);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n      handleDelete() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(this.ids);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      beforeOpen(done, type) {\n        if ([\"edit\", \"view\"].includes(type)) {\n          getDetail(this.form.id).then(res => {\n            this.form = res.data.data;\n          });\n        }\n        done();\n      },\n      searchReset() {\n        this.query = {};\n        this.onLoad(this.page);\n      },\n      searchChange(params, done) {\n        this.query = params;\n        this.page.currentPage = 1;\n        this.onLoad(this.page, params);\n        done();\n      },\n      selectionChange(list) {\n        this.selectionList = list;\n      },\n      selectionClear() {\n        this.selectionList = [];\n        this.$refs.crud.toggleSelection();\n      },\n      currentChange(currentPage){\n        this.page.currentPage = currentPage;\n      },\n      sizeChange(pageSize){\n        this.page.pageSize = pageSize;\n      },\n      onLoad(page, params = {}) {\n        this.loading = true;\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n          const data = res.data.data;\n          this.page.total = data.total;\n          this.data = data.records;\n          this.loading = false;\n          this.selectionClear();\n        });\n      }\n    }\n  };\n</script>\n\n<style>\n</style>\n"]}]}