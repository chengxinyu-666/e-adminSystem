{"remainingRequest":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workCode\\xiaoE\\大圣系统源码\\admin\\src\\views\\system\\user.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\src\\views\\system\\user.vue","mtime":1678856934787},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678778409044},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1678778390429},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678778409044},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1678778410194}],"contextDependencies":[],"result":["\n  import {\n    getList,\n    getUser,\n    remove,\n    update,\n    add,\n    grant,\n    resetPassword\n  } from \"@/api/system/user\";\n  import {getDeptTree} from \"@/api/system/dept\";\n  import {getRoleTree} from \"@/api/system/role\";\n  import {getPostList} from \"@/api/system/post\";\n  import {mapGetters} from \"vuex\";\n  import website from '@/config/website';\n  import {getToken} from '@/util/auth';\n\n  export default {\n    data() {\n      const validatePass = (rule, value, callback) => {\n        if (value === '') {\n          callback(new Error('请输入密码'));\n        } else {\n          callback();\n        }\n      };\n      const validatePass2 = (rule, value, callback) => {\n        if (value === '') {\n          callback(new Error('请再次输入密码'));\n        } else if (value !== this.form.password) {\n          callback(new Error('两次输入密码不一致!'));\n        } else {\n          callback();\n        }\n      };\n      return {\n        form: {},\n        search:{},\n        roleBox: false,\n        excelBox: false,\n        loading: true,\n        selectionList: [],\n        query: {},\n        page: {\n          pageSize: 10,\n          currentPage: 1,\n          total: 0\n        },\n        init: {\n          roleTree: [],\n          deptTree: [],\n        },\n        props: {\n          label: \"title\",\n          value: \"key\"\n        },\n        roleGrantList: [],\n        roleTreeObj: [],\n        option: {\n          height: 'auto',\n          calcHeight: 210,\n          searchShow: true,\n          searchMenuSpan: 6,\n          tip: false,\n          border: true,\n          index: true,\n          selection: true,\n          viewBtn: true,\n          column: [\n            {\n              label: \"登录账号\",\n              prop: \"account\",\n              search: true,\n              rules: [{\n                required: true,\n                message: \"请输入登录账号\",\n                trigger: \"blur\"\n              }],\n              span: website.tenantMode ? 12 : 24,\n            },\n            {\n              label: \"所属资方\",\n              prop: \"tenantId\",\n              type: \"tree\",\n              dicUrl: \"/api/blade-system/tenant/select\",\n              props: {\n                label: \"tenantName\",\n                value: \"tenantId\"\n              },\n              hide: !website.tenantMode,\n              addDisplay: website.tenantMode,\n              editDisplay: website.tenantMode,\n              viewDisplay: website.tenantMode,\n              search: true,\n              rules: [{\n                required: true,\n                message: \"请输入所属资方\",\n                trigger: \"click\"\n              }]\n            },\n            {\n              label: '密码',\n              prop: 'password',\n              hide: true,\n              editDisplay: false,\n              viewDisplay: false,\n              rules: [{required: true, validator: validatePass, trigger: 'blur'}]\n            },\n            {\n              label: '确认密码',\n              prop: 'password2',\n              hide: true,\n              editDisplay: false,\n              viewDisplay: false,\n              rules: [{required: true, validator: validatePass2, trigger: 'blur'}]\n            },\n            {\n              label: \"用户昵称\",\n              prop: \"name\",\n              rules: [{\n                required: true,\n                message: \"请输入用户昵称\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"用户姓名\",\n              prop: \"realName\",\n              search: true,\n              rules: [{\n                required: true,\n                message: \"请输入用户姓名\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"所属角色\",\n              prop: \"roleId\",\n              multiple: true,\n              type: \"tree\",\n              dicData: [],\n              props: {\n                label: \"title\"\n              },\n              slot: true,\n              checkStrictly: true,\n              rules: [{\n                required: true,\n                message: \"请选择所属角色\",\n                trigger: \"click\"\n              }]\n            },\n            {\n              label: \"所属部门\",\n              prop: \"deptId\",\n              type: \"tree\",\n              multiple: true,\n              dicData: [],\n              props: {\n                label: \"title\"\n              },\n              slot: true,\n              checkStrictly: true,\n              rules: [{\n                required: true,\n                message: \"请选择所属部门\",\n                trigger: \"click\"\n              }]\n            },\n            {\n              label: \"用户编号\",\n              prop: \"code\",\n              hide: true,\n            },\n            // {\n            //   label: \"所属岗位\",\n            //   prop: \"postId\",\n            //   type: \"tree\",\n            //   multiple: true,\n            //   dicData: [],\n            //   hide: true,\n            //   props: {\n            //     label: \"postName\",\n            //     value: \"id\"\n            //   },\n            //   rules: [{\n            //     required: true,\n            //     message: \"请选择所属岗位\",\n            //     trigger: \"click\"\n            //   }],\n            // },\n            {\n              label: \"手机号码\",\n              prop: \"phone\",\n              overHidden: true\n            },\n            {\n              label: \"电子邮箱\",\n              prop: \"email\",\n              hide: true,\n              overHidden: true\n            },\n            {\n              label: \"用户性别\",\n              prop: \"sex\",\n              type: \"select\",\n              dicData: [\n                {\n                  label: \"男\",\n                  value: 1\n                },\n                {\n                  label: \"女\",\n                  value: 2\n                },\n                {\n                  label: \"未知\",\n                  value: 3\n                }\n              ],\n              hide: true\n            },\n            {\n              label: \"用户生日\",\n              type: \"date\",\n              prop: \"birthday\",\n              format: \"yyyy-MM-dd hh:mm:ss\",\n              valueFormat: \"yyyy-MM-dd hh:mm:ss\",\n              hide: true\n            },\n            {\n              label: \"账号状态\",\n              prop: \"statusName\",\n              hide: true,\n              display: false\n            }\n          ]\n        },\n        data: [],\n        excelForm: {},\n        excelOption: {\n          submitBtn: false,\n          emptyBtn: false,\n          column: [\n            {\n              label: '模板上传',\n              prop: 'excelFile',\n              type: 'upload',\n              drag: true,\n              loadText: '模板上传中，请稍等',\n              span: 24,\n              propsHttp: {\n                res: 'data'\n              },\n              tip: '请上传 .xls,.xlsx 标准格式文件',\n              action: \"/api/blade-user/import-user\"\n            },\n            {\n              label: '模板下载',\n              prop: 'excelTemplate',\n              formslot: true,\n              span: 24,\n            }\n          ]\n        }\n      };\n    },\n    watch: {\n      'form.tenantId'() {\n        if (this.form.tenantId !== '') {\n          getDeptTree(this.form.tenantId).then(res => {\n            const column = this.findObject(this.option.column, \"deptId\");\n            column.dicData = res.data.data;\n            if (column!=-1){\n              this.$Log.primary(JSON.stringify(column))\n              column.dicData = res.data.data;\n            }\n          });\n          getRoleTree(this.form.tenantId).then(res => {\n            const column = this.findObject(this.option.column, \"roleId\");\n            column.dicData = res.data.data;\n            if (column!=-1){\n              this.$Log.primary(JSON.stringify(column))\n              column.dicData = res.data.data;\n            }\n          });\n          getPostList(this.form.tenantId).then(res => {\n            const column = this.findObject(this.option.column, \"postId\");\n            if (column!=-1){\n              this.$Log.primary(JSON.stringify(column))\n              column.dicData = res.data.data;\n            }\n          });\n        }\n      },\n    },\n    computed: {\n      ...mapGetters([\"userInfo\", \"permission\"]),\n      permissionList() {\n        return {\n          addBtn: this.vaildData(this.permission.user_add, false),\n          viewBtn: this.vaildData(this.permission.user_view, false),\n          delBtn: this.vaildData(this.permission.user_delete, false),\n          editBtn: this.vaildData(this.permission.user_edit, false)\n        };\n      },\n      ids() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids.join(\",\");\n      },\n    },\n    methods: {\n      submitRole() {\n        const roleList = this.$refs.treeRole.getCheckedKeys().join(\",\");\n        grant(this.ids, roleList).then(() => {\n          this.roleBox = false;\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          this.onLoad(this.page);\n        });\n      },\n      rowSave(row, done, loading) {\n        row.deptId = row.deptId.join(\",\");\n        row.roleId = row.roleId.join(\",\");\n        // row.postId = row.postId.join(\",\");\n        add(row).then(() => {\n          done();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowUpdate(row, index, done, loading) {\n        row.deptId = row.deptId.join(\",\");\n        row.roleId = row.roleId.join(\",\");\n        row.postId = row.postId.join(\",\");\n        update(row).then(() => {\n          done();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowDel(row) {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(row.id);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n      searchReset() {\n        this.query = {};\n        this.onLoad(this.page);\n      },\n      searchChange(params, done) {\n        this.query = params;\n        this.page.currentPage = 1;\n        this.onLoad(this.page, params);\n        done();\n      },\n      selectionChange(list) {\n        this.selectionList = list;\n      },\n      handleDelete() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(this.ids);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      handleReset() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择账号密码重置为123456?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return resetPassword(this.ids);\n          })\n          .then(() => {\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      handleGrant() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.roleTreeObj = [];\n        if (this.selectionList.length === 1) {\n          this.roleTreeObj = this.selectionList[0].roleId.split(\",\");\n        }\n        getRoleTree().then(res => {\n          this.roleGrantList = res.data.data;\n          this.roleBox = true;\n        });\n      },\n      handleImport() {\n        this.excelBox = true;\n      },\n      uploadAfter(res, done, loading, column) {\n        window.console.log(column);\n        done();\n        this.excelBox = false;\n        this.refreshChange();\n      },\n      handleExport() {\n        this.$confirm(\"是否导出用户数据?\", \"提示\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }).then(() => {\n          window.open(`/api/blade-user/export-user?blade-auth=${getToken()}&account=${this.search.account}&realName=${this.search.realName}`);\n        });\n      },\n      handleTemplate() {\n        window.open(`/api/blade-user/export-template?blade-auth=${getToken()}`);\n      },\n      beforeOpen(done, type) {\n        if ([\"edit\", \"view\"].includes(type)) {\n          getUser(this.form.id).then(res => {\n            this.form = res.data.data;\n            if(this.form.hasOwnProperty(\"deptId\")){\n              this.form.deptId = this.form.deptId.split(\",\");\n            }\n            if(this.form.hasOwnProperty(\"roleId\")){\n              this.form.roleId = this.form.roleId.split(\",\");\n            }\n            if(this.form.hasOwnProperty(\"postId\")){\n              this.form.postId = this.form.postId.split(\",\");\n            }\n          });\n        }\n        done();\n      },\n      currentChange(currentPage) {\n        this.page.currentPage = currentPage;\n      },\n      sizeChange(pageSize) {\n        this.page.pageSize = pageSize;\n      },\n      refreshChange() {\n        this.onLoad(this.page, this.query);\n      },\n      onLoad(page, params = {}) {\n        this.loading = true;\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n          const data = res.data.data;\n          this.page.total = data.total;\n          this.data = data.records;\n          this.loading = false;\n        });\n        getDeptTree(this.form.tenantId).then(res => {\n          const column = this.findObject(this.option.column, \"deptId\");\n          column.dicData = res.data.data;\n          if (column!=-1){\n            this.$Log.primary(JSON.stringify(column))\n            column.dicData = res.data.data;\n          }\n        });\n        getRoleTree(this.form.tenantId).then(res => {\n          const column = this.findObject(this.option.column, \"roleId\");\n          column.dicData = res.data.data;\n          if (column!=-1){\n            this.$Log.primary(JSON.stringify(column))\n            column.dicData = res.data.data;\n          }\n        });\n        getPostList(this.form.tenantId).then(res => {\n          const column = this.findObject(this.option.column, \"postId\");\n          if (column!=-1){\n            this.$Log.primary(JSON.stringify(column))\n            column.dicData = res.data.data;\n          }\n        });\n      }\n    }\n  };\n",{"version":3,"sources":["user.vue"],"names":[],"mappings":";AAufile":"user.vue","sourceRoot":"src/views/system","sourcesContent":["<template>\n  <basic-container>\n    <avue-crud :option=\"option\"\n               :table-loading=\"loading\"\n               :data=\"data\"\n               ref=\"crud\"\n               v-model=\"form\"\n               :permission=\"permissionList\"\n               :search.sync=\"search\"\n               @row-del=\"rowDel\"\n               @row-update=\"rowUpdate\"\n               @row-save=\"rowSave\"\n               :before-open=\"beforeOpen\"\n               :page=\"page\"\n               @search-change=\"searchChange\"\n               @search-reset=\"searchReset\"\n               @selection-change=\"selectionChange\"\n               @current-change=\"currentChange\"\n               @size-change=\"sizeChange\"\n               @refresh-change=\"refreshChange\"\n               @on-load=\"onLoad\">\n      <template slot=\"menuLeft\">\n        <el-button type=\"danger\"\n                   size=\"small\"\n                   icon=\"el-icon-delete\"\n                   plain\n                   v-if=\"permission.user_delete\"\n                   @click=\"handleDelete\">删 除\n        </el-button>\n        <el-button type=\"info\"\n                   size=\"small\"\n                   plain\n                   v-if=\"userInfo.authority.includes('administrator')\"\n                   icon=\"el-icon-user\"\n                   @click=\"handleGrant\">角色配置\n        </el-button>\n        <el-button type=\"primary\"\n                   size=\"small\"\n                   plain\n                   v-if=\"permission.user_reset\"\n                   icon=\"el-icon-refresh\"\n                   @click=\"handleReset\">密码重置\n        </el-button>\n        <el-button type=\"success\"\n                   size=\"small\"\n                   plain\n                   v-if=\"userInfo.authority.includes('administrator')\"\n                   icon=\"el-icon-upload2\"\n                   @click=\"handleImport\">导入\n        </el-button>\n        <el-button type=\"warning\"\n                   size=\"small\"\n                   plain\n                   v-if=\"userInfo.authority.includes('administrator')\"\n                   icon=\"el-icon-download\"\n                   @click=\"handleExport\">导出\n        </el-button>\n      </template>\n      <template slot-scope=\"{row}\"\n                slot=\"roleId\">\n        <el-tag>{{row.roleName}}</el-tag>\n      </template>\n      <template slot-scope=\"{row}\"\n                slot=\"deptId\">\n        <el-tag>{{row.deptName}}</el-tag>\n      </template>\n    </avue-crud>\n    <el-dialog title=\"用户角色配置\"\n               append-to-body\n               :visible.sync=\"roleBox\"\n               width=\"345px\">\n\n      <el-tree :data=\"roleGrantList\"\n               show-checkbox\n               default-expand-all\n               node-key=\"id\"\n               ref=\"treeRole\"\n               :default-checked-keys=\"roleTreeObj\"\n               :props=\"props\">\n      </el-tree>\n\n      <span slot=\"footer\" class=\"dialog-footer\">\n            <el-button @click=\"roleBox = false\">取 消</el-button>\n            <el-button type=\"primary\"\n                       @click=\"submitRole\">确 定</el-button>\n          </span>\n    </el-dialog>\n    <el-dialog title=\"用户数据导入\"\n               append-to-body\n               :visible.sync=\"excelBox\"\n               width=\"555px\">\n      <avue-form :option=\"excelOption\" v-model=\"excelForm\" :upload-after=\"uploadAfter\">\n        <template slot=\"excelTemplate\">\n          <el-button type=\"primary\" @click=\"handleTemplate()\">\n            点击下载<i class=\"el-icon-download el-icon--right\"></i>\n          </el-button>\n        </template>\n      </avue-form>\n    </el-dialog>\n  </basic-container>\n</template>\n\n<script>\n  import {\n    getList,\n    getUser,\n    remove,\n    update,\n    add,\n    grant,\n    resetPassword\n  } from \"@/api/system/user\";\n  import {getDeptTree} from \"@/api/system/dept\";\n  import {getRoleTree} from \"@/api/system/role\";\n  import {getPostList} from \"@/api/system/post\";\n  import {mapGetters} from \"vuex\";\n  import website from '@/config/website';\n  import {getToken} from '@/util/auth';\n\n  export default {\n    data() {\n      const validatePass = (rule, value, callback) => {\n        if (value === '') {\n          callback(new Error('请输入密码'));\n        } else {\n          callback();\n        }\n      };\n      const validatePass2 = (rule, value, callback) => {\n        if (value === '') {\n          callback(new Error('请再次输入密码'));\n        } else if (value !== this.form.password) {\n          callback(new Error('两次输入密码不一致!'));\n        } else {\n          callback();\n        }\n      };\n      return {\n        form: {},\n        search:{},\n        roleBox: false,\n        excelBox: false,\n        loading: true,\n        selectionList: [],\n        query: {},\n        page: {\n          pageSize: 10,\n          currentPage: 1,\n          total: 0\n        },\n        init: {\n          roleTree: [],\n          deptTree: [],\n        },\n        props: {\n          label: \"title\",\n          value: \"key\"\n        },\n        roleGrantList: [],\n        roleTreeObj: [],\n        option: {\n          height: 'auto',\n          calcHeight: 210,\n          searchShow: true,\n          searchMenuSpan: 6,\n          tip: false,\n          border: true,\n          index: true,\n          selection: true,\n          viewBtn: true,\n          column: [\n            {\n              label: \"登录账号\",\n              prop: \"account\",\n              search: true,\n              rules: [{\n                required: true,\n                message: \"请输入登录账号\",\n                trigger: \"blur\"\n              }],\n              span: website.tenantMode ? 12 : 24,\n            },\n            {\n              label: \"所属资方\",\n              prop: \"tenantId\",\n              type: \"tree\",\n              dicUrl: \"/api/blade-system/tenant/select\",\n              props: {\n                label: \"tenantName\",\n                value: \"tenantId\"\n              },\n              hide: !website.tenantMode,\n              addDisplay: website.tenantMode,\n              editDisplay: website.tenantMode,\n              viewDisplay: website.tenantMode,\n              search: true,\n              rules: [{\n                required: true,\n                message: \"请输入所属资方\",\n                trigger: \"click\"\n              }]\n            },\n            {\n              label: '密码',\n              prop: 'password',\n              hide: true,\n              editDisplay: false,\n              viewDisplay: false,\n              rules: [{required: true, validator: validatePass, trigger: 'blur'}]\n            },\n            {\n              label: '确认密码',\n              prop: 'password2',\n              hide: true,\n              editDisplay: false,\n              viewDisplay: false,\n              rules: [{required: true, validator: validatePass2, trigger: 'blur'}]\n            },\n            {\n              label: \"用户昵称\",\n              prop: \"name\",\n              rules: [{\n                required: true,\n                message: \"请输入用户昵称\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"用户姓名\",\n              prop: \"realName\",\n              search: true,\n              rules: [{\n                required: true,\n                message: \"请输入用户姓名\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"所属角色\",\n              prop: \"roleId\",\n              multiple: true,\n              type: \"tree\",\n              dicData: [],\n              props: {\n                label: \"title\"\n              },\n              slot: true,\n              checkStrictly: true,\n              rules: [{\n                required: true,\n                message: \"请选择所属角色\",\n                trigger: \"click\"\n              }]\n            },\n            {\n              label: \"所属部门\",\n              prop: \"deptId\",\n              type: \"tree\",\n              multiple: true,\n              dicData: [],\n              props: {\n                label: \"title\"\n              },\n              slot: true,\n              checkStrictly: true,\n              rules: [{\n                required: true,\n                message: \"请选择所属部门\",\n                trigger: \"click\"\n              }]\n            },\n            {\n              label: \"用户编号\",\n              prop: \"code\",\n              hide: true,\n            },\n            // {\n            //   label: \"所属岗位\",\n            //   prop: \"postId\",\n            //   type: \"tree\",\n            //   multiple: true,\n            //   dicData: [],\n            //   hide: true,\n            //   props: {\n            //     label: \"postName\",\n            //     value: \"id\"\n            //   },\n            //   rules: [{\n            //     required: true,\n            //     message: \"请选择所属岗位\",\n            //     trigger: \"click\"\n            //   }],\n            // },\n            {\n              label: \"手机号码\",\n              prop: \"phone\",\n              overHidden: true\n            },\n            {\n              label: \"电子邮箱\",\n              prop: \"email\",\n              hide: true,\n              overHidden: true\n            },\n            {\n              label: \"用户性别\",\n              prop: \"sex\",\n              type: \"select\",\n              dicData: [\n                {\n                  label: \"男\",\n                  value: 1\n                },\n                {\n                  label: \"女\",\n                  value: 2\n                },\n                {\n                  label: \"未知\",\n                  value: 3\n                }\n              ],\n              hide: true\n            },\n            {\n              label: \"用户生日\",\n              type: \"date\",\n              prop: \"birthday\",\n              format: \"yyyy-MM-dd hh:mm:ss\",\n              valueFormat: \"yyyy-MM-dd hh:mm:ss\",\n              hide: true\n            },\n            {\n              label: \"账号状态\",\n              prop: \"statusName\",\n              hide: true,\n              display: false\n            }\n          ]\n        },\n        data: [],\n        excelForm: {},\n        excelOption: {\n          submitBtn: false,\n          emptyBtn: false,\n          column: [\n            {\n              label: '模板上传',\n              prop: 'excelFile',\n              type: 'upload',\n              drag: true,\n              loadText: '模板上传中，请稍等',\n              span: 24,\n              propsHttp: {\n                res: 'data'\n              },\n              tip: '请上传 .xls,.xlsx 标准格式文件',\n              action: \"/api/blade-user/import-user\"\n            },\n            {\n              label: '模板下载',\n              prop: 'excelTemplate',\n              formslot: true,\n              span: 24,\n            }\n          ]\n        }\n      };\n    },\n    watch: {\n      'form.tenantId'() {\n        if (this.form.tenantId !== '') {\n          getDeptTree(this.form.tenantId).then(res => {\n            const column = this.findObject(this.option.column, \"deptId\");\n            column.dicData = res.data.data;\n            if (column!=-1){\n              this.$Log.primary(JSON.stringify(column))\n              column.dicData = res.data.data;\n            }\n          });\n          getRoleTree(this.form.tenantId).then(res => {\n            const column = this.findObject(this.option.column, \"roleId\");\n            column.dicData = res.data.data;\n            if (column!=-1){\n              this.$Log.primary(JSON.stringify(column))\n              column.dicData = res.data.data;\n            }\n          });\n          getPostList(this.form.tenantId).then(res => {\n            const column = this.findObject(this.option.column, \"postId\");\n            if (column!=-1){\n              this.$Log.primary(JSON.stringify(column))\n              column.dicData = res.data.data;\n            }\n          });\n        }\n      },\n    },\n    computed: {\n      ...mapGetters([\"userInfo\", \"permission\"]),\n      permissionList() {\n        return {\n          addBtn: this.vaildData(this.permission.user_add, false),\n          viewBtn: this.vaildData(this.permission.user_view, false),\n          delBtn: this.vaildData(this.permission.user_delete, false),\n          editBtn: this.vaildData(this.permission.user_edit, false)\n        };\n      },\n      ids() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids.join(\",\");\n      },\n    },\n    methods: {\n      submitRole() {\n        const roleList = this.$refs.treeRole.getCheckedKeys().join(\",\");\n        grant(this.ids, roleList).then(() => {\n          this.roleBox = false;\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          this.onLoad(this.page);\n        });\n      },\n      rowSave(row, done, loading) {\n        row.deptId = row.deptId.join(\",\");\n        row.roleId = row.roleId.join(\",\");\n        // row.postId = row.postId.join(\",\");\n        add(row).then(() => {\n          done();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowUpdate(row, index, done, loading) {\n        row.deptId = row.deptId.join(\",\");\n        row.roleId = row.roleId.join(\",\");\n        row.postId = row.postId.join(\",\");\n        update(row).then(() => {\n          done();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowDel(row) {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(row.id);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n      searchReset() {\n        this.query = {};\n        this.onLoad(this.page);\n      },\n      searchChange(params, done) {\n        this.query = params;\n        this.page.currentPage = 1;\n        this.onLoad(this.page, params);\n        done();\n      },\n      selectionChange(list) {\n        this.selectionList = list;\n      },\n      handleDelete() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(this.ids);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      handleReset() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择账号密码重置为123456?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return resetPassword(this.ids);\n          })\n          .then(() => {\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      handleGrant() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.roleTreeObj = [];\n        if (this.selectionList.length === 1) {\n          this.roleTreeObj = this.selectionList[0].roleId.split(\",\");\n        }\n        getRoleTree().then(res => {\n          this.roleGrantList = res.data.data;\n          this.roleBox = true;\n        });\n      },\n      handleImport() {\n        this.excelBox = true;\n      },\n      uploadAfter(res, done, loading, column) {\n        window.console.log(column);\n        done();\n        this.excelBox = false;\n        this.refreshChange();\n      },\n      handleExport() {\n        this.$confirm(\"是否导出用户数据?\", \"提示\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }).then(() => {\n          window.open(`/api/blade-user/export-user?blade-auth=${getToken()}&account=${this.search.account}&realName=${this.search.realName}`);\n        });\n      },\n      handleTemplate() {\n        window.open(`/api/blade-user/export-template?blade-auth=${getToken()}`);\n      },\n      beforeOpen(done, type) {\n        if ([\"edit\", \"view\"].includes(type)) {\n          getUser(this.form.id).then(res => {\n            this.form = res.data.data;\n            if(this.form.hasOwnProperty(\"deptId\")){\n              this.form.deptId = this.form.deptId.split(\",\");\n            }\n            if(this.form.hasOwnProperty(\"roleId\")){\n              this.form.roleId = this.form.roleId.split(\",\");\n            }\n            if(this.form.hasOwnProperty(\"postId\")){\n              this.form.postId = this.form.postId.split(\",\");\n            }\n          });\n        }\n        done();\n      },\n      currentChange(currentPage) {\n        this.page.currentPage = currentPage;\n      },\n      sizeChange(pageSize) {\n        this.page.pageSize = pageSize;\n      },\n      refreshChange() {\n        this.onLoad(this.page, this.query);\n      },\n      onLoad(page, params = {}) {\n        this.loading = true;\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n          const data = res.data.data;\n          this.page.total = data.total;\n          this.data = data.records;\n          this.loading = false;\n        });\n        getDeptTree(this.form.tenantId).then(res => {\n          const column = this.findObject(this.option.column, \"deptId\");\n          column.dicData = res.data.data;\n          if (column!=-1){\n            this.$Log.primary(JSON.stringify(column))\n            column.dicData = res.data.data;\n          }\n        });\n        getRoleTree(this.form.tenantId).then(res => {\n          const column = this.findObject(this.option.column, \"roleId\");\n          column.dicData = res.data.data;\n          if (column!=-1){\n            this.$Log.primary(JSON.stringify(column))\n            column.dicData = res.data.data;\n          }\n        });\n        getPostList(this.form.tenantId).then(res => {\n          const column = this.findObject(this.option.column, \"postId\");\n          if (column!=-1){\n            this.$Log.primary(JSON.stringify(column))\n            column.dicData = res.data.data;\n          }\n        });\n      }\n    }\n  };\n</script>\n\n<style>\n</style>\n"]}]}