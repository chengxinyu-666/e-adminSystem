{"remainingRequest":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workCode\\xiaoE\\大圣系统源码\\admin\\src\\views\\channel\\channelstatistics.vue?vue&type=style&index=0&id=39448ab0&scoped=true&lang=css&","dependencies":[{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\src\\views\\channel\\channelstatistics.vue","mtime":1678090956000},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\css-loader\\index.js","mtime":1678778409149},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1678778410194},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\postcss-loader\\src\\index.js","mtime":1678778410012},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678778409044},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1678778410194}],"contextDependencies":[],"result":["\n.one_line {\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\n",{"version":3,"sources":["channelstatistics.vue"],"names":[],"mappings":";AAsZA;AACA;AACA;AACA;AACA","file":"channelstatistics.vue","sourceRoot":"src/views/channel","sourcesContent":["<template>\n  <basic-container>\n    <avue-crud :option=\"options\"\n               :table-loading=\"loading\"\n               :data=\"data\"\n               :page=\"page\"\n               :permission=\"permissionList\"\n               :before-open=\"beforeOpen\"\n               v-model=\"form\"\n               ref=\"crud\"\n               @row-update=\"rowUpdate\"\n               @row-save=\"rowSave\"\n               @row-del=\"rowDel\"\n               @search-change=\"searchChange\"\n               @search-reset=\"searchReset\"\n               @selection-change=\"selectionChange\"\n               @current-change=\"currentChange\"\n               @size-change=\"sizeChange\"\n               @on-load=\"onLoad\">\n      <template slot=\"menuLeft\">\n        <el-button type=\"danger\"\n                   size=\"small\"\n                   icon=\"el-icon-delete\"\n                   plain\n                   v-if=\"false\"\n                   @click=\"handleDelete\">删 除\n        </el-button>\n      </template>\n      <template #menu=\"{row,index,size}\">\n        <div style=\"width: 100%;display: flex;flex-wrap: wrap;align-items: center;flex-direction: row;justify-content: center;\">\n<!--          <el-button type=\"text\" icon=\"el-icon-view\" size=\"mini\" @click=\"$refs.crud.rowView(row,index)\">查看</el-button>-->\n          <el-popover\n            placement=\"top-start\"\n            title=\"渠道二维码\"\n            width=\"200\"\n            trigger=\"click\">\n            <div  style=\"width: 180px\">\n             <img style=\"width: 180px\" :src=\"row.qrCodeUrl\"/>\n            </div>\n            <el-button slot=\"reference\" type=\"text\" icon=\"el-icon-picture-outline\" size=\"mini\" >查看二维码</el-button>\n          </el-popover>\n\n          <el-button type=\"text\" icon=\"el-icon-delete\" size=\"mini\" @click=\"$refs.crud.rowDel(row,index)\">删除</el-button>\n        </div>\n      </template>\n      <template slot=\"url\" slot-scope=\"scope\">\n          <span data-clipboard-action=\"copy\"\n                :data-clipboard-text=\"scope.label\" class=\"hand name-color one_line\" :class=\"'cl'+scope.row.id\"\n                @click=\"copy('cl'+scope.row.id)\">点击复制 {{ scope.label}}</span>\n      </template>\n      <template slot=\"inComeRate\" slot-scope=\"scope\">\n        <div >\n          {{orderExamineNum(scope.row)}}\n        </div>\n      </template>\n    </avue-crud>\n  </basic-container>\n</template>\n\n<script>\n  import {getList, getDetail, add, update, remove} from \"@/api/channel/channel\";\n  import {mapGetters} from \"vuex\";\n  import Clipboard from 'clipboard';\n  import moment from \"moment\";\n  import {toFixed} from \"../../constant/goods/constant\";\n  import {dictionary} from \"../../api/system/dict\";\n  export default {\n    data() {\n      return {\n        form: {},\n        query: {},\n        loading: true,\n        page: {\n          pageSize: 10,\n          currentPage: 1,\n          total: 0\n        },\n        selectionList: [],\n        data: []\n      };\n    },\n    created() {\n     console.log(this.userInfo)\n    },\n    computed: {\n      ...mapGetters([\"userInfo\",\"permission\"]),\n      permissionList() {\n        return {\n          addBtn: this.vaildData(this.permission.channelstatistics_add, false),\n          viewBtn: this.vaildData(this.permission.channelstatistics_view, false),\n          delBtn: this.vaildData(this.permission.channelstatistics_delete, false),\n          editBtn: this.vaildData(this.permission.channelstatistics_edit, false)\n        };\n      },\n      options() {\n        var options = {\n          height: 'auto',\n          calcHeight: 210,\n          searchShow: true,\n          searchMenuSpan: 6,\n          menuWidth:180,\n          dialogWidth:40,\n          tip: false,\n          border: true,\n          index: true,\n          viewBtn: false,\n          editBtn:false,\n          delBtn:false,\n          addBtn:this.userInfo.authority.includes('channel'),\n          selection: true,\n          column: [\n            {\n              label: \"渠道商\",\n              prop: \"realName\",\n              addDisplay:false,\n              editDisplay: false,\n              search: true,\n              rules: [{\n                required: true,\n                message: \"请输入渠道创建者\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: '时间',\n              prop: 'createTime',\n              type: 'daterange',\n              searchSpan:8,\n              searchRange:true,\n              format:'yyyy-MM-dd',\n              valueFormat:'yyyy-MM-dd',\n              addDisplay:false,\n              editDisplay: false,\n              hide:true,\n              search:true,\n            },\n            {\n              label: \"链接名称\",\n              prop: \"name\",\n              addDisplay:true,\n              editDisplay: true,\n              rules: [{\n                required: true,\n                message: \"请输入渠道code\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"渠道链接\",\n              prop: \"url\",\n              width:200,\n              addDisplay:false,\n              editDisplay: false,\n\n              rules: [{\n                required: true,\n                message: \"请输入链接名称\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"渠道状态\",\n              prop: \"status\",\n              type: \"select\",\n              addDisplay:false,\n              editDisplay: false,\n              dicUrl: \"/api/blade-system/dict/dictionary?code=channel_status\",\n              props: {\n                label: \"dictValue\",\n                value: \"dictKey\"\n              },\n            },\n            {\n              label: \"点击数量\",\n              addDisplay:false,\n              editDisplay: false,\n              prop: \"clickNum\",\n            },\n            {\n              label: \"注册数量\",\n              addDisplay:false,\n              editDisplay: false,\n              prop: \"clientNum\",\n            },\n            {\n              label: \"初始化订单\",\n              addDisplay:false,\n              editDisplay: false,\n              width:90,\n              prop: \"orderInitNum\",\n            },\n            {\n              label: \"总订单\",\n              addDisplay:false,\n              editDisplay: false,\n              prop: \"orderFreezeNum\",\n            },\n            {\n              label: \"总签合同\",\n              width:90,\n              addDisplay:false,\n              editDisplay: false,\n              prop: \"orderSignNum\",\n            },\n            {\n              label: \"总发货数\",\n              addDisplay:false,\n              editDisplay: false,\n              prop: \"orderSendNum\",\n            },\n            {\n              label: \"逾期数量\",\n              addDisplay:false,\n              editDisplay: false,\n              prop: \"orderOverdueNum\",\n            },\n            {\n              label: \"申请数\",\n              addDisplay:false,\n              editDisplay: false,\n              prop: \"orderExamineNum\",\n            },\n            {\n              label: \"通过率\",\n              addDisplay:false,\n              editDisplay: false,\n              prop: \"orderExamineOkNum\",\n            },\n            {\n              label: \"进件率\",\n              addDisplay:false,\n              editDisplay: false,\n              prop: \"inComeRate\",\n              slot: true,\n            }\n          ]\n        };\n        if(!this.userInfo.tenantId.includes('000000')){\n          options.column = options.column.filter(item => {\n            if(item.prop == 'realName'){\n              return false;\n            }\n            return true;\n          });\n        }\n        return options;\n      },\n      ids() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids.join(\",\");\n      }\n    },\n    methods: {\n      orderExamineNum(row){\n        var clickNum = row.clickNum==\"\"?0:row.clickNum;\n        return toFixed(Number.parseFloat(clickNum)<=0?0:(Number.parseFloat(row.orderExamineNum)/Number.parseFloat(clickNum)),2)+\"%\";\n      },\n      copy(bt){\n        let clipboard = new Clipboard(\".\"+bt);\n        clipboard.on('success', e => {\n          this.$message({\n            type: \"success\",\n            message: \"复制成功!\"\n          });\n          clipboard.destroy()\n        })\n        clipboard.on('error', e => {\n          // 不支持复制\n          this.$message({\n            type: \"success\",\n            message: \"该浏览器不支持自动复制!\"\n          });\n          clipboard.destroy()\n        })\n      },\n      rowSave(row, done, loading) {\n        delete row.createTime;\n        add(row).then(() => {\n          done();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowUpdate(row, index, done, loading) {\n        delete row.createTime;\n        update(row).then(() => {\n          done();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowDel(row) {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(row.id);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n      handleDelete() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(this.ids);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      beforeOpen(done, type) {\n        if ([\"edit\", \"view\"].includes(type)) {\n          getDetail(this.form.id).then(res => {\n            this.form = res.data.data;\n          });\n        }\n        done();\n      },\n      searchReset() {\n        this.query = {};\n        this.onLoad(this.page);\n      },\n      searchChange(params, done) {\n        this.query = params;\n        this.page.currentPage = 1;\n        this.onLoad(this.page, params);\n        done();\n      },\n      selectionChange(list) {\n        this.selectionList = list;\n      },\n      selectionClear() {\n        this.selectionList = [];\n        this.$refs.crud.toggleSelection();\n      },\n      currentChange(currentPage){\n        this.page.currentPage = currentPage;\n      },\n      sizeChange(pageSize){\n        this.page.pageSize = pageSize;\n      },\n      onLoad(page, params = {}) {\n        this.loading = true;\n        if (this.query.createTime&&this.query.createTime.length == 2){\n          this.query.beginCreateTime = moment(this.query.createTime[0]+\" 00:00:00\").format('YYYY-MM-DD HH:mm:ss');\n          this.query.endCreateTime = moment(this.query.createTime[1]+\" 23:59:59\").format('YYYY-MM-DD HH:mm:ss');\n          delete this.query.createTime;\n        }\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n          const data = res.data.data;\n          this.page.total = data.total;\n          this.data = data.records;\n          for(var item of this.data){\n            item.clickNum = item.clickNum == \"\"?0:item.clickNum\n          }\n          this.loading = false;\n          this.selectionClear();\n        });\n      }\n    }\n  };\n</script>\n\n<style scoped>\n  .one_line {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n</style>\n"]}]}