{"remainingRequest":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workCode\\xiaoE\\大圣系统源码\\admin\\src\\views\\userbalance\\userbalancelist.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\src\\views\\userbalance\\userbalancelist.vue","mtime":1678858271716},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678778409044},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1678778390429},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678778409044},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1678778410194}],"contextDependencies":[],"result":["\r\n    import {\r\n      getList,\r\n      getUser,\r\n      remove,\r\n      update,\r\n      add, \r\n    } from \"@/api/system/user\";\r\n    import {getDeptTree} from \"@/api/system/dept\";\r\n    import {getRoleTree} from \"@/api/system/role\";\r\n    import {getPostList} from \"@/api/system/post\";\r\n    import {mapGetters} from \"vuex\";\r\n    import website from '@/config/website';\r\n    import {getToken} from '@/util/auth';\r\n  \r\n    export default {\r\n      data() {\r\n        const validatePass = (rule, value, callback) => {\r\n          if (value === '') {\r\n            callback(new Error('请输入密码'));\r\n          } else {\r\n            callback();\r\n          }\r\n        };\r\n       \r\n        return {\r\n          form: {},\r\n          search:{},  \r\n          loading: true,\r\n          selectionList: [],\r\n          query: {},\r\n          page: {\r\n            pageSize: 10,\r\n            currentPage: 1,\r\n            total: 0\r\n          },\r\n          init: {\r\n            roleTree: [],\r\n            deptTree: [],\r\n          },\r\n          props: {\r\n            label: \"title\",\r\n            value: \"key\"\r\n          },\r\n          roleGrantList: [],\r\n          roleTreeObj: [],\r\n          option: {\r\n            height: 'auto',\r\n            calcHeight: 210,\r\n            searchShow: true,\r\n            searchMenuSpan: 6,\r\n            tip: false,\r\n            border: true,\r\n            index: true,\r\n            selection: true,\r\n            viewBtn: true,\r\n            column: [\r\n              {\r\n                label: \"登录账号\",\r\n                prop: \"account\",\r\n                search: true,\r\n                rules: [{\r\n                  required: true,\r\n                  message: \"请输入登录账号\",\r\n                  trigger: \"blur\"\r\n                }],\r\n                span: website.tenantMode ? 12 : 24,\r\n              },\r\n             \r\n              {\r\n                label: '密码',\r\n                prop: 'password',\r\n                hide: true,\r\n                editDisplay: false,\r\n                viewDisplay: false,\r\n                rules: [{required: true, validator: validatePass, trigger: 'blur'}]\r\n              },\r\n           \r\n              {\r\n                label: \"用户昵称\",\r\n                prop: \"name\",\r\n                rules: [{\r\n                  required: true,\r\n                  message: \"请输入用户昵称\",\r\n                  trigger: \"blur\"\r\n                }]\r\n              },\r\n              {\r\n                label: \"用户姓名\",\r\n                prop: \"realName\",\r\n                search: true,\r\n                rules: [{\r\n                  required: true,\r\n                  message: \"请输入用户姓名\",\r\n                  trigger: \"blur\"\r\n                }]\r\n              },\r\n              \r\n             \r\n              {\r\n                label: \"用户编号\",\r\n                prop: \"code\",\r\n                hide: true,\r\n              },\r\n       \r\n              {\r\n                label: \"手机号码\",\r\n                prop: \"phone\", \r\n              },\r\n              {\r\n                label: \"电子邮箱\",\r\n                prop: \"email\", \r\n              },\r\n              {\r\n                label: \"用户性别\",\r\n                prop: \"sex\",\r\n                type: \"select\",\r\n                dicData: [\r\n                  {\r\n                    label: \"男\",\r\n                    value: -1\r\n                  },\r\n                  {\r\n                    label: \"女\",\r\n                    value: 2\r\n                  }, \r\n                ], \r\n              }, \r\n              {\r\n                label: \"账号状态\",\r\n                prop: \"statusName\", \r\n                display: false\r\n              },\r\n              {\r\n                label: \"账号余额\",\r\n                prop: \"accountbalance\", \r\n                display: false\r\n              }\r\n            ]\r\n          },\r\n          data: [],\r\n          excelForm: {},\r\n          excelOption: {\r\n            submitBtn: false,\r\n            emptyBtn: false,\r\n            column: [\r\n              {\r\n                label: '模板上传',\r\n                prop: 'excelFile',\r\n                type: 'upload',\r\n                drag: true,\r\n                loadText: '模板上传中，请稍等',\r\n                span: 24,\r\n                propsHttp: {\r\n                  res: 'data'\r\n                },\r\n                tip: '请上传 .xls,.xlsx 标准格式文件',\r\n                action: \"/api/blade-user/import-user\"\r\n              },\r\n              {\r\n                label: '模板下载',\r\n                prop: 'excelTemplate',\r\n                formslot: true,\r\n                span: 24,\r\n              }\r\n            ]\r\n          }\r\n        };\r\n      },\r\n      watch: {\r\n        'form.tenantId'() {\r\n          if (this.form.tenantId !== '') {\r\n            getDeptTree(this.form.tenantId).then(res => {\r\n              const column = this.findObject(this.option.column, \"deptId\");\r\n              column.dicData = res.data.data;\r\n              if (column!=-1){\r\n                this.$Log.primary(JSON.stringify(column))\r\n                column.dicData = res.data.data;\r\n              }\r\n            });\r\n            getRoleTree(this.form.tenantId).then(res => {\r\n              const column = this.findObject(this.option.column, \"roleId\");\r\n              column.dicData = res.data.data;\r\n              if (column!=-1){\r\n                this.$Log.primary(JSON.stringify(column))\r\n                column.dicData = res.data.data;\r\n              }\r\n            });\r\n            getPostList(this.form.tenantId).then(res => {\r\n              const column = this.findObject(this.option.column, \"postId\");\r\n              if (column!=-1){\r\n                this.$Log.primary(JSON.stringify(column))\r\n                column.dicData = res.data.data;\r\n              }\r\n            });\r\n          }\r\n        },\r\n      },\r\n      computed: {\r\n        ...mapGetters([\"userInfo\", \"permission\"]),\r\n        permissionList() {\r\n          return {\r\n            addBtn: this.vaildData(this.permission.user_add, false),\r\n            viewBtn: this.vaildData(this.permission.user_view, false),\r\n            delBtn: this.vaildData(this.permission.user_delete, false),\r\n            editBtn: this.vaildData(this.permission.user_edit, false)\r\n          };\r\n        },\r\n        ids() {\r\n          let ids = [];\r\n          this.selectionList.forEach(ele => {\r\n            ids.push(ele.id);\r\n          });\r\n          return ids.join(\",\");\r\n        },\r\n      },\r\n      methods: {\r\n       \r\n        rowSave(row, done, loading) {\r\n          row.deptId = row.deptId.join(\",\");\r\n          row.roleId = row.roleId.join(\",\");\r\n          // row.postId = row.postId.join(\",\");\r\n          add(row).then(() => {\r\n            done();\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          }, error => {\r\n            window.console.log(error);\r\n            loading();\r\n          });\r\n        },\r\n        rowUpdate(row, index, done, loading) {\r\n          row.deptId = row.deptId.join(\",\");\r\n          row.roleId = row.roleId.join(\",\");\r\n          row.postId = row.postId.join(\",\");\r\n          update(row).then(() => {\r\n            done();\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          }, error => {\r\n            window.console.log(error);\r\n            loading();\r\n          });\r\n        },\r\n        rowDel(row) {\r\n          this.$confirm(\"确定将选择数据删除?\", {\r\n            confirmButtonText: \"确定\",\r\n            cancelButtonText: \"取消\",\r\n            type: \"warning\"\r\n          })\r\n            .then(() => {\r\n              return remove(row.id);\r\n            })\r\n            .then(() => {\r\n              this.onLoad(this.page);\r\n              this.$message({\r\n                type: \"success\",\r\n                message: \"操作成功!\"\r\n              });\r\n            });\r\n        },\r\n        searchReset() {\r\n          this.query = {};\r\n          this.onLoad(this.page);\r\n        },\r\n        searchChange(params, done) {\r\n          this.query = params;\r\n          this.page.currentPage = 1;\r\n          this.onLoad(this.page, params);\r\n          done();\r\n        },\r\n        selectionChange(list) {\r\n          this.selectionList = list;\r\n        },\r\n        handleDelete() {\r\n          if (this.selectionList.length === 0) {\r\n            this.$message.warning(\"请选择至少一条数据\");\r\n            return;\r\n          }\r\n          this.$confirm(\"确定将选择数据删除?\", {\r\n            confirmButtonText: \"确定\",\r\n            cancelButtonText: \"取消\",\r\n            type: \"warning\"\r\n          })\r\n            .then(() => {\r\n              return remove(this.ids);\r\n            })\r\n            .then(() => {\r\n              this.onLoad(this.page);\r\n              this.$message({\r\n                type: \"success\",\r\n                message: \"操作成功!\"\r\n              });\r\n              this.$refs.crud.toggleSelection();\r\n            });\r\n        },\r\n \r\n       \r\n      \r\n        handleExport() {\r\n          this.$confirm(\"是否导出用户数据?\", \"提示\", {\r\n            confirmButtonText: \"确定\",\r\n            cancelButtonText: \"取消\",\r\n            type: \"warning\"\r\n          }).then(() => {\r\n            window.open(`/api/blade-user/export-user?blade-auth=${getToken()}&account=${this.search.account}&realName=${this.search.realName}`);\r\n          });\r\n        },\r\n        handleTemplate() {\r\n          window.open(`/api/blade-user/export-template?blade-auth=${getToken()}`);\r\n        },\r\n        beforeOpen(done, type) {\r\n          if ([\"edit\", \"view\"].includes(type)) {\r\n            getUser(this.form.id).then(res => {\r\n              this.form = res.data.data;\r\n              if(this.form.hasOwnProperty(\"deptId\")){\r\n                this.form.deptId = this.form.deptId.split(\",\");\r\n              }\r\n              if(this.form.hasOwnProperty(\"roleId\")){\r\n                this.form.roleId = this.form.roleId.split(\",\");\r\n              }\r\n              if(this.form.hasOwnProperty(\"postId\")){\r\n                this.form.postId = this.form.postId.split(\",\");\r\n              }\r\n            });\r\n          }\r\n          done();\r\n        },\r\n        currentChange(currentPage) {\r\n          this.page.currentPage = currentPage;\r\n        },\r\n        sizeChange(pageSize) {\r\n          this.page.pageSize = pageSize;\r\n        },\r\n        refreshChange() {\r\n          this.onLoad(this.page, this.query);\r\n        },\r\n        onLoad(page, params = {}) {\r\n          this.loading = true;\r\n          getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\r\n            const data = res.data.data;\r\n            this.page.total = data.total;\r\n            this.data = data.records;\r\n            this.loading = false;\r\n          });\r\n          getDeptTree(this.form.tenantId).then(res => {\r\n            const column = this.findObject(this.option.column, \"deptId\");\r\n            column.dicData = res.data.data;\r\n            if (column!=-1){\r\n              this.$Log.primary(JSON.stringify(column))\r\n              column.dicData = res.data.data;\r\n            }\r\n          });\r\n          getRoleTree(this.form.tenantId).then(res => {\r\n            const column = this.findObject(this.option.column, \"roleId\");\r\n            column.dicData = res.data.data;\r\n            if (column!=-1){\r\n              this.$Log.primary(JSON.stringify(column))\r\n              column.dicData = res.data.data;\r\n            }\r\n          });\r\n          getPostList(this.form.tenantId).then(res => {\r\n            const column = this.findObject(this.option.column, \"postId\");\r\n            if (column!=-1){\r\n              this.$Log.primary(JSON.stringify(column))\r\n              column.dicData = res.data.data;\r\n            }\r\n          });\r\n        }\r\n      }\r\n    };\r\n  ",{"version":3,"sources":["userbalancelist.vue"],"names":[],"mappings":";AA+CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"userbalancelist.vue","sourceRoot":"src/views/userbalance","sourcesContent":["<template>\r\n    <basic-container>\r\n      <avue-crud :option=\"option\"\r\n                 :table-loading=\"loading\"\r\n                 :data=\"data\"\r\n                 ref=\"crud\"\r\n                 v-model=\"form\"\r\n                 :permission=\"permissionList\"\r\n                 :search.sync=\"search\"\r\n                 @row-del=\"rowDel\"\r\n                 @row-update=\"rowUpdate\"\r\n                 @row-save=\"rowSave\"\r\n                 :before-open=\"beforeOpen\"\r\n                 :page=\"page\"\r\n                 @search-change=\"searchChange\"\r\n                 @search-reset=\"searchReset\"\r\n                 @selection-change=\"selectionChange\"\r\n                 @current-change=\"currentChange\"\r\n                 @size-change=\"sizeChange\"\r\n                 @refresh-change=\"refreshChange\"\r\n                 @on-load=\"onLoad\">\r\n        <template slot=\"menuLeft\">\r\n          <el-button type=\"danger\"\r\n                     size=\"small\"\r\n                     icon=\"el-icon-delete\"\r\n                     plain\r\n                     v-if=\"permission.user_delete\"\r\n                     @click=\"handleDelete\">删 除\r\n          </el-button>\r\n    \r\n      \r\n        </template>\r\n        <template slot-scope=\"{row}\"\r\n                  slot=\"roleId\">\r\n          <el-tag>{{row.roleName}}</el-tag>\r\n        </template>\r\n        <template slot-scope=\"{row}\"\r\n                  slot=\"deptId\">\r\n          <el-tag>{{row.deptName}}</el-tag>\r\n        </template>\r\n      </avue-crud>\r\n     \r\n   \r\n    </basic-container>\r\n  </template>\r\n  \r\n  <script>\r\n    import {\r\n      getList,\r\n      getUser,\r\n      remove,\r\n      update,\r\n      add, \r\n    } from \"@/api/system/user\";\r\n    import {getDeptTree} from \"@/api/system/dept\";\r\n    import {getRoleTree} from \"@/api/system/role\";\r\n    import {getPostList} from \"@/api/system/post\";\r\n    import {mapGetters} from \"vuex\";\r\n    import website from '@/config/website';\r\n    import {getToken} from '@/util/auth';\r\n  \r\n    export default {\r\n      data() {\r\n        const validatePass = (rule, value, callback) => {\r\n          if (value === '') {\r\n            callback(new Error('请输入密码'));\r\n          } else {\r\n            callback();\r\n          }\r\n        };\r\n       \r\n        return {\r\n          form: {},\r\n          search:{},  \r\n          loading: true,\r\n          selectionList: [],\r\n          query: {},\r\n          page: {\r\n            pageSize: 10,\r\n            currentPage: 1,\r\n            total: 0\r\n          },\r\n          init: {\r\n            roleTree: [],\r\n            deptTree: [],\r\n          },\r\n          props: {\r\n            label: \"title\",\r\n            value: \"key\"\r\n          },\r\n          roleGrantList: [],\r\n          roleTreeObj: [],\r\n          option: {\r\n            height: 'auto',\r\n            calcHeight: 210,\r\n            searchShow: true,\r\n            searchMenuSpan: 6,\r\n            tip: false,\r\n            border: true,\r\n            index: true,\r\n            selection: true,\r\n            viewBtn: true,\r\n            column: [\r\n              {\r\n                label: \"登录账号\",\r\n                prop: \"account\",\r\n                search: true,\r\n                rules: [{\r\n                  required: true,\r\n                  message: \"请输入登录账号\",\r\n                  trigger: \"blur\"\r\n                }],\r\n                span: website.tenantMode ? 12 : 24,\r\n              },\r\n             \r\n              {\r\n                label: '密码',\r\n                prop: 'password',\r\n                hide: true,\r\n                editDisplay: false,\r\n                viewDisplay: false,\r\n                rules: [{required: true, validator: validatePass, trigger: 'blur'}]\r\n              },\r\n           \r\n              {\r\n                label: \"用户昵称\",\r\n                prop: \"name\",\r\n                rules: [{\r\n                  required: true,\r\n                  message: \"请输入用户昵称\",\r\n                  trigger: \"blur\"\r\n                }]\r\n              },\r\n              {\r\n                label: \"用户姓名\",\r\n                prop: \"realName\",\r\n                search: true,\r\n                rules: [{\r\n                  required: true,\r\n                  message: \"请输入用户姓名\",\r\n                  trigger: \"blur\"\r\n                }]\r\n              },\r\n              \r\n             \r\n              {\r\n                label: \"用户编号\",\r\n                prop: \"code\",\r\n                hide: true,\r\n              },\r\n       \r\n              {\r\n                label: \"手机号码\",\r\n                prop: \"phone\", \r\n              },\r\n              {\r\n                label: \"电子邮箱\",\r\n                prop: \"email\", \r\n              },\r\n              {\r\n                label: \"用户性别\",\r\n                prop: \"sex\",\r\n                type: \"select\",\r\n                dicData: [\r\n                  {\r\n                    label: \"男\",\r\n                    value: -1\r\n                  },\r\n                  {\r\n                    label: \"女\",\r\n                    value: 2\r\n                  }, \r\n                ], \r\n              }, \r\n              {\r\n                label: \"账号状态\",\r\n                prop: \"statusName\", \r\n                display: false\r\n              },\r\n              {\r\n                label: \"账号余额\",\r\n                prop: \"accountbalance\", \r\n                display: false\r\n              }\r\n            ]\r\n          },\r\n          data: [],\r\n          excelForm: {},\r\n          excelOption: {\r\n            submitBtn: false,\r\n            emptyBtn: false,\r\n            column: [\r\n              {\r\n                label: '模板上传',\r\n                prop: 'excelFile',\r\n                type: 'upload',\r\n                drag: true,\r\n                loadText: '模板上传中，请稍等',\r\n                span: 24,\r\n                propsHttp: {\r\n                  res: 'data'\r\n                },\r\n                tip: '请上传 .xls,.xlsx 标准格式文件',\r\n                action: \"/api/blade-user/import-user\"\r\n              },\r\n              {\r\n                label: '模板下载',\r\n                prop: 'excelTemplate',\r\n                formslot: true,\r\n                span: 24,\r\n              }\r\n            ]\r\n          }\r\n        };\r\n      },\r\n      watch: {\r\n        'form.tenantId'() {\r\n          if (this.form.tenantId !== '') {\r\n            getDeptTree(this.form.tenantId).then(res => {\r\n              const column = this.findObject(this.option.column, \"deptId\");\r\n              column.dicData = res.data.data;\r\n              if (column!=-1){\r\n                this.$Log.primary(JSON.stringify(column))\r\n                column.dicData = res.data.data;\r\n              }\r\n            });\r\n            getRoleTree(this.form.tenantId).then(res => {\r\n              const column = this.findObject(this.option.column, \"roleId\");\r\n              column.dicData = res.data.data;\r\n              if (column!=-1){\r\n                this.$Log.primary(JSON.stringify(column))\r\n                column.dicData = res.data.data;\r\n              }\r\n            });\r\n            getPostList(this.form.tenantId).then(res => {\r\n              const column = this.findObject(this.option.column, \"postId\");\r\n              if (column!=-1){\r\n                this.$Log.primary(JSON.stringify(column))\r\n                column.dicData = res.data.data;\r\n              }\r\n            });\r\n          }\r\n        },\r\n      },\r\n      computed: {\r\n        ...mapGetters([\"userInfo\", \"permission\"]),\r\n        permissionList() {\r\n          return {\r\n            addBtn: this.vaildData(this.permission.user_add, false),\r\n            viewBtn: this.vaildData(this.permission.user_view, false),\r\n            delBtn: this.vaildData(this.permission.user_delete, false),\r\n            editBtn: this.vaildData(this.permission.user_edit, false)\r\n          };\r\n        },\r\n        ids() {\r\n          let ids = [];\r\n          this.selectionList.forEach(ele => {\r\n            ids.push(ele.id);\r\n          });\r\n          return ids.join(\",\");\r\n        },\r\n      },\r\n      methods: {\r\n       \r\n        rowSave(row, done, loading) {\r\n          row.deptId = row.deptId.join(\",\");\r\n          row.roleId = row.roleId.join(\",\");\r\n          // row.postId = row.postId.join(\",\");\r\n          add(row).then(() => {\r\n            done();\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          }, error => {\r\n            window.console.log(error);\r\n            loading();\r\n          });\r\n        },\r\n        rowUpdate(row, index, done, loading) {\r\n          row.deptId = row.deptId.join(\",\");\r\n          row.roleId = row.roleId.join(\",\");\r\n          row.postId = row.postId.join(\",\");\r\n          update(row).then(() => {\r\n            done();\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          }, error => {\r\n            window.console.log(error);\r\n            loading();\r\n          });\r\n        },\r\n        rowDel(row) {\r\n          this.$confirm(\"确定将选择数据删除?\", {\r\n            confirmButtonText: \"确定\",\r\n            cancelButtonText: \"取消\",\r\n            type: \"warning\"\r\n          })\r\n            .then(() => {\r\n              return remove(row.id);\r\n            })\r\n            .then(() => {\r\n              this.onLoad(this.page);\r\n              this.$message({\r\n                type: \"success\",\r\n                message: \"操作成功!\"\r\n              });\r\n            });\r\n        },\r\n        searchReset() {\r\n          this.query = {};\r\n          this.onLoad(this.page);\r\n        },\r\n        searchChange(params, done) {\r\n          this.query = params;\r\n          this.page.currentPage = 1;\r\n          this.onLoad(this.page, params);\r\n          done();\r\n        },\r\n        selectionChange(list) {\r\n          this.selectionList = list;\r\n        },\r\n        handleDelete() {\r\n          if (this.selectionList.length === 0) {\r\n            this.$message.warning(\"请选择至少一条数据\");\r\n            return;\r\n          }\r\n          this.$confirm(\"确定将选择数据删除?\", {\r\n            confirmButtonText: \"确定\",\r\n            cancelButtonText: \"取消\",\r\n            type: \"warning\"\r\n          })\r\n            .then(() => {\r\n              return remove(this.ids);\r\n            })\r\n            .then(() => {\r\n              this.onLoad(this.page);\r\n              this.$message({\r\n                type: \"success\",\r\n                message: \"操作成功!\"\r\n              });\r\n              this.$refs.crud.toggleSelection();\r\n            });\r\n        },\r\n \r\n       \r\n      \r\n        handleExport() {\r\n          this.$confirm(\"是否导出用户数据?\", \"提示\", {\r\n            confirmButtonText: \"确定\",\r\n            cancelButtonText: \"取消\",\r\n            type: \"warning\"\r\n          }).then(() => {\r\n            window.open(`/api/blade-user/export-user?blade-auth=${getToken()}&account=${this.search.account}&realName=${this.search.realName}`);\r\n          });\r\n        },\r\n        handleTemplate() {\r\n          window.open(`/api/blade-user/export-template?blade-auth=${getToken()}`);\r\n        },\r\n        beforeOpen(done, type) {\r\n          if ([\"edit\", \"view\"].includes(type)) {\r\n            getUser(this.form.id).then(res => {\r\n              this.form = res.data.data;\r\n              if(this.form.hasOwnProperty(\"deptId\")){\r\n                this.form.deptId = this.form.deptId.split(\",\");\r\n              }\r\n              if(this.form.hasOwnProperty(\"roleId\")){\r\n                this.form.roleId = this.form.roleId.split(\",\");\r\n              }\r\n              if(this.form.hasOwnProperty(\"postId\")){\r\n                this.form.postId = this.form.postId.split(\",\");\r\n              }\r\n            });\r\n          }\r\n          done();\r\n        },\r\n        currentChange(currentPage) {\r\n          this.page.currentPage = currentPage;\r\n        },\r\n        sizeChange(pageSize) {\r\n          this.page.pageSize = pageSize;\r\n        },\r\n        refreshChange() {\r\n          this.onLoad(this.page, this.query);\r\n        },\r\n        onLoad(page, params = {}) {\r\n          this.loading = true;\r\n          getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\r\n            const data = res.data.data;\r\n            this.page.total = data.total;\r\n            this.data = data.records;\r\n            this.loading = false;\r\n          });\r\n          getDeptTree(this.form.tenantId).then(res => {\r\n            const column = this.findObject(this.option.column, \"deptId\");\r\n            column.dicData = res.data.data;\r\n            if (column!=-1){\r\n              this.$Log.primary(JSON.stringify(column))\r\n              column.dicData = res.data.data;\r\n            }\r\n          });\r\n          getRoleTree(this.form.tenantId).then(res => {\r\n            const column = this.findObject(this.option.column, \"roleId\");\r\n            column.dicData = res.data.data;\r\n            if (column!=-1){\r\n              this.$Log.primary(JSON.stringify(column))\r\n              column.dicData = res.data.data;\r\n            }\r\n          });\r\n          getPostList(this.form.tenantId).then(res => {\r\n            const column = this.findObject(this.option.column, \"postId\");\r\n            if (column!=-1){\r\n              this.$Log.primary(JSON.stringify(column))\r\n              column.dicData = res.data.data;\r\n            }\r\n          });\r\n        }\r\n      }\r\n    };\r\n  </script>\r\n  \r\n  <style>\r\n  </style>\r\n  "]}]}