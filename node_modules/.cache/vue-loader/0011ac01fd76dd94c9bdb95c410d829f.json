{"remainingRequest":"D:\\转化仓库\\e-adminSystem\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\转化仓库\\e-adminSystem\\node_modules\\avue-plugin-ueditor\\packages\\ueditor\\src\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\转化仓库\\e-adminSystem\\node_modules\\avue-plugin-ueditor\\packages\\ueditor\\src\\index.vue","mtime":1678778376722},{"path":"D:\\转化仓库\\e-adminSystem\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678778409044},{"path":"D:\\转化仓库\\e-adminSystem\\node_modules\\babel-loader\\lib\\index.js","mtime":1678778390429},{"path":"D:\\转化仓库\\e-adminSystem\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678778409044},{"path":"D:\\转化仓库\\e-adminSystem\\node_modules\\vue-loader\\lib\\index.js","mtime":1678778410194}],"contextDependencies":[],"result":["\nimport { getClient } from './upload/ali'\nimport { getToken } from './upload/qiniu'\nimport { getAsVal, HTMLFormat, validatenull, uuid } from './upload/util'\nimport Plugin from './plugin.js'\nimport E from 'wangeditor'\nexport default {\n  name: 'AvueUeditor',\n  props: {\n    data: {\n      type: Object,\n      default: () => {\n        return {}\n      },\n    },\n    headers: {\n      type: Object,\n      default: () => {\n        return {}\n      },\n    },\n    customConfig: {\n      type: Object,\n      default: () => {\n        return {}\n      },\n    },\n    propsHttp: {\n      type: Object,\n      default: () => {\n        return {}\n      },\n    },\n    options: {\n      type: Object,\n      default: () => {\n        return {}\n      },\n    },\n    ali: {\n      type: Object,\n      default: () => {\n        return {}\n      },\n    },\n    qiniu: {\n      type: Object,\n      default: () => {\n        return {}\n      },\n    },\n    oss: String,\n    action: String,\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    value: {\n      type: String,\n      default: '',\n    },\n    placeholder: {\n      type: String,\n      default: ''\n    }\n  },\n  data () {\n    return {\n      id: 'avue-ueditor-' + uuid(),\n      text: '',\n      html: '',\n      show: false,\n      editor: '',\n    }\n  },\n  computed: {\n    fileName () {\n      return this.propsHttp.fileName || 'file'\n    },\n    homeUrl () {\n      return this.propsHttp.home || ''\n    },\n    resKey () {\n      return this.propsHttp.res\n    },\n    domId () {\n      return '#' + this.id\n    },\n    imgFlag () {\n      return this.img.url == ''\n    },\n    isImg () {\n      return this.img.obj.src\n    },\n    urlKey () {\n      return this.propsHttp.url || 'url'\n    },\n    isHtml () {\n      return validatenull(this.customConfig.showHtml) ? true : this.customConfig.showHtml\n    },\n    isQiniuOSS () {\n      return this.oss === 'qiniu'\n    },\n    isAliOSS () {\n      return this.oss === 'ali'\n    }\n  },\n  watch: {\n    disabled (val) {\n      if (val) {\n        this.editor.disable()\n      } else {\n        this.editor.enable()\n      }\n    },\n    text (val) {\n      this.text = HTMLFormat(val)\n      this.editor.txt.html(this.text)\n      this.$emit('input', this.text)\n      this.$emit('change', this.text)\n    },\n    value (newVal) {\n      this.text = newVal\n    },\n  },\n  mounted () {\n    this.initEdit()\n  },\n  methods: {\n    initEdit () {\n      this.editor = new E(this.domId)\n      if (this.isHtml) {\n        E.registerMenu('Plugin', Plugin(this))\n      }\n      this.editor.config.zIndex = 100\n      this.editor.config.menuTooltipPosition = 'down'\n      this.editor.config.placeholder = this.placeholder\n      this.editor.config.showFullScreen = true\n      this.editor.config.onfocus = () => {\n        this.$emit('focus', this.text)\n      }\n      this.editor.config.onblur = (html) => {\n        this.$emit('blur', html)\n      }\n      this.editor.config.onchange = (html) => {\n        this.text = HTMLFormat(html)\n        this.$emit('input', this.text)\n        this.$emit('change', this.text)\n      }\n      this.editor.config.emotions = [\n        {\n          title: 'emoji',  // tab 的标题\n          type: 'emoji', // 'emoji' / 'image'\n          // emoji 表情，content 是一个数组即可\n          content: '😀 😃 😄 😁 😆 😅 😂 😊 😇 🙂 🙃 😉 😓 😪 😴 🙄 🤔 😬 🤐'.split(/\\s/),\n        }\n      ]\n      this.initUploadImg()\n      this.editor.config = Object.assign(\n        this.editor.config,\n        this.customConfig\n      )\n      this.editor.create()\n      if (this.disabled === true) this.editor.disable()\n      this.editor.txt.html(this.value)\n    },\n    initUploadImg () {\n      const callback = (file, insert) => {\n        this.uploadFile(file[0]).then((res) => {\n          insert(res)\n        })\n      }\n      this.editor.config.customUploadVideo = callback\n      this.editor.config.customUploadImg = callback\n    },\n    uploadFile (file) {\n      return new Promise((resolve, reject) => {\n        const headers = Object.assign(this.headers, {\n          'Content-Type': 'multipart/form-data',\n        })\n        let oss_config = {}\n        let client\n        let param = new FormData()\n        let url = this.action\n        param.append(this.fileName, file)\n        Object.keys(this.data).forEach(ele => {\n          param.append(ele, this.data[ele])\n        })\n        if (this.isQiniuOSS) {\n          oss_config = this.qiniu\n          const token = getToken(oss_config.AK, oss_config.SK, {\n            scope: oss_config.scope,\n            deadline:\n              new Date().getTime() + oss_config.deadline * 3600,\n          })\n          param.append('token', token)\n          url = 'http://up.qiniu.com/'\n        } else if (this.isAliOSS) {\n          oss_config = this.ali\n          client = getClient({\n            region: oss_config.region,\n            endpoint: oss_config.endpoint,\n            accessKeyId: oss_config.accessKeyId,\n            accessKeySecret: oss_config.accessKeySecret,\n            bucket: oss_config.bucket,\n          })\n        }\n        (() => {\n          if (this.isAliOSS) {\n            return client.put(file.name, file)\n          } else {\n            return this.$axios.post(url, param, { headers })\n          }\n        })()\n          .then((res) => {\n            let list = {}\n            var result = ''\n            if (this.isAliOSS) {\n              list = res\n              result = list.url\n            } else if (this.isQiniuOSS) {\n              list = res.data\n              list.key = oss_config.url + list.key\n              result = list.key\n            } else {\n              if (typeof (this.resKey) === 'function') {\n                list = this.resKey(res.data);\n              } else {\n                list = getAsVal(res.data, this.resKey);\n                list = list[this.urlKey]\n              }\n            }\n            var html = this.homeUrl + list\n            resolve(html)\n          })\n          .catch((err) => {\n            reject(err)\n          })\n      })\n    },\n    getUEContent () {\n      return this.editor.txt.html()\n    }\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAcfile":"index.vue","sourceRoot":"node_modules/avue-plugin-ueditor/packages/ueditor/src","sourcesContent":["<template>\n  <div class=\"avue-ueditor\">\n    <div :id=\"id\" />\n    <div v-if=\"show\"\n         class=\"wangEditor_html-content\">\n      <div class=\"wangEditor_html-header\">\n        <span class=\"wangEditor_html-close\"\n              @click=\"show=false\">x</span>\n      </div>\n      <textarea v-model=\"text\" />\n    </div>\n  </div>\n</template>\n<script>\nimport { getClient } from './upload/ali'\nimport { getToken } from './upload/qiniu'\nimport { getAsVal, HTMLFormat, validatenull, uuid } from './upload/util'\nimport Plugin from './plugin.js'\nimport E from 'wangeditor'\nexport default {\n  name: 'AvueUeditor',\n  props: {\n    data: {\n      type: Object,\n      default: () => {\n        return {}\n      },\n    },\n    headers: {\n      type: Object,\n      default: () => {\n        return {}\n      },\n    },\n    customConfig: {\n      type: Object,\n      default: () => {\n        return {}\n      },\n    },\n    propsHttp: {\n      type: Object,\n      default: () => {\n        return {}\n      },\n    },\n    options: {\n      type: Object,\n      default: () => {\n        return {}\n      },\n    },\n    ali: {\n      type: Object,\n      default: () => {\n        return {}\n      },\n    },\n    qiniu: {\n      type: Object,\n      default: () => {\n        return {}\n      },\n    },\n    oss: String,\n    action: String,\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    value: {\n      type: String,\n      default: '',\n    },\n    placeholder: {\n      type: String,\n      default: ''\n    }\n  },\n  data () {\n    return {\n      id: 'avue-ueditor-' + uuid(),\n      text: '',\n      html: '',\n      show: false,\n      editor: '',\n    }\n  },\n  computed: {\n    fileName () {\n      return this.propsHttp.fileName || 'file'\n    },\n    homeUrl () {\n      return this.propsHttp.home || ''\n    },\n    resKey () {\n      return this.propsHttp.res\n    },\n    domId () {\n      return '#' + this.id\n    },\n    imgFlag () {\n      return this.img.url == ''\n    },\n    isImg () {\n      return this.img.obj.src\n    },\n    urlKey () {\n      return this.propsHttp.url || 'url'\n    },\n    isHtml () {\n      return validatenull(this.customConfig.showHtml) ? true : this.customConfig.showHtml\n    },\n    isQiniuOSS () {\n      return this.oss === 'qiniu'\n    },\n    isAliOSS () {\n      return this.oss === 'ali'\n    }\n  },\n  watch: {\n    disabled (val) {\n      if (val) {\n        this.editor.disable()\n      } else {\n        this.editor.enable()\n      }\n    },\n    text (val) {\n      this.text = HTMLFormat(val)\n      this.editor.txt.html(this.text)\n      this.$emit('input', this.text)\n      this.$emit('change', this.text)\n    },\n    value (newVal) {\n      this.text = newVal\n    },\n  },\n  mounted () {\n    this.initEdit()\n  },\n  methods: {\n    initEdit () {\n      this.editor = new E(this.domId)\n      if (this.isHtml) {\n        E.registerMenu('Plugin', Plugin(this))\n      }\n      this.editor.config.zIndex = 100\n      this.editor.config.menuTooltipPosition = 'down'\n      this.editor.config.placeholder = this.placeholder\n      this.editor.config.showFullScreen = true\n      this.editor.config.onfocus = () => {\n        this.$emit('focus', this.text)\n      }\n      this.editor.config.onblur = (html) => {\n        this.$emit('blur', html)\n      }\n      this.editor.config.onchange = (html) => {\n        this.text = HTMLFormat(html)\n        this.$emit('input', this.text)\n        this.$emit('change', this.text)\n      }\n      this.editor.config.emotions = [\n        {\n          title: 'emoji',  // tab 的标题\n          type: 'emoji', // 'emoji' / 'image'\n          // emoji 表情，content 是一个数组即可\n          content: '😀 😃 😄 😁 😆 😅 😂 😊 😇 🙂 🙃 😉 😓 😪 😴 🙄 🤔 😬 🤐'.split(/\\s/),\n        }\n      ]\n      this.initUploadImg()\n      this.editor.config = Object.assign(\n        this.editor.config,\n        this.customConfig\n      )\n      this.editor.create()\n      if (this.disabled === true) this.editor.disable()\n      this.editor.txt.html(this.value)\n    },\n    initUploadImg () {\n      const callback = (file, insert) => {\n        this.uploadFile(file[0]).then((res) => {\n          insert(res)\n        })\n      }\n      this.editor.config.customUploadVideo = callback\n      this.editor.config.customUploadImg = callback\n    },\n    uploadFile (file) {\n      return new Promise((resolve, reject) => {\n        const headers = Object.assign(this.headers, {\n          'Content-Type': 'multipart/form-data',\n        })\n        let oss_config = {}\n        let client\n        let param = new FormData()\n        let url = this.action\n        param.append(this.fileName, file)\n        Object.keys(this.data).forEach(ele => {\n          param.append(ele, this.data[ele])\n        })\n        if (this.isQiniuOSS) {\n          oss_config = this.qiniu\n          const token = getToken(oss_config.AK, oss_config.SK, {\n            scope: oss_config.scope,\n            deadline:\n              new Date().getTime() + oss_config.deadline * 3600,\n          })\n          param.append('token', token)\n          url = 'http://up.qiniu.com/'\n        } else if (this.isAliOSS) {\n          oss_config = this.ali\n          client = getClient({\n            region: oss_config.region,\n            endpoint: oss_config.endpoint,\n            accessKeyId: oss_config.accessKeyId,\n            accessKeySecret: oss_config.accessKeySecret,\n            bucket: oss_config.bucket,\n          })\n        }\n        (() => {\n          if (this.isAliOSS) {\n            return client.put(file.name, file)\n          } else {\n            return this.$axios.post(url, param, { headers })\n          }\n        })()\n          .then((res) => {\n            let list = {}\n            var result = ''\n            if (this.isAliOSS) {\n              list = res\n              result = list.url\n            } else if (this.isQiniuOSS) {\n              list = res.data\n              list.key = oss_config.url + list.key\n              result = list.key\n            } else {\n              if (typeof (this.resKey) === 'function') {\n                list = this.resKey(res.data);\n              } else {\n                list = getAsVal(res.data, this.resKey);\n                list = list[this.urlKey]\n              }\n            }\n            var html = this.homeUrl + list\n            resolve(html)\n          })\n          .catch((err) => {\n            reject(err)\n          })\n      })\n    },\n    getUEContent () {\n      return this.editor.txt.html()\n    }\n  }\n}\n</script>\n<style>\n.wangEditor_html {\n  color: #999;\n  font-size: 14px;\n  font-weight: bold;\n}\n.wangEditor_html-content {\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 2048;\n  padding: 0 20px 20px 20px;\n  background-color: #fff;\n  box-sizing: border-box;\n}\n.wangEditor_html-content textarea {\n  width: 100%;\n  height: 100%;\n  border-color: #ccc;\n  border-radius: 5px;\n  padding: 5px;\n}\n.wangEditor_html-header {\n  padding: 5px 0;\n  text-align: right;\n}\n.wangEditor_html-close {\n  color: #333;\n  font-weight: bold;\n  font-size: 22px;\n}\n</style>\n"]}]}