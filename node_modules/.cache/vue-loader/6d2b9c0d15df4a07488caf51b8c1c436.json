{"remainingRequest":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workCode\\xiaoE\\大圣系统源码\\admin\\src\\views\\goods\\goods.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\src\\views\\goods\\goods.vue","mtime":1675311462000},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678778409044},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1678778390429},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678778409044},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1678778410194}],"contextDependencies":[],"result":["\n  import {getDetail, add, update, remove,getList} from \"@/api/goods/goods\";\n  import {mapGetters} from \"vuex\";\n  import Layout from \"../../router/views\";\n  import {dictionary} from \"../../api/system/dict\";\n  import {tabs} from \"../../api/goods/goods\";\n\n  export default {\n    data() {\n      return {\n        table_key:0,\n        form: {},\n        query: {},\n        loading: true,\n        activeName:\"全部\",\n        page: {\n          pageSize: 10,\n          currentPage: 1,\n          total: 0\n        },\n        tabs: {},\n        selectionList: [],\n        option: {\n          height: 'auto',\n          calcHeight: 210,\n          searchShow: true,\n          searchMenuSpan: 6,\n          addBtn:false,\n          tip: false,\n          border: true,\n          index: false,\n          viewBtn: false,\n          editBtn:false,\n          delBtn:false,\n          selection: true,\n          column: [\n            {\n              label: \"商品编号\",\n              slot: true,\n              prop: \"id\",\n              width: 160,\n            },\n            {\n              label: \"商品名称\",\n              slot: true,\n              prop: \"title\",\n              width: 300,\n            },\n            {\n              label: \"商品类目\",\n              prop: \"categoryName\",\n            },\n            {\n              label: \"租赁方案\",\n              prop: \"plansName\",\n              width: 160,\n            },\n            {\n              label: \"总价系数\",\n              prop: \"totalPricesRate\",\n            },\n            {\n              label: \"上架状态\",\n              prop: \"shelves\",\n              type: \"select\",\n              dicUrl: \"/api/blade-system/dict/dictionary?code=goods_status\",\n              props: {\n                label: \"dictValue\",\n                value: \"dictKey\"\n              },\n            }\n          ]\n        },\n        data: []\n      };\n    },\n    created() {\n      tabs().then(res => {\n        this.tabs = res.data.data\n        console.log(this.tabs)\n      })\n    },\n    computed: {\n      ...mapGetters([\"permission\"]),\n      permissionList() {\n        return {\n          addBtn: this.vaildData(this.permission.goods_add, false),\n          viewBtn: this.vaildData(this.permission.goods_view, false),\n          delBtn: this.vaildData(this.permission.goods_delete, false),\n          editBtn: this.vaildData(this.permission.goods_edit, false)\n        };\n      },\n      ids() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids.join(\",\");\n      }\n    },\n    methods: {\n      getTab(item){\n        return \" \"+item.keyName+\"（\"+item.count+\"）\"\n        // return key+\"（\"+item[key].count+\"）\"\n      },\n      photo(url){\n        return this.$store.state.common.cloudDomain+url;\n      },\n      rowSave(row, done, loading) {\n        add(row).then(() => {\n          done();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      handleAdd(){\n        this.$router.push({\n          path: \"/goods/add/index\",\n          query: {\n            add:null\n          },\n        });\n      },\n      rowUpdate(row, index, done, loading) {\n        update(row).then(() => {\n          done();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowDel(row) {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(row.id);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n      handleDelete() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(this.ids);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      rowView(row,index){\n        console.log(row,index)\n        this.$router.push({\n          path: \"/goods/view/index\",\n          query: {\n            goodsId : row.id,\n          },\n        });\n      },\n      rowEdit(row,index){\n        this.$router.push({\n          path: \"/goods/add/index\",\n          query: {\n            goodsId : row.id,\n            edit:null\n          },\n        });\n      },\n      searchReset() {\n        this.query = {};\n        this.onLoad(this.page);\n      },\n      searchChange(params, done) {\n        this.query = params;\n        this.page.currentPage = 1;\n        this.onLoad(this.page, params);\n        done();\n      },\n      selectionChange(list) {\n        this.selectionList = list;\n      },\n      selectionClear() {\n        this.selectionList = [];\n        this.$refs.crud.toggleSelection();\n      },\n      currentChange(currentPage){\n        this.page.currentPage = currentPage;\n      },\n      sizeChange(pageSize){\n        this.page.pageSize = pageSize;\n      },\n      handleClick(tab, event) {\n        this.page.currentPage = 1\n        if (this.tabs[tab.index].shelves){\n          this.query = {shelves:this.tabs[tab.index].shelves};\n        }else{\n          this.query = {};\n        }\n\n        this.table_key = new Date().getTime();\n      },\n      onLoad(page, params = {}) {\n        this.loading = true;\n        console.log(this.query)\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n          const data = res.data.data;\n          this.page.total = data.total;\n          this.data = data.records;\n          this.loading = false;\n          this.selectionClear();\n        });\n      }\n    }\n  };\n",{"version":3,"sources":["goods.vue"],"names":[],"mappingsfile":"goods.vue","sourceRoot":"src/views/goods","sourcesContent":["<template>\n  <basic-container>\n    <el-tabs v-model=\"activeName\" @tab-click=\"handleClick\">\n      <el-tab-pane :label=\"getTab(item)\" :name=\"item.keyName\" v-for=\"(item,index) of tabs\"></el-tab-pane>\n    </el-tabs>\n    <avue-crud :option=\"option\"\n               :table-loading=\"loading\"\n               :data=\"data\"\n               :page=\"page\"\n               :key=\"table_key\"\n               :permission=\"permissionList\"\n               v-model=\"form\"\n               ref=\"crud\"\n               @row-update=\"rowUpdate\"\n               @row-save=\"rowSave\"\n               @row-del=\"rowDel\"\n               @search-change=\"searchChange\"\n               @search-reset=\"searchReset\"\n               @selection-change=\"selectionChange\"\n               @current-change=\"currentChange\"\n               @size-change=\"sizeChange\"\n               @on-load=\"onLoad\">\n      <template slot=\"menuLeft\">\n        <el-button type=\"primary\"\n                   size=\"small\"\n                   icon=\"el-icon-plus\"\n                   v-if=\"permission.goods_add\"\n                   @click=\"handleAdd\">新增\n        </el-button>\n        <el-button type=\"danger\"\n                   size=\"small\"\n                   icon=\"el-icon-delete\"\n                   plain\n                   v-if=\"permission.goods_delete\"\n                   @click=\"handleDelete\">删 除\n        </el-button>\n      </template>\n      <template #menu=\"{row,index,size}\">\n        <el-button type=\"text\" icon=\"el-icon-view\" @click=\"rowView(row,index)\">查看</el-button>\n        <el-button type=\"text\" icon=\"el-icon-edit\"  @click=\"rowEdit(row,index)\">编辑</el-button>\n        <el-button type=\"text\" icon=\"el-icon-delete\" @click=\"$refs.crud.rowDel(row,index)\">删除</el-button>\n      </template>\n      <template slot=\"title\" slot-scope=\"scope\">\n        <div style=\"display: inline-flex;\" v-if=\"scope.row.photoCover\">\n          <img :src=\"photo(scope.row.photoCover)\" style=\"width: 100px;height: auto\"/>\n          <span style=\"margin-left: 10px\">{{ scope.label }}</span>\n        </div>\n      </template>\n      <template slot=\"plansName\" slot-scope=\"{row,index}\">\n        <div v-for=\"tag in row.plansName.split(',')\" >\n          <el-tag v-if=\"row.plansName.length>0\" style=\"margin-top: 5px;margin-bottom: 5px\">{{tag}}</el-tag>\n        </div>\n      </template>\n    </avue-crud>\n  </basic-container>\n</template>\n\n<script>\n  import {getDetail, add, update, remove,getList} from \"@/api/goods/goods\";\n  import {mapGetters} from \"vuex\";\n  import Layout from \"../../router/views\";\n  import {dictionary} from \"../../api/system/dict\";\n  import {tabs} from \"../../api/goods/goods\";\n\n  export default {\n    data() {\n      return {\n        table_key:0,\n        form: {},\n        query: {},\n        loading: true,\n        activeName:\"全部\",\n        page: {\n          pageSize: 10,\n          currentPage: 1,\n          total: 0\n        },\n        tabs: {},\n        selectionList: [],\n        option: {\n          height: 'auto',\n          calcHeight: 210,\n          searchShow: true,\n          searchMenuSpan: 6,\n          addBtn:false,\n          tip: false,\n          border: true,\n          index: false,\n          viewBtn: false,\n          editBtn:false,\n          delBtn:false,\n          selection: true,\n          column: [\n            {\n              label: \"商品编号\",\n              slot: true,\n              prop: \"id\",\n              width: 160,\n            },\n            {\n              label: \"商品名称\",\n              slot: true,\n              prop: \"title\",\n              width: 300,\n            },\n            {\n              label: \"商品类目\",\n              prop: \"categoryName\",\n            },\n            {\n              label: \"租赁方案\",\n              prop: \"plansName\",\n              width: 160,\n            },\n            {\n              label: \"总价系数\",\n              prop: \"totalPricesRate\",\n            },\n            {\n              label: \"上架状态\",\n              prop: \"shelves\",\n              type: \"select\",\n              dicUrl: \"/api/blade-system/dict/dictionary?code=goods_status\",\n              props: {\n                label: \"dictValue\",\n                value: \"dictKey\"\n              },\n            }\n          ]\n        },\n        data: []\n      };\n    },\n    created() {\n      tabs().then(res => {\n        this.tabs = res.data.data\n        console.log(this.tabs)\n      })\n    },\n    computed: {\n      ...mapGetters([\"permission\"]),\n      permissionList() {\n        return {\n          addBtn: this.vaildData(this.permission.goods_add, false),\n          viewBtn: this.vaildData(this.permission.goods_view, false),\n          delBtn: this.vaildData(this.permission.goods_delete, false),\n          editBtn: this.vaildData(this.permission.goods_edit, false)\n        };\n      },\n      ids() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids.join(\",\");\n      }\n    },\n    methods: {\n      getTab(item){\n        return \" \"+item.keyName+\"（\"+item.count+\"）\"\n        // return key+\"（\"+item[key].count+\"）\"\n      },\n      photo(url){\n        return this.$store.state.common.cloudDomain+url;\n      },\n      rowSave(row, done, loading) {\n        add(row).then(() => {\n          done();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      handleAdd(){\n        this.$router.push({\n          path: \"/goods/add/index\",\n          query: {\n            add:null\n          },\n        });\n      },\n      rowUpdate(row, index, done, loading) {\n        update(row).then(() => {\n          done();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowDel(row) {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(row.id);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n      handleDelete() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(this.ids);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      rowView(row,index){\n        console.log(row,index)\n        this.$router.push({\n          path: \"/goods/view/index\",\n          query: {\n            goodsId : row.id,\n          },\n        });\n      },\n      rowEdit(row,index){\n        this.$router.push({\n          path: \"/goods/add/index\",\n          query: {\n            goodsId : row.id,\n            edit:null\n          },\n        });\n      },\n      searchReset() {\n        this.query = {};\n        this.onLoad(this.page);\n      },\n      searchChange(params, done) {\n        this.query = params;\n        this.page.currentPage = 1;\n        this.onLoad(this.page, params);\n        done();\n      },\n      selectionChange(list) {\n        this.selectionList = list;\n      },\n      selectionClear() {\n        this.selectionList = [];\n        this.$refs.crud.toggleSelection();\n      },\n      currentChange(currentPage){\n        this.page.currentPage = currentPage;\n      },\n      sizeChange(pageSize){\n        this.page.pageSize = pageSize;\n      },\n      handleClick(tab, event) {\n        this.page.currentPage = 1\n        if (this.tabs[tab.index].shelves){\n          this.query = {shelves:this.tabs[tab.index].shelves};\n        }else{\n          this.query = {};\n        }\n\n        this.table_key = new Date().getTime();\n      },\n      onLoad(page, params = {}) {\n        this.loading = true;\n        console.log(this.query)\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n          const data = res.data.data;\n          this.page.total = data.total;\n          this.data = data.records;\n          this.loading = false;\n          this.selectionClear();\n        });\n      }\n    }\n  };\n</script>\n\n<style scoped=\"scoped\">\n\n</style>\n"]}]}