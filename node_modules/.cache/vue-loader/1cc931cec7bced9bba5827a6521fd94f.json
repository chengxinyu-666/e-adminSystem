{"remainingRequest":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workCode\\xiaoE\\大圣系统源码\\admin\\src\\views\\parameter\\entryformtemplate.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\src\\views\\parameter\\entryformtemplate.vue","mtime":1677231246000},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678778409044},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1678778390429},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678778409044},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1678778410194}],"contextDependencies":[],"result":["\n  import {getList, getDetail, add, update, remove} from \"@/api/parameter/entryformtemplate\";\n  import {mapGetters} from \"vuex\";\n\n  export default {\n    data() {\n      return {\n        form: {content:[]},\n        query: {},\n        loading: true,\n        inputVisible: {},\n        inputValue: '',\n        options: [{\n          value: 1,\n          label: '文本输入框'\n        }, {\n          value: 2,\n          label: '单选'\n        }, {\n          value: 5,\n          label: '多选'\n        }, {\n          value: 4,\n          label: '数字输入框'\n        }, {\n          value: 0,\n          label: '函数'\n        }, {\n          value: -1,\n          label: '编辑不显示'\n        }],\n        page: {\n          pageSize: 10,\n          currentPage: 1,\n          total: 0\n        },\n        selectionList: [],\n        option: {\n          labelWidth: 120,\n          height: 'auto',\n          calcHeight: 210,\n          searchShow: true,\n          searchMenuSpan: 6,\n          tip: false,\n          border: true,\n          index: true,\n          viewBtn: true,\n          selection: true,\n          column: [\n            {\n              label: \"模板名称\",\n              prop: \"title\",\n              span:24,\n              rules: [{\n                required: true,\n                message: \"请输入进件单模板\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"进件单模板\",\n              prop: \"content\",\n              hide: true,\n              slot: true,\n              rules: [{\n                required: true,\n                message: \"请输入进件单模板\",\n                trigger: \"blur\"\n              }]\n            },\n          ]\n        },\n        data: []\n      };\n    },\n    computed: {\n      ...mapGetters([\"permission\"]),\n      permissionList() {\n        return {\n          addBtn: this.vaildData(this.permission.entryformtemplate_add, false),\n          viewBtn: this.vaildData(this.permission.entryformtemplate_view, false),\n          delBtn: this.vaildData(this.permission.entryformtemplate_delete, false),\n          editBtn: this.vaildData(this.permission.entryformtemplate_edit, false)\n        };\n      },\n      ids() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids.join(\",\");\n      }\n    },\n    methods: {\n      addItem(data){\n        data.push({\n          \"title\": \"\",\n          \"value\": []\n        })\n      },\n      addatr(data){\n        data.push({\n          \"edit\": false,\n          \"type\": 1,\n          \"title\": \"\",\n          \"value\": \"\",\n          \"option\": []\n        })\n      },\n      removeItem(data,item){\n        data.splice(item,1)\n      },\n      change(one,item){\n        if (item.value == 5){\n          one.value = []\n        }\n        console.log(one,item)\n      },\n      handleClose(tag,one) {\n        console.log(\"删除\",JSON.stringify(one),one,tag)\n        one.splice(one.indexOf(tag), 1);\n        console.log(\"删除\",JSON.stringify(one),one,tag)\n      },\n\n      showInput(one) {\n        one.edit= true;\n        console.log(one)\n        this.$nextTick(_ => {\n          for (const x in this.$refs) {\n            if (x == one.title){\n              this.$refs[x][0].$refs.input.focus();\n              return\n            }\n          }\n        });\n      },\n      handleInputConfirm(one) {\n        let inputValue = this.inputValue;\n        if (inputValue) {\n          console.log(one.option)\n          if(!(one.option instanceof Array)){\n            one.option = []\n          }\n          one.option.push(inputValue);\n        }\n        one.edit = false;\n        this.inputValue = '';\n      },\n      rowSave(row, done, loading) {\n        let data = Object.assign({},row);\n        data.content = JSON.stringify(row.content)\n        add(data).then(() => {\n          done();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowUpdate(row, index, done, loading) {\n        let data = Object.assign({},row);\n        data.content = JSON.stringify(row.content)\n        update(data).then(() => {\n          done();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowDel(row) {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(row.id);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n      handleDelete() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(this.ids);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      beforeOpen(done, type) {\n        if ([\"edit\", \"view\"].includes(type)) {\n          getDetail(this.form.id).then(res => {\n            let one = res.data.data;\n            one.content = JSON.parse(one.content);\n            this.form = one;\n          });\n        }\n        done();\n      },\n      searchReset() {\n        this.query = {};\n        this.onLoad(this.page);\n      },\n      searchChange(params, done) {\n        this.query = params;\n        this.page.currentPage = 1;\n        this.onLoad(this.page, params);\n        done();\n      },\n      selectionChange(list) {\n        this.selectionList = list;\n      },\n      selectionClear() {\n        this.selectionList = [];\n        this.$refs.crud.toggleSelection();\n      },\n      currentChange(currentPage){\n        this.page.currentPage = currentPage;\n      },\n      sizeChange(pageSize){\n        this.page.pageSize = pageSize;\n      },\n      onLoad(page, params = {}) {\n        this.loading = true;\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n          const data = res.data.data;\n          this.page.total = data.total;\n          for (const item of data.records) {\n            item.content = JSON.parse(item.content);\n          }\n          this.data = data.records;\n          this.loading = false;\n          this.selectionClear();\n        });\n      }\n    }\n  };\n",{"version":3,"sources":["entryformtemplate.vue"],"names":[],"mappings":";AAofile":"entryformtemplate.vue","sourceRoot":"src/views/parameter","sourcesContent":["<template>\n  <basic-container>\n    <avue-crud :option=\"option\"\n               :table-loading=\"loading\"\n               :data=\"data\"\n               :page=\"page\"\n               :permission=\"permissionList\"\n               :before-open=\"beforeOpen\"\n               v-model=\"form\"\n               ref=\"crud\"\n               @row-update=\"rowUpdate\"\n               @row-save=\"rowSave\"\n               @row-del=\"rowDel\"\n               @search-change=\"searchChange\"\n               @search-reset=\"searchReset\"\n               @selection-change=\"selectionChange\"\n               @current-change=\"currentChange\"\n               @size-change=\"sizeChange\"\n               @on-load=\"onLoad\">\n      <template slot=\"menuLeft\">\n        <el-button type=\"danger\"\n                   size=\"small\"\n                   icon=\"el-icon-delete\"\n                   plain\n                   v-if=\"permission.entryformtemplate_delete\"\n                   @click=\"handleDelete\">删 除\n        </el-button>\n      </template>\n      <template slot-scope=\"{type,disabled}\" slot=\"contentForm\">\n        <div style=\"border: 1px solid rgba(136, 136, 136, 1.0);padding: 10px;text-align: center;width: 800px\">\n          <div v-for=\"(item,index) in form.content\" style=\"margin-bottom: 20px\">\n            <div style=\"display: flex;margin-top: 10px\">\n              <span>类型名称:</span>\n              <el-input v-model=\"item.title\" style=\"flex: 1;margin-left: 10px;margin-right: 10px\" placeholder=\"请输入类型名称\"></el-input>\n              <el-button @click=\"removeItem(form.content,index);\">删除类型</el-button>\n            </div>\n            <div v-for=\"(one,n) in item.value\" style=\"margin-top: 20px;padding-bottom:10px;border-bottom: 1px solid #dddddd;\">\n              <div style=\"display: flex;width: auto\">\n                <span>子项名称:</span>\n                <el-input v-model=\"one.title\" placeholder=\"请输入名称\" style=\"width: 40%;margin-left: 10px\"></el-input>\n                <span style=\"margin-left: 10px\">子项类型:</span>\n                <el-select v-model=\"one.type\" placeholder=\"请选择\" style=\"flex: 1 !important;margin-left: 10px;margin-right: 10px\">\n                  <el-option\n                    v-for=\"item in options\"\n                    @click.native=\"change(one,item)\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\">\n                  </el-option>\n                </el-select>\n                <el-button @click=\"removeItem(item.value,n);\">删除子项</el-button>\n              </div>\n              <div v-if=\"one.type == -1\" style=\"width: 100%;display: flex;margin-top: 5px\">\n                <span>默认数据:</span><el-input v-model=\"one.value\" placeholder=\"请输入默认值\" style=\"width: 40%;margin-left: 10px\"></el-input>\n              </div>\n              <div v-if=\"one.type == 1\" style=\"width: 100%;display: flex;margin-top: 5px\">\n                <span>默认数据:</span><el-input v-model=\"one.value\" placeholder=\"请输入默认值\" style=\"width: 40%;margin-left: 10px\"></el-input>\n              </div>\n              <div v-else-if=\"one.type == 0\" style=\"width: 100%;display: flex;margin-top: 5px\">\n                <span>输入函数:</span><el-input v-model=\"one.val\" placeholder=\"请输入函数\" style=\"width: 40%;margin-left: 10px\"></el-input>\n              </div>\n              <div v-else-if=\"one.type == 2\" style=\"width: 100%;display: flex;margin-top: 5px\">\n                <span>输入选项:</span>\n                <div style=\"margin-left: 10px;display: flex;flex-direction: row;flex-wrap: wrap;\">\n                  <el-tag\n                    :key=\"tag\"\n                    v-if=\"one.option\"\n                    v-for=\"tag in one.option\"\n                    closable\n                    style=\"margin-right: 5px\"\n                    :disable-transitions=\"false\"\n                    @close=\"handleClose(tag,one.option)\">\n                    {{tag}}\n                  </el-tag>\n                  <el-input\n                    class=\"input-new-tag\"\n                    v-if=\"one.edit\"\n                    v-model=\"inputValue\"\n                    :ref=\"one.title\"\n                    size=\"small\"\n                    style=\"width: 90px;\"\n                    @keyup.enter.native=\"handleInputConfirm(one)\"\n                    @blur=\"handleInputConfirm(one)\"\n                  >\n                  </el-input>\n                  <el-button v-else class=\"button-new-tag\" size=\"small\" @click=\"showInput(one)\">添加值</el-button>\n                </div>\n                <span style=\"margin-left: 10px\">选择默认值:</span>\n                <el-select v-model=\"one.value\" placeholder=\"请选择\" style=\"flex: 1 !important;margin-left: 10px\">\n                  <el-option\n                    v-for=\"item in one.option\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                  </el-option>\n                </el-select>\n              </div>\n              <div v-else-if=\"one.type == 5\" style=\"width: 100%;display: flex;margin-top: 5px\">\n                <span>输入选项:</span>\n                <div style=\"margin-left: 10px;display: flex\">\n                  <el-tag\n                    :key=\"tag\"\n                    v-for=\"tag in one.option\"\n                    closable\n                    style=\"margin-right: 5px\"\n                    :disable-transitions=\"false\"\n                    @close=\"handleClose(tag,one.option)\">\n                    {{tag}}\n                  </el-tag>\n                  <el-input\n                    class=\"input-new-tag\"\n                    v-if=\"one.edit\"\n                    v-model=\"inputValue\"\n                    :ref=\"one.title\"\n                    size=\"small\"\n                    style=\"width: 90px;\"\n                    @keyup.enter.native=\"handleInputConfirm(one)\"\n                    @blur=\"handleInputConfirm(one)\"\n                  >\n                  </el-input>\n                  <el-button v-else class=\"button-new-tag\" size=\"small\" @click=\"showInput(one)\">添加值</el-button>\n                </div>\n                <span style=\"margin-left: 10px\">选择默认值:</span>\n                <el-select v-model=\"one.value\" multiple placeholder=\"请选择\" style=\"flex: 1 !important;margin-left: 10px\">\n                  <el-option\n                    v-for=\"item in one.option\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                  </el-option>\n                </el-select>\n              </div>\n            </div>\n            <div style=\"text-align: center;margin-top: 10px;\">\n              <el-button @click=\"addatr(item.value)\">新增子项</el-button>\n            </div>\n          </div>\n          <el-button @click=\"addItem(form.content)\">新增类别</el-button>\n        </div>\n      </template>\n      <template slot=\"content\" slot-scope=\"{row,index}\">\n        <div ></div>\n      </template>\n    </avue-crud>\n  </basic-container>\n</template>\n\n<script>\n  import {getList, getDetail, add, update, remove} from \"@/api/parameter/entryformtemplate\";\n  import {mapGetters} from \"vuex\";\n\n  export default {\n    data() {\n      return {\n        form: {content:[]},\n        query: {},\n        loading: true,\n        inputVisible: {},\n        inputValue: '',\n        options: [{\n          value: 1,\n          label: '文本输入框'\n        }, {\n          value: 2,\n          label: '单选'\n        }, {\n          value: 5,\n          label: '多选'\n        }, {\n          value: 4,\n          label: '数字输入框'\n        }, {\n          value: 0,\n          label: '函数'\n        }, {\n          value: -1,\n          label: '编辑不显示'\n        }],\n        page: {\n          pageSize: 10,\n          currentPage: 1,\n          total: 0\n        },\n        selectionList: [],\n        option: {\n          labelWidth: 120,\n          height: 'auto',\n          calcHeight: 210,\n          searchShow: true,\n          searchMenuSpan: 6,\n          tip: false,\n          border: true,\n          index: true,\n          viewBtn: true,\n          selection: true,\n          column: [\n            {\n              label: \"模板名称\",\n              prop: \"title\",\n              span:24,\n              rules: [{\n                required: true,\n                message: \"请输入进件单模板\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"进件单模板\",\n              prop: \"content\",\n              hide: true,\n              slot: true,\n              rules: [{\n                required: true,\n                message: \"请输入进件单模板\",\n                trigger: \"blur\"\n              }]\n            },\n          ]\n        },\n        data: []\n      };\n    },\n    computed: {\n      ...mapGetters([\"permission\"]),\n      permissionList() {\n        return {\n          addBtn: this.vaildData(this.permission.entryformtemplate_add, false),\n          viewBtn: this.vaildData(this.permission.entryformtemplate_view, false),\n          delBtn: this.vaildData(this.permission.entryformtemplate_delete, false),\n          editBtn: this.vaildData(this.permission.entryformtemplate_edit, false)\n        };\n      },\n      ids() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids.join(\",\");\n      }\n    },\n    methods: {\n      addItem(data){\n        data.push({\n          \"title\": \"\",\n          \"value\": []\n        })\n      },\n      addatr(data){\n        data.push({\n          \"edit\": false,\n          \"type\": 1,\n          \"title\": \"\",\n          \"value\": \"\",\n          \"option\": []\n        })\n      },\n      removeItem(data,item){\n        data.splice(item,1)\n      },\n      change(one,item){\n        if (item.value == 5){\n          one.value = []\n        }\n        console.log(one,item)\n      },\n      handleClose(tag,one) {\n        console.log(\"删除\",JSON.stringify(one),one,tag)\n        one.splice(one.indexOf(tag), 1);\n        console.log(\"删除\",JSON.stringify(one),one,tag)\n      },\n\n      showInput(one) {\n        one.edit= true;\n        console.log(one)\n        this.$nextTick(_ => {\n          for (const x in this.$refs) {\n            if (x == one.title){\n              this.$refs[x][0].$refs.input.focus();\n              return\n            }\n          }\n        });\n      },\n      handleInputConfirm(one) {\n        let inputValue = this.inputValue;\n        if (inputValue) {\n          console.log(one.option)\n          if(!(one.option instanceof Array)){\n            one.option = []\n          }\n          one.option.push(inputValue);\n        }\n        one.edit = false;\n        this.inputValue = '';\n      },\n      rowSave(row, done, loading) {\n        let data = Object.assign({},row);\n        data.content = JSON.stringify(row.content)\n        add(data).then(() => {\n          done();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowUpdate(row, index, done, loading) {\n        let data = Object.assign({},row);\n        data.content = JSON.stringify(row.content)\n        update(data).then(() => {\n          done();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowDel(row) {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(row.id);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n      handleDelete() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(this.ids);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      beforeOpen(done, type) {\n        if ([\"edit\", \"view\"].includes(type)) {\n          getDetail(this.form.id).then(res => {\n            let one = res.data.data;\n            one.content = JSON.parse(one.content);\n            this.form = one;\n          });\n        }\n        done();\n      },\n      searchReset() {\n        this.query = {};\n        this.onLoad(this.page);\n      },\n      searchChange(params, done) {\n        this.query = params;\n        this.page.currentPage = 1;\n        this.onLoad(this.page, params);\n        done();\n      },\n      selectionChange(list) {\n        this.selectionList = list;\n      },\n      selectionClear() {\n        this.selectionList = [];\n        this.$refs.crud.toggleSelection();\n      },\n      currentChange(currentPage){\n        this.page.currentPage = currentPage;\n      },\n      sizeChange(pageSize){\n        this.page.pageSize = pageSize;\n      },\n      onLoad(page, params = {}) {\n        this.loading = true;\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n          const data = res.data.data;\n          this.page.total = data.total;\n          for (const item of data.records) {\n            item.content = JSON.parse(item.content);\n          }\n          this.data = data.records;\n          this.loading = false;\n          this.selectionClear();\n        });\n      }\n    }\n  };\n</script>\n\n<style scoped>\n  .button-new-tag{\n    height: 32px !important;\n  }\n</style>\n"]}]}