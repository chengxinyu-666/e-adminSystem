{"remainingRequest":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workCode\\xiaoE\\大圣系统源码\\admin\\src\\views\\system\\dict.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\src\\views\\system\\dict.vue","mtime":1675701530000},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678778409044},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1678778390429},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678778409044},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1678778410194}],"contextDependencies":[],"result":["\n  import {add, getDict, getDictTree, getList, remove, update} from \"@/api/system/dict\";\n  import {mapGetters} from \"vuex\";\n\n  export default {\n    data() {\n      return {\n        form: {},\n        selectionList: [],\n        loading: true,\n        query: {},\n        page: {\n          pageSize: 10,\n          currentPage: 1,\n          total: 0\n        },\n        option: {\n          searchShow: true,\n          searchMenuSpan: 6,\n          tip: false,\n          tree: true,\n          border: true,\n          index: true,\n          selection: true,\n          viewBtn: true,\n          menuWidth: 300,\n          column: [\n            {\n              label: \"字典编号\",\n              prop: \"code\",\n              search: true,\n              span: 24,\n              rules: [{\n                required: true,\n                message: \"请输入字典编号\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"字典名称\",\n              prop: \"dictValue\",\n              search: true,\n              rules: [{\n                required: true,\n                message: \"请输入字典名称\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"上级字典\",\n              prop: \"parentId\",\n              type: \"tree\",\n              dicData: [],\n              hide: true,\n              props: {\n                label: \"title\"\n              },\n              rules: [{\n                required: false,\n                message: \"请选择上级字典\",\n                trigger: \"click\"\n              }]\n            },\n            {\n              label: \"字典键值\",\n              prop: \"dictKey\",\n              type: \"number\",\n              rules: [{\n                required: true,\n                message: \"请输入字典键值\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"字典排序\",\n              prop: \"sort\",\n              type: \"number\",\n              rules: [{\n                required: true,\n                message: \"请输入字典排序\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"字典备注\",\n              prop: \"remark\",\n              search: true,\n              span: 24,\n              hide: true,\n            },\n          ]\n        },\n        data: []\n      };\n    },\n    computed: {\n      ...mapGetters([\"userInfo\", \"permission\"]),\n      permissionList() {\n        return {\n          addBtn: this.vaildData(this.permission.dict_add, false),\n          viewBtn: this.vaildData(this.permission.dict_view, false),\n          delBtn: this.vaildData(this.permission.dict_delete, false),\n          editBtn: this.vaildData(this.permission.dict_edit, false)\n        };\n      },\n      ids() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids.join(\",\");\n      }\n    },\n    methods: {\n      handleAdd(row) {\n        this.$refs.crud.value.code = row.code;\n        this.$refs.crud.value.parentId = row.id;\n        this.$refs.crud.option.column.filter(item => {\n          if (item.prop === \"code\") {\n            item.value = row.code;\n            item.addDisabled = true;\n          }\n          if (item.prop === \"parentId\") {\n            item.value = row.id;\n            item.addDisabled = true;\n          }\n        });\n        this.$refs.crud.rowAdd();\n      },\n      rowSave(row, done, loading) {\n        add(row).then(() => {\n          done();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowUpdate(row, index, done, loading) {\n        update(row).then(() => {\n          done();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowDel(row) {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(row.id);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n      searchReset() {\n        this.query = {};\n        this.onLoad(this.page);\n      },\n      searchChange(params, done) {\n        this.query = params;\n        this.page.currentPage = 1;\n        this.onLoad(this.page, params);\n        done();\n      },\n      selectionChange(list) {\n        this.selectionList = list;\n      },\n      handleDelete() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(this.ids);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      beforeOpen(done, type) {\n        if ([\"edit\", \"view\"].includes(type)) {\n          getDict(this.form.id).then(res => {\n            this.form = res.data.data;\n          });\n        }\n        done();\n      },\n      currentChange(currentPage){\n        this.page.currentPage = currentPage;\n      },\n      sizeChange(pageSize){\n        this.page.pageSize = pageSize;\n      },\n      onLoad(page, params = {}) {\n        this.loading = true;\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n          this.data = res.data.data;\n          this.loading = false;\n          getDictTree().then(res => {\n            const column = this.findObject(this.option.column, \"parentId\");\n            column.dicData = res.data.data;\n          });\n        });\n      }\n    }\n  };\n",{"version":3,"sources":["dict.vue"],"names":[],"mappingsfile":"dict.vue","sourceRoot":"src/views/system","sourcesContent":["<template>\n  <basic-container>\n    <avue-crud :option=\"option\"\n               :table-loading=\"loading\"\n               :data=\"data\"\n               ref=\"crud\"\n               v-model=\"form\"\n               :permission=\"permissionList\"\n               :before-open=\"beforeOpen\"\n               @row-del=\"rowDel\"\n               @row-update=\"rowUpdate\"\n               @row-save=\"rowSave\"\n               @search-change=\"searchChange\"\n               @search-reset=\"searchReset\"\n               @selection-change=\"selectionChange\"\n               @current-change=\"currentChange\"\n               @size-change=\"sizeChange\"\n               @on-load=\"onLoad\">\n      <template slot=\"menuLeft\">\n        <el-button type=\"danger\"\n                   size=\"small\"\n                   icon=\"el-icon-delete\"\n                   v-if=\"permission.dict_delete\"\n                   plain\n                   @click=\"handleDelete\">删 除\n        </el-button>\n      </template>\n      <template slot-scope=\"scope\" slot=\"menu\">\n        <el-button\n          type=\"text\"\n          icon=\"el-icon-circle-plus-outline\"\n          size=\"small\"\n          @click.stop=\"handleAdd(scope.row,scope.index)\"\n          v-if=\"userInfo.authority.includes('administrator')\"\n        >新增子项\n        </el-button>\n      </template>\n    </avue-crud>\n  </basic-container>\n</template>\n\n<script>\n  import {add, getDict, getDictTree, getList, remove, update} from \"@/api/system/dict\";\n  import {mapGetters} from \"vuex\";\n\n  export default {\n    data() {\n      return {\n        form: {},\n        selectionList: [],\n        loading: true,\n        query: {},\n        page: {\n          pageSize: 10,\n          currentPage: 1,\n          total: 0\n        },\n        option: {\n          searchShow: true,\n          searchMenuSpan: 6,\n          tip: false,\n          tree: true,\n          border: true,\n          index: true,\n          selection: true,\n          viewBtn: true,\n          menuWidth: 300,\n          column: [\n            {\n              label: \"字典编号\",\n              prop: \"code\",\n              search: true,\n              span: 24,\n              rules: [{\n                required: true,\n                message: \"请输入字典编号\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"字典名称\",\n              prop: \"dictValue\",\n              search: true,\n              rules: [{\n                required: true,\n                message: \"请输入字典名称\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"上级字典\",\n              prop: \"parentId\",\n              type: \"tree\",\n              dicData: [],\n              hide: true,\n              props: {\n                label: \"title\"\n              },\n              rules: [{\n                required: false,\n                message: \"请选择上级字典\",\n                trigger: \"click\"\n              }]\n            },\n            {\n              label: \"字典键值\",\n              prop: \"dictKey\",\n              type: \"number\",\n              rules: [{\n                required: true,\n                message: \"请输入字典键值\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"字典排序\",\n              prop: \"sort\",\n              type: \"number\",\n              rules: [{\n                required: true,\n                message: \"请输入字典排序\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"字典备注\",\n              prop: \"remark\",\n              search: true,\n              span: 24,\n              hide: true,\n            },\n          ]\n        },\n        data: []\n      };\n    },\n    computed: {\n      ...mapGetters([\"userInfo\", \"permission\"]),\n      permissionList() {\n        return {\n          addBtn: this.vaildData(this.permission.dict_add, false),\n          viewBtn: this.vaildData(this.permission.dict_view, false),\n          delBtn: this.vaildData(this.permission.dict_delete, false),\n          editBtn: this.vaildData(this.permission.dict_edit, false)\n        };\n      },\n      ids() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids.join(\",\");\n      }\n    },\n    methods: {\n      handleAdd(row) {\n        this.$refs.crud.value.code = row.code;\n        this.$refs.crud.value.parentId = row.id;\n        this.$refs.crud.option.column.filter(item => {\n          if (item.prop === \"code\") {\n            item.value = row.code;\n            item.addDisabled = true;\n          }\n          if (item.prop === \"parentId\") {\n            item.value = row.id;\n            item.addDisabled = true;\n          }\n        });\n        this.$refs.crud.rowAdd();\n      },\n      rowSave(row, done, loading) {\n        add(row).then(() => {\n          done();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowUpdate(row, index, done, loading) {\n        update(row).then(() => {\n          done();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowDel(row) {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(row.id);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n      searchReset() {\n        this.query = {};\n        this.onLoad(this.page);\n      },\n      searchChange(params, done) {\n        this.query = params;\n        this.page.currentPage = 1;\n        this.onLoad(this.page, params);\n        done();\n      },\n      selectionChange(list) {\n        this.selectionList = list;\n      },\n      handleDelete() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(this.ids);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      beforeOpen(done, type) {\n        if ([\"edit\", \"view\"].includes(type)) {\n          getDict(this.form.id).then(res => {\n            this.form = res.data.data;\n          });\n        }\n        done();\n      },\n      currentChange(currentPage){\n        this.page.currentPage = currentPage;\n      },\n      sizeChange(pageSize){\n        this.page.pageSize = pageSize;\n      },\n      onLoad(page, params = {}) {\n        this.loading = true;\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n          this.data = res.data.data;\n          this.loading = false;\n          getDictTree().then(res => {\n            const column = this.findObject(this.option.column, \"parentId\");\n            column.dicData = res.data.data;\n          });\n        });\n      }\n    }\n  };\n</script>\n\n<style>\n</style>\n"]}]}