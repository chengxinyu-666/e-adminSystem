{"remainingRequest":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workCode\\xiaoE\\大圣系统源码\\admin\\src\\views\\goods\\goodscategory.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\src\\views\\goods\\goodscategory.vue","mtime":1669969844000},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678778409044},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1678778390429},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678778409044},{"path":"D:\\workCode\\xiaoE\\大圣系统源码\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1678778410194}],"contextDependencies":[],"result":["\n  import {getList, getDetail, add, update, remove} from \"@/api/goods/goodscategory\";\n  import {mapGetters} from \"vuex\";\n\n  export default {\n    data() {\n      return {\n        dynamicTags: [],\n        inputVisible: false,\n        inputValue: '',\n        form: {},\n        query: {},\n        loading: true,\n        page: {\n          pageSize: 10,\n          currentPage: 1,\n          total: 0\n        },\n        selectionList: [],\n        option: {\n          searchShow: true,\n          searchMenuSpan: 6,\n          rowKey:'id',\n          rowParentKey:'parentId',\n          tip: false,\n          border: true,\n          tree: true,\n          index: true,\n          viewBtn: true,\n          editBtn: true,\n          addBtn: false,\n          delBtn: true,\n          menuWidth:300,\n          selection: true,\n          column: [\n            {\n              size: 'mini',\n              label: \"类型名称\",\n              prop: \"name\",\n              row: true,\n              span: 24,\n              rules: [{\n                required: true,\n                message: \"请输入类型名称\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"父级分类\",\n              prop: \"parentId\",\n              row: true,\n              type: \"tree\",\n              addDisabled:true,\n              dicUrl: \"/api/blade-goods/goodscategory/tree\",\n              hide: true,\n              span: 24,\n              props: {\n                label: \"title\"\n              },\n              rules: [{\n                required: false,\n                message: \"请选择上级分类\",\n                trigger: \"click\"\n              }]\n            },\n            {\n              label: \"标签\",\n              prop: \"tags\",\n              row: true,\n              span: 24\n            },\n            {\n              label: \"排序\",\n              prop: \"sort\",\n              row: true,\n              span: 24,\n              rules: [{\n                required: true,\n                message: \"请输入排序\",\n                trigger: \"blur\"\n              }]\n            },\n          ]\n        },\n        data: []\n      };\n    },\n    computed: {\n      ...mapGetters([\"permission\"]),\n      permissionList() {\n        return {\n          addBtn: this.vaildData(this.permission.goodscategory_add, false),\n          viewBtn: this.vaildData(this.permission.goodscategory_view, false),\n          delBtn: this.vaildData(this.permission.goodscategory_delete, false),\n          editBtn: this.vaildData(this.permission.goodscategory_edit, false)\n        };\n      },\n      ids() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids.join(\",\");\n      }\n    },\n    methods: {\n      handleAdd() {\n        this.$refs.crud.value.parentId = null;\n        this.$refs.crud.option.column.filter(item => {\n          if (item.prop === \"parentId\") {\n            item.value = null;\n            item.addDisabled = false;\n          }\n        });\n        console.log(this.$refs.crud.option.column)\n        this.$refs.crud.rowAdd();\n      },\n      handleAddChild(row) {\n        console.log(row)\n        this.$refs.crud.value.parentId = row.id;\n        this.$refs.crud.option.column.filter(item => {\n          if (item.prop === \"parentId\") {\n            item.value = row.id;\n            item.addDisabled = true;\n          }\n        });\n        this.$refs.crud.rowAdd();\n      },\n      rowSave(row, done, loading) {\n        if (this.dynamicTags.length>0){\n          row.tags = this.dynamicTags.join()\n        }else{\n          row.tags = \"\"\n        }\n        console.log(\"rowSave\",row)\n        add(row).then(() => {\n          done();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowUpdate(row, index, done, loading) {\n        console.log(\"rowUpdate\",row,this.dynamicTags)\n        if (this.dynamicTags.length>0){\n          row.tags = this.dynamicTags.join()\n        }else{\n          row.tags = \"\"\n        }\n        update(row).then(() => {\n          done();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowDel(row) {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(row.id);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n      handleDelete() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(this.ids);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      beforeOpen(done, type) {\n        console.log(type,done)\n        this.dynamicTags.splice(0,this.dynamicTags.length);\n        if ([\"edit\", \"view\"].includes(type)) {\n          getDetail(this.form.id).then(res => {\n            this.form = res.data.data;\n            if(this.form.tags){\n              this.dynamicTags =this.form.tags.split(\",\")\n            }\n            console.log(this.form)\n          });\n        }\n        done();\n      },\n      // beforeClose(done,type){\n      //   console.log(type)\n      //   if ([\"add\"].includes(type)) {\n      //     this.$refs.crud.value.parentId = '';\n      //   }\n      //   done();\n      // },\n      searchReset() {\n        this.query = {};\n        this.onLoad(this.page);\n      },\n      searchChange(params, done) {\n        this.query = params;\n        this.page.currentPage = 1;\n        this.onLoad(this.page, params);\n        done();\n      },\n      selectionChange(list) {\n        this.selectionList = list;\n      },\n      selectionClear() {\n        this.selectionList = [];\n        this.$refs.crud.toggleSelection();\n      },\n      currentChange(currentPage){\n        this.page.currentPage = currentPage;\n      },\n      sizeChange(pageSize){\n        this.page.pageSize = pageSize;\n      },\n      onLoad(page, params = {}) {\n        this.loading = true;\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n          const data = res.data.data;\n          this.page.total = data.total;\n          this.data = res.data.data;\n          this.loading = false;\n          this.selectionClear();\n        });\n      },\n      handleClose(tag) {\n        this.dynamicTags.splice(this.dynamicTags.indexOf(tag), 1);\n      },\n\n      showInput() {\n        this.inputVisible = true;\n        this.$nextTick(_ => {\n          this.$refs.saveTagInput.$refs.input.focus();\n        });\n      },\n\n      handleInputConfirm() {\n        let inputValue = this.inputValue;\n        if (inputValue) {\n          this.dynamicTags.push(inputValue);\n        }\n        this.inputVisible = false;\n        this.inputValue = '';\n      }\n    }\n  };\n",{"version":3,"sources":["goodscategory.vue"],"names":[],"mappings":";AAifile":"goodscategory.vue","sourceRoot":"src/views/goods","sourcesContent":["<template>\n  <basic-container>\n    <avue-crud :option=\"option\"\n               :table-loading=\"loading\"\n               :data=\"data\"\n               :permission=\"permissionList\"\n               :before-open=\"beforeOpen\"\n               v-model=\"form\"\n               ref=\"crud\"\n               @row-update=\"rowUpdate\"\n               @row-save=\"rowSave\"\n               @row-del=\"rowDel\"\n               @search-change=\"searchChange\"\n               @search-reset=\"searchReset\"\n               @selection-change=\"selectionChange\"\n               @current-change=\"currentChange\"\n               @size-change=\"sizeChange\"\n               @on-load=\"onLoad\">\n      <template slot=\"menuLeft\">\n        <el-button type=\"primary\"\n                   size=\"small\"\n                   icon=\"el-icon-plus\"\n                   v-if=\"permission.goodscategory_add\"\n                   @click=\"handleAdd\">新增\n        </el-button>\n        <el-button type=\"danger\"\n                   size=\"small\"\n                   icon=\"el-icon-delete\"\n                   plain\n                   v-if=\"permission.goodscategory_delete\"\n                   @click=\"handleDelete\">删 除\n        </el-button>\n      </template>\n      <template slot-scope=\"scope\" slot=\"menu\">\n        <el-button\n          type=\"text\"\n          icon=\"el-icon-circle-plus-outline\"\n          size=\"small\"\n          @click.stop=\"handleAddChild(scope.row,scope.index)\"\n          v-if=\"scope.row.parentId == '0'\"\n        >新增二级\n        </el-button>\n      </template>\n      <template slot-scope=\"{type,disabled}\" slot=\"tagsForm\">\n        <div v-if=\"type=='add'\">\n          <el-tag\n            :key=\"tag\"\n            v-for=\"tag in dynamicTags\"\n            closable\n            :disable-transitions=\"false\"\n            @close=\"handleClose(tag)\">\n            {{tag}}\n          </el-tag>\n          <el-input\n            class=\"input-new-tag\"\n            v-if=\"inputVisible\"\n            v-model=\"inputValue\"\n            ref=\"saveTagInput\"\n            size=\"small\"\n            @keyup.enter.native=\"handleInputConfirm\"\n            @blur=\"handleInputConfirm\"\n          >\n          </el-input>\n          <el-button v-else class=\"button-new-tag\" size=\"small\" @click=\"showInput\">+ 新增标签</el-button>\n        </div>\n        <div v-if=\"type=='edit'\">\n          <el-tag\n            :key=\"tag\"\n            v-for=\"tag in dynamicTags\"\n            closable\n            :disable-transitions=\"false\"\n            @close=\"handleClose(tag)\">\n            {{tag}}\n          </el-tag>\n          <el-input\n            class=\"input-new-tag\"\n            v-if=\"inputVisible\"\n            v-model=\"inputValue\"\n            ref=\"saveTagInput\"\n            size=\"small\"\n            @keyup.enter.native=\"handleInputConfirm\"\n            @blur=\"handleInputConfirm\">\n          </el-input>\n          <el-button v-else class=\"button-new-tag\" size=\"small\" @click=\"showInput\">+ 添加标签</el-button>\n        </div>\n        <div v-else-if=\"type=='view'\">\n          <el-tag v-if=\"form.tags.length>0\" v-for=\"tag in form.tags.split(',')\">{{tag}}</el-tag>\n        </div>\n      </template>\n      <template slot=\"tags\" slot-scope=\"{row,index}\">\n        <el-tag v-if=\"row.tags.length>0\" v-for=\"tag in row.tags.split(',')\">{{tag}}</el-tag>\n      </template>\n    </avue-crud>\n  </basic-container>\n</template>\n\n<script>\n  import {getList, getDetail, add, update, remove} from \"@/api/goods/goodscategory\";\n  import {mapGetters} from \"vuex\";\n\n  export default {\n    data() {\n      return {\n        dynamicTags: [],\n        inputVisible: false,\n        inputValue: '',\n        form: {},\n        query: {},\n        loading: true,\n        page: {\n          pageSize: 10,\n          currentPage: 1,\n          total: 0\n        },\n        selectionList: [],\n        option: {\n          searchShow: true,\n          searchMenuSpan: 6,\n          rowKey:'id',\n          rowParentKey:'parentId',\n          tip: false,\n          border: true,\n          tree: true,\n          index: true,\n          viewBtn: true,\n          editBtn: true,\n          addBtn: false,\n          delBtn: true,\n          menuWidth:300,\n          selection: true,\n          column: [\n            {\n              size: 'mini',\n              label: \"类型名称\",\n              prop: \"name\",\n              row: true,\n              span: 24,\n              rules: [{\n                required: true,\n                message: \"请输入类型名称\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"父级分类\",\n              prop: \"parentId\",\n              row: true,\n              type: \"tree\",\n              addDisabled:true,\n              dicUrl: \"/api/blade-goods/goodscategory/tree\",\n              hide: true,\n              span: 24,\n              props: {\n                label: \"title\"\n              },\n              rules: [{\n                required: false,\n                message: \"请选择上级分类\",\n                trigger: \"click\"\n              }]\n            },\n            {\n              label: \"标签\",\n              prop: \"tags\",\n              row: true,\n              span: 24\n            },\n            {\n              label: \"排序\",\n              prop: \"sort\",\n              row: true,\n              span: 24,\n              rules: [{\n                required: true,\n                message: \"请输入排序\",\n                trigger: \"blur\"\n              }]\n            },\n          ]\n        },\n        data: []\n      };\n    },\n    computed: {\n      ...mapGetters([\"permission\"]),\n      permissionList() {\n        return {\n          addBtn: this.vaildData(this.permission.goodscategory_add, false),\n          viewBtn: this.vaildData(this.permission.goodscategory_view, false),\n          delBtn: this.vaildData(this.permission.goodscategory_delete, false),\n          editBtn: this.vaildData(this.permission.goodscategory_edit, false)\n        };\n      },\n      ids() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids.join(\",\");\n      }\n    },\n    methods: {\n      handleAdd() {\n        this.$refs.crud.value.parentId = null;\n        this.$refs.crud.option.column.filter(item => {\n          if (item.prop === \"parentId\") {\n            item.value = null;\n            item.addDisabled = false;\n          }\n        });\n        console.log(this.$refs.crud.option.column)\n        this.$refs.crud.rowAdd();\n      },\n      handleAddChild(row) {\n        console.log(row)\n        this.$refs.crud.value.parentId = row.id;\n        this.$refs.crud.option.column.filter(item => {\n          if (item.prop === \"parentId\") {\n            item.value = row.id;\n            item.addDisabled = true;\n          }\n        });\n        this.$refs.crud.rowAdd();\n      },\n      rowSave(row, done, loading) {\n        if (this.dynamicTags.length>0){\n          row.tags = this.dynamicTags.join()\n        }else{\n          row.tags = \"\"\n        }\n        console.log(\"rowSave\",row)\n        add(row).then(() => {\n          done();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowUpdate(row, index, done, loading) {\n        console.log(\"rowUpdate\",row,this.dynamicTags)\n        if (this.dynamicTags.length>0){\n          row.tags = this.dynamicTags.join()\n        }else{\n          row.tags = \"\"\n        }\n        update(row).then(() => {\n          done();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowDel(row) {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(row.id);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n      handleDelete() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(this.ids);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      beforeOpen(done, type) {\n        console.log(type,done)\n        this.dynamicTags.splice(0,this.dynamicTags.length);\n        if ([\"edit\", \"view\"].includes(type)) {\n          getDetail(this.form.id).then(res => {\n            this.form = res.data.data;\n            if(this.form.tags){\n              this.dynamicTags =this.form.tags.split(\",\")\n            }\n            console.log(this.form)\n          });\n        }\n        done();\n      },\n      // beforeClose(done,type){\n      //   console.log(type)\n      //   if ([\"add\"].includes(type)) {\n      //     this.$refs.crud.value.parentId = '';\n      //   }\n      //   done();\n      // },\n      searchReset() {\n        this.query = {};\n        this.onLoad(this.page);\n      },\n      searchChange(params, done) {\n        this.query = params;\n        this.page.currentPage = 1;\n        this.onLoad(this.page, params);\n        done();\n      },\n      selectionChange(list) {\n        this.selectionList = list;\n      },\n      selectionClear() {\n        this.selectionList = [];\n        this.$refs.crud.toggleSelection();\n      },\n      currentChange(currentPage){\n        this.page.currentPage = currentPage;\n      },\n      sizeChange(pageSize){\n        this.page.pageSize = pageSize;\n      },\n      onLoad(page, params = {}) {\n        this.loading = true;\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n          const data = res.data.data;\n          this.page.total = data.total;\n          this.data = res.data.data;\n          this.loading = false;\n          this.selectionClear();\n        });\n      },\n      handleClose(tag) {\n        this.dynamicTags.splice(this.dynamicTags.indexOf(tag), 1);\n      },\n\n      showInput() {\n        this.inputVisible = true;\n        this.$nextTick(_ => {\n          this.$refs.saveTagInput.$refs.input.focus();\n        });\n      },\n\n      handleInputConfirm() {\n        let inputValue = this.inputValue;\n        if (inputValue) {\n          this.dynamicTags.push(inputValue);\n        }\n        this.inputVisible = false;\n        this.inputValue = '';\n      }\n    }\n  };\n</script>\n\n<style>\n  .el-tag + .el-tag {\n    margin-left: 10px;\n  }\n  .button-new-tag {\n    margin-left: 10px;\n    height: 32px;\n    line-height: 30px;\n    padding-top: 0;\n    padding-bottom: 0;\n  }\n  .input-new-tag {\n    width: 90px;\n    margin-left: 10px;\n    vertical-align: bottom;\n  }\n</style>\n"]}]}